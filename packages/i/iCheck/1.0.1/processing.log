2023/08/01 15:30:46 ExtractTarGz: uknown type: 67 in pax_global_header
2023/08/01 15:30:46 optimizing files (Js true, Css true, Png true, Jpg true)
2023/08/01 15:30:46 /tmp/work/icheck.min.js already has corresponding compressed file
2023/08/01 15:30:46 sri /tmp/work/icheck.js -> /output/icheck.js.sri
2023/08/01 15:30:46 algorithm: run /usr/bin/brotli --quality=11 --output=/output/icheck.js.br /tmp/work/icheck.js
2023/08/01 15:30:46 /tmp/work/icheck.min.js is already compressed
2023/08/01 15:30:46 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/all.min.css /tmp/work/skins/all.css
2023/08/01 15:30:46 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/flat/_all.min.css /tmp/work/skins/flat/_all.css
2023/08/01 15:30:46 sri /tmp/work/icheck.min.js -> /output/icheck.min.js.sri
2023/08/01 15:30:46 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/flat/aero.min.css /tmp/work/skins/flat/aero.css
2023/08/01 15:30:46 algorithm: run /usr/bin/brotli --quality=11 --output=/output/icheck.min.js.br /tmp/work/icheck.min.js
2023/08/01 15:30:46 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/flat/aero@2x.png /tmp/work/skins/flat/aero@2x.png
2023/08/01 15:30:46 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/flat/aero.png /tmp/work/skins/flat/aero.png
2023/08/01 15:30:46 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/flat/blue.min.css /tmp/work/skins/flat/blue.css
2023/08/01 15:30:47 br /tmp/work/icheck.min.js -> /output/icheck.min.js.br
2023/08/01 15:30:47 gz /tmp/work/icheck.min.js -> /output/icheck.min.js.gz
2023/08/01 15:30:47 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/flat/blue.png /tmp/work/skins/flat/blue.png
2023/08/01 15:30:47 br /tmp/work/icheck.js -> /output/icheck.js.br
2023/08/01 15:30:47 gz /tmp/work/icheck.js -> /output/icheck.js.gz
2023/08/01 15:30:47 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/flat/blue@2x.png /tmp/work/skins/flat/blue@2x.png
2023/08/01 15:30:48 sri /tmp/work/skins/flat/aero.min.css -> /output/skins/flat/aero.min.css.sri
2023/08/01 15:30:48 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/aero.min.css.br /tmp/work/skins/flat/aero.min.css
2023/08/01 15:30:48 br /tmp/work/skins/flat/aero.min.css -> /output/skins/flat/aero.min.css.br
2023/08/01 15:30:48 gz /tmp/work/skins/flat/aero.min.css -> /output/skins/flat/aero.min.css.gz
2023/08/01 15:30:48 sri /tmp/work/skins/flat/aero.css -> /output/skins/flat/aero.css.sri
2023/08/01 15:30:48 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/aero.css.br /tmp/work/skins/flat/aero.css
2023/08/01 15:30:48 sri /tmp/work/skins/flat/blue.min.css -> /output/skins/flat/blue.min.css.sri
2023/08/01 15:30:48 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/blue.min.css.br /tmp/work/skins/flat/blue.min.css
2023/08/01 15:30:48 br /tmp/work/skins/flat/aero.css -> /output/skins/flat/aero.css.br
2023/08/01 15:30:48 gz /tmp/work/skins/flat/aero.css -> /output/skins/flat/aero.css.gz
2023/08/01 15:30:48 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/flat/flat.min.css /tmp/work/skins/flat/flat.css
2023/08/01 15:30:48 br /tmp/work/skins/flat/blue.min.css -> /output/skins/flat/blue.min.css.br
2023/08/01 15:30:48 gz /tmp/work/skins/flat/blue.min.css -> /output/skins/flat/blue.min.css.gz
2023/08/01 15:30:48 sri /tmp/work/skins/flat/blue.css -> /output/skins/flat/blue.css.sri
2023/08/01 15:30:48 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/blue.css.br /tmp/work/skins/flat/blue.css
2023/08/01 15:30:48 br /tmp/work/skins/flat/blue.css -> /output/skins/flat/blue.css.br
2023/08/01 15:30:48 gz /tmp/work/skins/flat/blue.css -> /output/skins/flat/blue.css.gz
2023/08/01 15:30:48 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/flat/flat.png /tmp/work/skins/flat/flat.png
2023/08/01 15:30:48 sri /tmp/work/skins/flat/_all.min.css -> /output/skins/flat/_all.min.css.sri
2023/08/01 15:30:48 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/_all.min.css.br /tmp/work/skins/flat/_all.min.css
2023/08/01 15:30:48 br /tmp/work/skins/flat/_all.min.css -> /output/skins/flat/_all.min.css.br
2023/08/01 15:30:48 gz /tmp/work/skins/flat/_all.min.css -> /output/skins/flat/_all.min.css.gz
2023/08/01 15:30:48 sri /tmp/work/skins/flat/_all.css -> /output/skins/flat/_all.css.sri
2023/08/01 15:30:48 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/_all.css.br /tmp/work/skins/flat/_all.css
2023/08/01 15:30:48 br /tmp/work/skins/flat/_all.css -> /output/skins/flat/_all.css.br
2023/08/01 15:30:48 gz /tmp/work/skins/flat/_all.css -> /output/skins/flat/_all.css.gz
2023/08/01 15:30:48 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/flat/flat@2x.png /tmp/work/skins/flat/flat@2x.png
2023/08/01 15:30:49 sri /tmp/work/skins/flat/flat.min.css -> /output/skins/flat/flat.min.css.sri
2023/08/01 15:30:49 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/flat.min.css.br /tmp/work/skins/flat/flat.min.css
2023/08/01 15:30:49 br /tmp/work/skins/flat/flat.min.css -> /output/skins/flat/flat.min.css.br
2023/08/01 15:30:49 gz /tmp/work/skins/flat/flat.min.css -> /output/skins/flat/flat.min.css.gz
2023/08/01 15:30:49 sri /tmp/work/skins/flat/flat.css -> /output/skins/flat/flat.css.sri
2023/08/01 15:30:49 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/flat.css.br /tmp/work/skins/flat/flat.css
2023/08/01 15:30:49 sri /tmp/work/skins/all.min.css -> /output/skins/all.min.css.sri
2023/08/01 15:30:49 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/all.min.css.br /tmp/work/skins/all.min.css
2023/08/01 15:30:49 br /tmp/work/skins/flat/flat.css -> /output/skins/flat/flat.css.br
2023/08/01 15:30:49 gz /tmp/work/skins/flat/flat.css -> /output/skins/flat/flat.css.gz
2023/08/01 15:30:49 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/flat/green.min.css /tmp/work/skins/flat/green.css
2023/08/01 15:30:50 br /tmp/work/skins/all.min.css -> /output/skins/all.min.css.br
2023/08/01 15:30:50 gz /tmp/work/skins/all.min.css -> /output/skins/all.min.css.gz
2023/08/01 15:30:50 sri /tmp/work/skins/all.css -> /output/skins/all.css.sri
2023/08/01 15:30:50 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/all.css.br /tmp/work/skins/all.css
2023/08/01 15:30:50 br /tmp/work/skins/all.css -> /output/skins/all.css.br
2023/08/01 15:30:50 gz /tmp/work/skins/all.css -> /output/skins/all.css.gz
2023/08/01 15:30:50 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/flat/green.png /tmp/work/skins/flat/green.png
2023/08/01 15:30:50 sri /tmp/work/skins/flat/green.min.css -> /output/skins/flat/green.min.css.sri
2023/08/01 15:30:50 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/green.min.css.br /tmp/work/skins/flat/green.min.css
2023/08/01 15:30:50 br /tmp/work/skins/flat/green.min.css -> /output/skins/flat/green.min.css.br
2023/08/01 15:30:50 gz /tmp/work/skins/flat/green.min.css -> /output/skins/flat/green.min.css.gz
2023/08/01 15:30:50 sri /tmp/work/skins/flat/green.css -> /output/skins/flat/green.css.sri
2023/08/01 15:30:50 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/green.css.br /tmp/work/skins/flat/green.css
2023/08/01 15:30:50 br /tmp/work/skins/flat/green.css -> /output/skins/flat/green.css.br
2023/08/01 15:30:50 gz /tmp/work/skins/flat/green.css -> /output/skins/flat/green.css.gz
2023/08/01 15:30:50 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/flat/green@2x.png /tmp/work/skins/flat/green@2x.png
2023/08/01 15:31:12 Optimizing /tmp/work/skins/flat/blue.png
Input size: 1518 (1K)
Result size: 1256 (1K). Percentage of original: 82.740%
Result is smaller


2023/08/01 15:31:12 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/blue.png.br /tmp/work/skins/flat/blue.png
2023/08/01 15:31:13 br /tmp/work/skins/flat/blue.png -> /output/skins/flat/blue.png.br
2023/08/01 15:31:13 gz /tmp/work/skins/flat/blue.png -> /output/skins/flat/blue.png.gz
2023/08/01 15:31:13 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/flat/grey.min.css /tmp/work/skins/flat/grey.css
2023/08/01 15:31:14 sri /tmp/work/skins/flat/grey.min.css -> /output/skins/flat/grey.min.css.sri
2023/08/01 15:31:14 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/grey.min.css.br /tmp/work/skins/flat/grey.min.css
2023/08/01 15:31:14 br /tmp/work/skins/flat/grey.min.css -> /output/skins/flat/grey.min.css.br
2023/08/01 15:31:14 gz /tmp/work/skins/flat/grey.min.css -> /output/skins/flat/grey.min.css.gz
2023/08/01 15:31:14 sri /tmp/work/skins/flat/grey.css -> /output/skins/flat/grey.css.sri
2023/08/01 15:31:14 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/grey.css.br /tmp/work/skins/flat/grey.css
2023/08/01 15:31:14 br /tmp/work/skins/flat/grey.css -> /output/skins/flat/grey.css.br
2023/08/01 15:31:14 gz /tmp/work/skins/flat/grey.css -> /output/skins/flat/grey.css.gz
2023/08/01 15:31:14 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/flat/grey.png /tmp/work/skins/flat/grey.png
2023/08/01 15:31:14 Optimizing /tmp/work/skins/flat/aero.png
Input size: 1520 (1K)
Result size: 1258 (1K). Percentage of original: 82.763%
Result is smaller


2023/08/01 15:31:14 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/aero.png.br /tmp/work/skins/flat/aero.png
2023/08/01 15:31:14 br /tmp/work/skins/flat/aero.png -> /output/skins/flat/aero.png.br
2023/08/01 15:31:14 gz /tmp/work/skins/flat/aero.png -> /output/skins/flat/aero.png.gz
2023/08/01 15:31:14 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/flat/grey@2x.png /tmp/work/skins/flat/grey@2x.png
2023/08/01 15:31:16 Optimizing /tmp/work/skins/flat/flat.png
Input size: 1515 (1K)
Result size: 1257 (1K). Percentage of original: 82.970%
Result is smaller


2023/08/01 15:31:16 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/flat.png.br /tmp/work/skins/flat/flat.png
2023/08/01 15:31:16 br /tmp/work/skins/flat/flat.png -> /output/skins/flat/flat.png.br
2023/08/01 15:31:16 gz /tmp/work/skins/flat/flat.png -> /output/skins/flat/flat.png.gz
2023/08/01 15:31:16 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/flat/orange.min.css /tmp/work/skins/flat/orange.css
2023/08/01 15:31:17 sri /tmp/work/skins/flat/orange.min.css -> /output/skins/flat/orange.min.css.sri
2023/08/01 15:31:17 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/orange.min.css.br /tmp/work/skins/flat/orange.min.css
2023/08/01 15:31:17 br /tmp/work/skins/flat/orange.min.css -> /output/skins/flat/orange.min.css.br
2023/08/01 15:31:17 gz /tmp/work/skins/flat/orange.min.css -> /output/skins/flat/orange.min.css.gz
2023/08/01 15:31:17 sri /tmp/work/skins/flat/orange.css -> /output/skins/flat/orange.css.sri
2023/08/01 15:31:17 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/orange.css.br /tmp/work/skins/flat/orange.css
2023/08/01 15:31:17 br /tmp/work/skins/flat/orange.css -> /output/skins/flat/orange.css.br
2023/08/01 15:31:17 gz /tmp/work/skins/flat/orange.css -> /output/skins/flat/orange.css.gz
2023/08/01 15:31:17 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/flat/orange.png /tmp/work/skins/flat/orange.png
2023/08/01 15:31:19 Optimizing /tmp/work/skins/flat/green.png
Input size: 1444 (1K)
Result size: 1257 (1K). Percentage of original: 87.050%
Result is smaller


2023/08/01 15:31:19 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/green.png.br /tmp/work/skins/flat/green.png
2023/08/01 15:31:19 br /tmp/work/skins/flat/green.png -> /output/skins/flat/green.png.br
2023/08/01 15:31:19 gz /tmp/work/skins/flat/green.png -> /output/skins/flat/green.png.gz
2023/08/01 15:31:19 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/flat/orange@2x.png /tmp/work/skins/flat/orange@2x.png
2023/08/01 15:31:28 Optimizing /tmp/work/skins/flat/aero@2x.png
Input size: 3218 (3K)
Result size: 3020 (2K). Percentage of original: 93.847%
Result is smaller


2023/08/01 15:31:28 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/aero@2x.png.br /tmp/work/skins/flat/aero@2x.png
2023/08/01 15:31:29 br /tmp/work/skins/flat/aero@2x.png -> /output/skins/flat/aero@2x.png.br
2023/08/01 15:31:29 gz /tmp/work/skins/flat/aero@2x.png -> /output/skins/flat/aero@2x.png.gz
2023/08/01 15:31:29 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/flat/pink.min.css /tmp/work/skins/flat/pink.css
2023/08/01 15:31:29 Optimizing /tmp/work/skins/flat/blue@2x.png
Input size: 3217 (3K)
Result size: 3023 (2K). Percentage of original: 93.970%
Result is smaller


2023/08/01 15:31:29 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/blue@2x.png.br /tmp/work/skins/flat/blue@2x.png
2023/08/01 15:31:29 br /tmp/work/skins/flat/blue@2x.png -> /output/skins/flat/blue@2x.png.br
2023/08/01 15:31:29 gz /tmp/work/skins/flat/blue@2x.png -> /output/skins/flat/blue@2x.png.gz
2023/08/01 15:31:29 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/flat/pink.png /tmp/work/skins/flat/pink.png
2023/08/01 15:31:30 sri /tmp/work/skins/flat/pink.min.css -> /output/skins/flat/pink.min.css.sri
2023/08/01 15:31:30 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/pink.min.css.br /tmp/work/skins/flat/pink.min.css
2023/08/01 15:31:30 br /tmp/work/skins/flat/pink.min.css -> /output/skins/flat/pink.min.css.br
2023/08/01 15:31:30 gz /tmp/work/skins/flat/pink.min.css -> /output/skins/flat/pink.min.css.gz
2023/08/01 15:31:30 sri /tmp/work/skins/flat/pink.css -> /output/skins/flat/pink.css.sri
2023/08/01 15:31:30 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/pink.css.br /tmp/work/skins/flat/pink.css
2023/08/01 15:31:30 Optimizing /tmp/work/skins/flat/flat@2x.png
Input size: 3217 (3K)
Result size: 3020 (2K). Percentage of original: 93.876%
Result is smaller


2023/08/01 15:31:30 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/flat@2x.png.br /tmp/work/skins/flat/flat@2x.png
2023/08/01 15:31:30 br /tmp/work/skins/flat/pink.css -> /output/skins/flat/pink.css.br
2023/08/01 15:31:30 gz /tmp/work/skins/flat/pink.css -> /output/skins/flat/pink.css.gz
2023/08/01 15:31:30 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/flat/pink@2x.png /tmp/work/skins/flat/pink@2x.png
2023/08/01 15:31:30 br /tmp/work/skins/flat/flat@2x.png -> /output/skins/flat/flat@2x.png.br
2023/08/01 15:31:30 gz /tmp/work/skins/flat/flat@2x.png -> /output/skins/flat/flat@2x.png.gz
2023/08/01 15:31:30 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/flat/purple.min.css /tmp/work/skins/flat/purple.css
2023/08/01 15:31:31 sri /tmp/work/skins/flat/purple.min.css -> /output/skins/flat/purple.min.css.sri
2023/08/01 15:31:31 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/purple.min.css.br /tmp/work/skins/flat/purple.min.css
2023/08/01 15:31:31 br /tmp/work/skins/flat/purple.min.css -> /output/skins/flat/purple.min.css.br
2023/08/01 15:31:31 gz /tmp/work/skins/flat/purple.min.css -> /output/skins/flat/purple.min.css.gz
2023/08/01 15:31:31 sri /tmp/work/skins/flat/purple.css -> /output/skins/flat/purple.css.sri
2023/08/01 15:31:31 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/purple.css.br /tmp/work/skins/flat/purple.css
2023/08/01 15:31:31 br /tmp/work/skins/flat/purple.css -> /output/skins/flat/purple.css.br
2023/08/01 15:31:31 gz /tmp/work/skins/flat/purple.css -> /output/skins/flat/purple.css.gz
2023/08/01 15:31:31 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/flat/purple.png /tmp/work/skins/flat/purple.png
2023/08/01 15:31:32 Optimizing /tmp/work/skins/flat/green@2x.png
Input size: 3117 (3K)
Result size: 3019 (2K). Percentage of original: 96.856%
Result is smaller


2023/08/01 15:31:32 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/green@2x.png.br /tmp/work/skins/flat/green@2x.png
2023/08/01 15:31:32 br /tmp/work/skins/flat/green@2x.png -> /output/skins/flat/green@2x.png.br
2023/08/01 15:31:32 gz /tmp/work/skins/flat/green@2x.png -> /output/skins/flat/green@2x.png.gz
2023/08/01 15:31:32 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/flat/purple@2x.png /tmp/work/skins/flat/purple@2x.png
2023/08/01 15:31:45 Optimizing /tmp/work/skins/flat/grey.png
Input size: 1516 (1K)
Result size: 1257 (1K). Percentage of original: 82.916%
Result is smaller


2023/08/01 15:31:45 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/grey.png.br /tmp/work/skins/flat/grey.png
2023/08/01 15:31:45 br /tmp/work/skins/flat/grey.png -> /output/skins/flat/grey.png.br
2023/08/01 15:31:45 gz /tmp/work/skins/flat/grey.png -> /output/skins/flat/grey.png.gz
2023/08/01 15:31:45 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/flat/red.min.css /tmp/work/skins/flat/red.css
2023/08/01 15:31:46 sri /tmp/work/skins/flat/red.min.css -> /output/skins/flat/red.min.css.sri
2023/08/01 15:31:46 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/red.min.css.br /tmp/work/skins/flat/red.min.css
2023/08/01 15:31:46 br /tmp/work/skins/flat/red.min.css -> /output/skins/flat/red.min.css.br
2023/08/01 15:31:46 gz /tmp/work/skins/flat/red.min.css -> /output/skins/flat/red.min.css.gz
2023/08/01 15:31:46 sri /tmp/work/skins/flat/red.css -> /output/skins/flat/red.css.sri
2023/08/01 15:31:46 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/red.css.br /tmp/work/skins/flat/red.css
2023/08/01 15:31:46 br /tmp/work/skins/flat/red.css -> /output/skins/flat/red.css.br
2023/08/01 15:31:46 gz /tmp/work/skins/flat/red.css -> /output/skins/flat/red.css.gz
2023/08/01 15:31:46 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/flat/red.png /tmp/work/skins/flat/red.png
2023/08/01 15:31:49 Optimizing /tmp/work/skins/flat/orange.png
Input size: 1518 (1K)
Result size: 1256 (1K). Percentage of original: 82.740%
Result is smaller


2023/08/01 15:31:49 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/orange.png.br /tmp/work/skins/flat/orange.png
2023/08/01 15:31:49 br /tmp/work/skins/flat/orange.png -> /output/skins/flat/orange.png.br
2023/08/01 15:31:49 gz /tmp/work/skins/flat/orange.png -> /output/skins/flat/orange.png.gz
2023/08/01 15:31:49 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/flat/red@2x.png /tmp/work/skins/flat/red@2x.png
2023/08/01 15:31:56 Optimizing /tmp/work/skins/flat/grey@2x.png
Input size: 3217 (3K)
Result size: 3020 (2K). Percentage of original: 93.876%
Result is smaller


2023/08/01 15:31:56 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/grey@2x.png.br /tmp/work/skins/flat/grey@2x.png
2023/08/01 15:31:57 br /tmp/work/skins/flat/grey@2x.png -> /output/skins/flat/grey@2x.png.br
2023/08/01 15:31:57 gz /tmp/work/skins/flat/grey@2x.png -> /output/skins/flat/grey@2x.png.gz
2023/08/01 15:31:57 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/flat/yellow.min.css /tmp/work/skins/flat/yellow.css
2023/08/01 15:31:58 sri /tmp/work/skins/flat/yellow.min.css -> /output/skins/flat/yellow.min.css.sri
2023/08/01 15:31:58 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/yellow.min.css.br /tmp/work/skins/flat/yellow.min.css
2023/08/01 15:31:58 br /tmp/work/skins/flat/yellow.min.css -> /output/skins/flat/yellow.min.css.br
2023/08/01 15:31:58 gz /tmp/work/skins/flat/yellow.min.css -> /output/skins/flat/yellow.min.css.gz
2023/08/01 15:31:58 sri /tmp/work/skins/flat/yellow.css -> /output/skins/flat/yellow.css.sri
2023/08/01 15:31:58 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/yellow.css.br /tmp/work/skins/flat/yellow.css
2023/08/01 15:31:58 br /tmp/work/skins/flat/yellow.css -> /output/skins/flat/yellow.css.br
2023/08/01 15:31:58 gz /tmp/work/skins/flat/yellow.css -> /output/skins/flat/yellow.css.gz
2023/08/01 15:31:58 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/flat/yellow.png /tmp/work/skins/flat/yellow.png
2023/08/01 15:32:00 Optimizing /tmp/work/skins/flat/pink.png
Input size: 1522 (1K)
Result size: 1257 (1K). Percentage of original: 82.589%
Result is smaller


2023/08/01 15:32:00 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/pink.png.br /tmp/work/skins/flat/pink.png
2023/08/01 15:32:00 br /tmp/work/skins/flat/pink.png -> /output/skins/flat/pink.png.br
2023/08/01 15:32:00 gz /tmp/work/skins/flat/pink.png -> /output/skins/flat/pink.png.gz
2023/08/01 15:32:00 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/flat/yellow@2x.png /tmp/work/skins/flat/yellow@2x.png
2023/08/01 15:32:01 Optimizing /tmp/work/skins/flat/orange@2x.png
Input size: 3275 (3K)
Result size: 3022 (2K). Percentage of original: 92.275%
Result is smaller


2023/08/01 15:32:01 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/orange@2x.png.br /tmp/work/skins/flat/orange@2x.png
2023/08/01 15:32:01 br /tmp/work/skins/flat/orange@2x.png -> /output/skins/flat/orange@2x.png.br
2023/08/01 15:32:01 gz /tmp/work/skins/flat/orange@2x.png -> /output/skins/flat/orange@2x.png.gz
2023/08/01 15:32:01 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/futurico/futurico.min.css /tmp/work/skins/futurico/futurico.css
2023/08/01 15:32:02 Optimizing /tmp/work/skins/flat/purple.png
Input size: 1519 (1K)
Result size: 1257 (1K). Percentage of original: 82.752%
Result is smaller


2023/08/01 15:32:02 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/purple.png.br /tmp/work/skins/flat/purple.png
2023/08/01 15:32:02 br /tmp/work/skins/flat/purple.png -> /output/skins/flat/purple.png.br
2023/08/01 15:32:02 gz /tmp/work/skins/flat/purple.png -> /output/skins/flat/purple.png.gz
2023/08/01 15:32:02 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/futurico/futurico.png /tmp/work/skins/futurico/futurico.png
2023/08/01 15:32:02 sri /tmp/work/skins/futurico/futurico.min.css -> /output/skins/futurico/futurico.min.css.sri
2023/08/01 15:32:02 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/futurico/futurico.min.css.br /tmp/work/skins/futurico/futurico.min.css
2023/08/01 15:32:02 br /tmp/work/skins/futurico/futurico.min.css -> /output/skins/futurico/futurico.min.css.br
2023/08/01 15:32:02 gz /tmp/work/skins/futurico/futurico.min.css -> /output/skins/futurico/futurico.min.css.gz
2023/08/01 15:32:02 sri /tmp/work/skins/futurico/futurico.css -> /output/skins/futurico/futurico.css.sri
2023/08/01 15:32:02 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/futurico/futurico.css.br /tmp/work/skins/futurico/futurico.css
2023/08/01 15:32:02 br /tmp/work/skins/futurico/futurico.css -> /output/skins/futurico/futurico.css.br
2023/08/01 15:32:02 gz /tmp/work/skins/futurico/futurico.css -> /output/skins/futurico/futurico.css.gz
2023/08/01 15:32:02 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/futurico/futurico@2x.png /tmp/work/skins/futurico/futurico@2x.png
2023/08/01 15:32:09 Optimizing /tmp/work/skins/futurico/futurico.png
Input size: 1734 (1K)
Result size: 1553 (1K). Percentage of original: 89.562%
Result is smaller


2023/08/01 15:32:09 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/futurico/futurico.png.br /tmp/work/skins/futurico/futurico.png
2023/08/01 15:32:09 br /tmp/work/skins/futurico/futurico.png -> /output/skins/futurico/futurico.png.br
2023/08/01 15:32:09 gz /tmp/work/skins/futurico/futurico.png -> /output/skins/futurico/futurico.png.gz
2023/08/01 15:32:09 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/line/_all.min.css /tmp/work/skins/line/_all.css
2023/08/01 15:32:10 sri /tmp/work/skins/line/_all.min.css -> /output/skins/line/_all.min.css.sri
2023/08/01 15:32:10 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/line/_all.min.css.br /tmp/work/skins/line/_all.min.css
2023/08/01 15:32:11 br /tmp/work/skins/line/_all.min.css -> /output/skins/line/_all.min.css.br
2023/08/01 15:32:11 gz /tmp/work/skins/line/_all.min.css -> /output/skins/line/_all.min.css.gz
2023/08/01 15:32:11 sri /tmp/work/skins/line/_all.css -> /output/skins/line/_all.css.sri
2023/08/01 15:32:11 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/line/_all.css.br /tmp/work/skins/line/_all.css
2023/08/01 15:32:11 br /tmp/work/skins/line/_all.css -> /output/skins/line/_all.css.br
2023/08/01 15:32:11 gz /tmp/work/skins/line/_all.css -> /output/skins/line/_all.css.gz
2023/08/01 15:32:11 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/line/aero.min.css /tmp/work/skins/line/aero.css
2023/08/01 15:32:12 sri /tmp/work/skins/line/aero.min.css -> /output/skins/line/aero.min.css.sri
2023/08/01 15:32:12 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/line/aero.min.css.br /tmp/work/skins/line/aero.min.css
2023/08/01 15:32:12 br /tmp/work/skins/line/aero.min.css -> /output/skins/line/aero.min.css.br
2023/08/01 15:32:12 gz /tmp/work/skins/line/aero.min.css -> /output/skins/line/aero.min.css.gz
2023/08/01 15:32:12 sri /tmp/work/skins/line/aero.css -> /output/skins/line/aero.css.sri
2023/08/01 15:32:12 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/line/aero.css.br /tmp/work/skins/line/aero.css
2023/08/01 15:32:12 br /tmp/work/skins/line/aero.css -> /output/skins/line/aero.css.br
2023/08/01 15:32:12 gz /tmp/work/skins/line/aero.css -> /output/skins/line/aero.css.gz
2023/08/01 15:32:12 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/line/blue.min.css /tmp/work/skins/line/blue.css
2023/08/01 15:32:13 sri /tmp/work/skins/line/blue.min.css -> /output/skins/line/blue.min.css.sri
2023/08/01 15:32:13 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/line/blue.min.css.br /tmp/work/skins/line/blue.min.css
2023/08/01 15:32:13 br /tmp/work/skins/line/blue.min.css -> /output/skins/line/blue.min.css.br
2023/08/01 15:32:13 gz /tmp/work/skins/line/blue.min.css -> /output/skins/line/blue.min.css.gz
2023/08/01 15:32:13 sri /tmp/work/skins/line/blue.css -> /output/skins/line/blue.css.sri
2023/08/01 15:32:13 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/line/blue.css.br /tmp/work/skins/line/blue.css
2023/08/01 15:32:13 br /tmp/work/skins/line/blue.css -> /output/skins/line/blue.css.br
2023/08/01 15:32:13 gz /tmp/work/skins/line/blue.css -> /output/skins/line/blue.css.gz
2023/08/01 15:32:13 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/line/green.min.css /tmp/work/skins/line/green.css
2023/08/01 15:32:15 sri /tmp/work/skins/line/green.min.css -> /output/skins/line/green.min.css.sri
2023/08/01 15:32:15 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/line/green.min.css.br /tmp/work/skins/line/green.min.css
2023/08/01 15:32:15 br /tmp/work/skins/line/green.min.css -> /output/skins/line/green.min.css.br
2023/08/01 15:32:15 gz /tmp/work/skins/line/green.min.css -> /output/skins/line/green.min.css.gz
2023/08/01 15:32:15 sri /tmp/work/skins/line/green.css -> /output/skins/line/green.css.sri
2023/08/01 15:32:15 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/line/green.css.br /tmp/work/skins/line/green.css
2023/08/01 15:32:15 br /tmp/work/skins/line/green.css -> /output/skins/line/green.css.br
2023/08/01 15:32:15 gz /tmp/work/skins/line/green.css -> /output/skins/line/green.css.gz
2023/08/01 15:32:15 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/line/grey.min.css /tmp/work/skins/line/grey.css
2023/08/01 15:32:15 Optimizing /tmp/work/skins/flat/pink@2x.png
Input size: 3218 (3K)
Result size: 3020 (2K). Percentage of original: 93.847%
Result is smaller


2023/08/01 15:32:15 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/pink@2x.png.br /tmp/work/skins/flat/pink@2x.png
2023/08/01 15:32:15 br /tmp/work/skins/flat/pink@2x.png -> /output/skins/flat/pink@2x.png.br
2023/08/01 15:32:15 gz /tmp/work/skins/flat/pink@2x.png -> /output/skins/flat/pink@2x.png.gz
2023/08/01 15:32:15 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/line/line.min.css /tmp/work/skins/line/line.css
2023/08/01 15:32:16 sri /tmp/work/skins/line/grey.min.css -> /output/skins/line/grey.min.css.sri
2023/08/01 15:32:16 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/line/grey.min.css.br /tmp/work/skins/line/grey.min.css
2023/08/01 15:32:16 br /tmp/work/skins/line/grey.min.css -> /output/skins/line/grey.min.css.br
2023/08/01 15:32:16 gz /tmp/work/skins/line/grey.min.css -> /output/skins/line/grey.min.css.gz
2023/08/01 15:32:16 sri /tmp/work/skins/line/grey.css -> /output/skins/line/grey.css.sri
2023/08/01 15:32:16 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/line/grey.css.br /tmp/work/skins/line/grey.css
2023/08/01 15:32:16 br /tmp/work/skins/line/grey.css -> /output/skins/line/grey.css.br
2023/08/01 15:32:16 gz /tmp/work/skins/line/grey.css -> /output/skins/line/grey.css.gz
2023/08/01 15:32:16 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/line/line.png /tmp/work/skins/line/line.png
2023/08/01 15:32:16 Optimizing /tmp/work/skins/flat/purple@2x.png
Input size: 3218 (3K)
Result size: 3020 (2K). Percentage of original: 93.847%
Result is smaller


2023/08/01 15:32:16 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/purple@2x.png.br /tmp/work/skins/flat/purple@2x.png
2023/08/01 15:32:16 br /tmp/work/skins/flat/purple@2x.png -> /output/skins/flat/purple@2x.png.br
2023/08/01 15:32:16 gz /tmp/work/skins/flat/purple@2x.png -> /output/skins/flat/purple@2x.png.gz
2023/08/01 15:32:16 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/line/line@2x.png /tmp/work/skins/line/line@2x.png
2023/08/01 15:32:17 sri /tmp/work/skins/line/line.min.css -> /output/skins/line/line.min.css.sri
2023/08/01 15:32:17 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/line/line.min.css.br /tmp/work/skins/line/line.min.css
2023/08/01 15:32:17 br /tmp/work/skins/line/line.min.css -> /output/skins/line/line.min.css.br
2023/08/01 15:32:17 gz /tmp/work/skins/line/line.min.css -> /output/skins/line/line.min.css.gz
2023/08/01 15:32:17 sri /tmp/work/skins/line/line.css -> /output/skins/line/line.css.sri
2023/08/01 15:32:17 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/line/line.css.br /tmp/work/skins/line/line.css
2023/08/01 15:32:17 br /tmp/work/skins/line/line.css -> /output/skins/line/line.css.br
2023/08/01 15:32:17 gz /tmp/work/skins/line/line.css -> /output/skins/line/line.css.gz
2023/08/01 15:32:17 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/line/orange.min.css /tmp/work/skins/line/orange.css
2023/08/01 15:32:17 Optimizing /tmp/work/skins/flat/red.png
Input size: 1516 (1K)
Result size: 1258 (1K). Percentage of original: 82.982%
Result is smaller


2023/08/01 15:32:17 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/red.png.br /tmp/work/skins/flat/red.png
2023/08/01 15:32:17 br /tmp/work/skins/flat/red.png -> /output/skins/flat/red.png.br
2023/08/01 15:32:17 gz /tmp/work/skins/flat/red.png -> /output/skins/flat/red.png.gz
2023/08/01 15:32:17 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/line/pink.min.css /tmp/work/skins/line/pink.css
2023/08/01 15:32:18 sri /tmp/work/skins/line/orange.min.css -> /output/skins/line/orange.min.css.sri
2023/08/01 15:32:18 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/line/orange.min.css.br /tmp/work/skins/line/orange.min.css
2023/08/01 15:32:18 br /tmp/work/skins/line/orange.min.css -> /output/skins/line/orange.min.css.br
2023/08/01 15:32:18 gz /tmp/work/skins/line/orange.min.css -> /output/skins/line/orange.min.css.gz
2023/08/01 15:32:18 sri /tmp/work/skins/line/orange.css -> /output/skins/line/orange.css.sri
2023/08/01 15:32:18 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/line/orange.css.br /tmp/work/skins/line/orange.css
2023/08/01 15:32:18 br /tmp/work/skins/line/orange.css -> /output/skins/line/orange.css.br
2023/08/01 15:32:18 gz /tmp/work/skins/line/orange.css -> /output/skins/line/orange.css.gz
2023/08/01 15:32:18 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/line/purple.min.css /tmp/work/skins/line/purple.css
2023/08/01 15:32:19 sri /tmp/work/skins/line/pink.min.css -> /output/skins/line/pink.min.css.sri
2023/08/01 15:32:19 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/line/pink.min.css.br /tmp/work/skins/line/pink.min.css
2023/08/01 15:32:19 br /tmp/work/skins/line/pink.min.css -> /output/skins/line/pink.min.css.br
2023/08/01 15:32:19 gz /tmp/work/skins/line/pink.min.css -> /output/skins/line/pink.min.css.gz
2023/08/01 15:32:19 sri /tmp/work/skins/line/pink.css -> /output/skins/line/pink.css.sri
2023/08/01 15:32:19 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/line/pink.css.br /tmp/work/skins/line/pink.css
2023/08/01 15:32:19 br /tmp/work/skins/line/pink.css -> /output/skins/line/pink.css.br
2023/08/01 15:32:19 gz /tmp/work/skins/line/pink.css -> /output/skins/line/pink.css.gz
2023/08/01 15:32:19 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/line/red.min.css /tmp/work/skins/line/red.css
2023/08/01 15:32:20 sri /tmp/work/skins/line/purple.min.css -> /output/skins/line/purple.min.css.sri
2023/08/01 15:32:20 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/line/purple.min.css.br /tmp/work/skins/line/purple.min.css
2023/08/01 15:32:20 br /tmp/work/skins/line/purple.min.css -> /output/skins/line/purple.min.css.br
2023/08/01 15:32:20 gz /tmp/work/skins/line/purple.min.css -> /output/skins/line/purple.min.css.gz
2023/08/01 15:32:20 sri /tmp/work/skins/line/purple.css -> /output/skins/line/purple.css.sri
2023/08/01 15:32:20 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/line/purple.css.br /tmp/work/skins/line/purple.css
2023/08/01 15:32:20 br /tmp/work/skins/line/purple.css -> /output/skins/line/purple.css.br
2023/08/01 15:32:20 gz /tmp/work/skins/line/purple.css -> /output/skins/line/purple.css.gz
2023/08/01 15:32:20 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/line/yellow.min.css /tmp/work/skins/line/yellow.css
2023/08/01 15:32:20 sri /tmp/work/skins/line/red.min.css -> /output/skins/line/red.min.css.sri
2023/08/01 15:32:20 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/line/red.min.css.br /tmp/work/skins/line/red.min.css
2023/08/01 15:32:20 br /tmp/work/skins/line/red.min.css -> /output/skins/line/red.min.css.br
2023/08/01 15:32:20 gz /tmp/work/skins/line/red.min.css -> /output/skins/line/red.min.css.gz
2023/08/01 15:32:20 sri /tmp/work/skins/line/red.css -> /output/skins/line/red.css.sri
2023/08/01 15:32:20 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/line/red.css.br /tmp/work/skins/line/red.css
2023/08/01 15:32:20 br /tmp/work/skins/line/red.css -> /output/skins/line/red.css.br
2023/08/01 15:32:20 gz /tmp/work/skins/line/red.css -> /output/skins/line/red.css.gz
2023/08/01 15:32:20 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/minimal/_all.min.css /tmp/work/skins/minimal/_all.css
2023/08/01 15:32:21 sri /tmp/work/skins/line/yellow.min.css -> /output/skins/line/yellow.min.css.sri
2023/08/01 15:32:21 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/line/yellow.min.css.br /tmp/work/skins/line/yellow.min.css
2023/08/01 15:32:21 br /tmp/work/skins/line/yellow.min.css -> /output/skins/line/yellow.min.css.br
2023/08/01 15:32:21 gz /tmp/work/skins/line/yellow.min.css -> /output/skins/line/yellow.min.css.gz
2023/08/01 15:32:21 sri /tmp/work/skins/line/yellow.css -> /output/skins/line/yellow.css.sri
2023/08/01 15:32:21 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/line/yellow.css.br /tmp/work/skins/line/yellow.css
2023/08/01 15:32:21 br /tmp/work/skins/line/yellow.css -> /output/skins/line/yellow.css.br
2023/08/01 15:32:21 gz /tmp/work/skins/line/yellow.css -> /output/skins/line/yellow.css.gz
2023/08/01 15:32:21 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/minimal/aero.min.css /tmp/work/skins/minimal/aero.css
2023/08/01 15:32:22 sri /tmp/work/skins/minimal/_all.min.css -> /output/skins/minimal/_all.min.css.sri
2023/08/01 15:32:22 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/_all.min.css.br /tmp/work/skins/minimal/_all.min.css
2023/08/01 15:32:22 br /tmp/work/skins/minimal/_all.min.css -> /output/skins/minimal/_all.min.css.br
2023/08/01 15:32:22 gz /tmp/work/skins/minimal/_all.min.css -> /output/skins/minimal/_all.min.css.gz
2023/08/01 15:32:22 sri /tmp/work/skins/minimal/_all.css -> /output/skins/minimal/_all.css.sri
2023/08/01 15:32:22 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/_all.css.br /tmp/work/skins/minimal/_all.css
2023/08/01 15:32:22 br /tmp/work/skins/minimal/_all.css -> /output/skins/minimal/_all.css.br
2023/08/01 15:32:22 gz /tmp/work/skins/minimal/_all.css -> /output/skins/minimal/_all.css.gz
2023/08/01 15:32:22 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/minimal/aero.png /tmp/work/skins/minimal/aero.png
2023/08/01 15:32:22 sri /tmp/work/skins/minimal/aero.min.css -> /output/skins/minimal/aero.min.css.sri
2023/08/01 15:32:22 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/aero.min.css.br /tmp/work/skins/minimal/aero.min.css
2023/08/01 15:32:22 br /tmp/work/skins/minimal/aero.min.css -> /output/skins/minimal/aero.min.css.br
2023/08/01 15:32:22 gz /tmp/work/skins/minimal/aero.min.css -> /output/skins/minimal/aero.min.css.gz
2023/08/01 15:32:22 sri /tmp/work/skins/minimal/aero.css -> /output/skins/minimal/aero.css.sri
2023/08/01 15:32:22 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/aero.css.br /tmp/work/skins/minimal/aero.css
2023/08/01 15:32:22 br /tmp/work/skins/minimal/aero.css -> /output/skins/minimal/aero.css.br
2023/08/01 15:32:22 gz /tmp/work/skins/minimal/aero.css -> /output/skins/minimal/aero.css.gz
2023/08/01 15:32:22 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/minimal/aero@2x.png /tmp/work/skins/minimal/aero@2x.png
2023/08/01 15:32:25 Optimizing /tmp/work/skins/line/line.png
Input size: 588 (0K)
Result size: 482 (0K). Percentage of original: 81.973%
Result is smaller


2023/08/01 15:32:25 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/line/line.png.br /tmp/work/skins/line/line.png
2023/08/01 15:32:25 br /tmp/work/skins/line/line.png -> /output/skins/line/line.png.br
2023/08/01 15:32:25 gz /tmp/work/skins/line/line.png -> /output/skins/line/line.png.gz
2023/08/01 15:32:25 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/minimal/blue.min.css /tmp/work/skins/minimal/blue.css
2023/08/01 15:32:26 sri /tmp/work/skins/minimal/blue.min.css -> /output/skins/minimal/blue.min.css.sri
2023/08/01 15:32:26 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/blue.min.css.br /tmp/work/skins/minimal/blue.min.css
2023/08/01 15:32:26 br /tmp/work/skins/minimal/blue.min.css -> /output/skins/minimal/blue.min.css.br
2023/08/01 15:32:26 gz /tmp/work/skins/minimal/blue.min.css -> /output/skins/minimal/blue.min.css.gz
2023/08/01 15:32:26 sri /tmp/work/skins/minimal/blue.css -> /output/skins/minimal/blue.css.sri
2023/08/01 15:32:26 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/blue.css.br /tmp/work/skins/minimal/blue.css
2023/08/01 15:32:26 br /tmp/work/skins/minimal/blue.css -> /output/skins/minimal/blue.css.br
2023/08/01 15:32:26 gz /tmp/work/skins/minimal/blue.css -> /output/skins/minimal/blue.css.gz
2023/08/01 15:32:26 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/minimal/blue.png /tmp/work/skins/minimal/blue.png
2023/08/01 15:32:28 Optimizing /tmp/work/skins/flat/yellow.png
Input size: 1516 (1K)
Result size: 1258 (1K). Percentage of original: 82.982%
Result is smaller


2023/08/01 15:32:28 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/yellow.png.br /tmp/work/skins/flat/yellow.png
2023/08/01 15:32:28 br /tmp/work/skins/flat/yellow.png -> /output/skins/flat/yellow.png.br
2023/08/01 15:32:28 gz /tmp/work/skins/flat/yellow.png -> /output/skins/flat/yellow.png.gz
2023/08/01 15:32:28 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/minimal/blue@2x.png /tmp/work/skins/minimal/blue@2x.png
2023/08/01 15:32:34 Optimizing /tmp/work/skins/flat/red@2x.png
Input size: 3276 (3K)
Result size: 3021 (2K). Percentage of original: 92.216%
Result is smaller


2023/08/01 15:32:34 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/red@2x.png.br /tmp/work/skins/flat/red@2x.png
2023/08/01 15:32:34 br /tmp/work/skins/flat/red@2x.png -> /output/skins/flat/red@2x.png.br
2023/08/01 15:32:34 gz /tmp/work/skins/flat/red@2x.png -> /output/skins/flat/red@2x.png.gz
2023/08/01 15:32:34 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/minimal/green.min.css /tmp/work/skins/minimal/green.css
2023/08/01 15:32:35 sri /tmp/work/skins/minimal/green.min.css -> /output/skins/minimal/green.min.css.sri
2023/08/01 15:32:35 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/green.min.css.br /tmp/work/skins/minimal/green.min.css
2023/08/01 15:32:35 br /tmp/work/skins/minimal/green.min.css -> /output/skins/minimal/green.min.css.br
2023/08/01 15:32:35 gz /tmp/work/skins/minimal/green.min.css -> /output/skins/minimal/green.min.css.gz
2023/08/01 15:32:35 sri /tmp/work/skins/minimal/green.css -> /output/skins/minimal/green.css.sri
2023/08/01 15:32:35 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/green.css.br /tmp/work/skins/minimal/green.css
2023/08/01 15:32:35 br /tmp/work/skins/minimal/green.css -> /output/skins/minimal/green.css.br
2023/08/01 15:32:35 gz /tmp/work/skins/minimal/green.css -> /output/skins/minimal/green.css.gz
2023/08/01 15:32:35 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/minimal/green.png /tmp/work/skins/minimal/green.png
2023/08/01 15:32:40 Optimizing /tmp/work/skins/futurico/futurico@2x.png
Input size: 3446 (3K)
Result size: 3101 (3K). Percentage of original: 89.988%
Result is smaller


2023/08/01 15:32:40 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/futurico/futurico@2x.png.br /tmp/work/skins/futurico/futurico@2x.png
2023/08/01 15:32:40 br /tmp/work/skins/futurico/futurico@2x.png -> /output/skins/futurico/futurico@2x.png.br
2023/08/01 15:32:40 gz /tmp/work/skins/futurico/futurico@2x.png -> /output/skins/futurico/futurico@2x.png.gz
2023/08/01 15:32:40 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/minimal/green@2x.png /tmp/work/skins/minimal/green@2x.png
2023/08/01 15:32:42 Optimizing /tmp/work/skins/line/line@2x.png
Input size: 1073 (1K)
Result size: 833 (0K). Percentage of original: 77.633%
Result is smaller


2023/08/01 15:32:42 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/line/line@2x.png.br /tmp/work/skins/line/line@2x.png
2023/08/01 15:32:42 br /tmp/work/skins/line/line@2x.png -> /output/skins/line/line@2x.png.br
2023/08/01 15:32:42 gz /tmp/work/skins/line/line@2x.png -> /output/skins/line/line@2x.png.gz
2023/08/01 15:32:42 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/minimal/grey.min.css /tmp/work/skins/minimal/grey.css
2023/08/01 15:32:43 sri /tmp/work/skins/minimal/grey.min.css -> /output/skins/minimal/grey.min.css.sri
2023/08/01 15:32:43 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/grey.min.css.br /tmp/work/skins/minimal/grey.min.css
2023/08/01 15:32:43 br /tmp/work/skins/minimal/grey.min.css -> /output/skins/minimal/grey.min.css.br
2023/08/01 15:32:43 gz /tmp/work/skins/minimal/grey.min.css -> /output/skins/minimal/grey.min.css.gz
2023/08/01 15:32:43 sri /tmp/work/skins/minimal/grey.css -> /output/skins/minimal/grey.css.sri
2023/08/01 15:32:43 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/grey.css.br /tmp/work/skins/minimal/grey.css
2023/08/01 15:32:44 br /tmp/work/skins/minimal/grey.css -> /output/skins/minimal/grey.css.br
2023/08/01 15:32:44 gz /tmp/work/skins/minimal/grey.css -> /output/skins/minimal/grey.css.gz
2023/08/01 15:32:44 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/minimal/grey.png /tmp/work/skins/minimal/grey.png
2023/08/01 15:32:44 Optimizing /tmp/work/skins/flat/yellow@2x.png
Input size: 3216 (3K)
Result size: 3020 (2K). Percentage of original: 93.905%
Result is smaller


2023/08/01 15:32:44 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/flat/yellow@2x.png.br /tmp/work/skins/flat/yellow@2x.png
2023/08/01 15:32:44 br /tmp/work/skins/flat/yellow@2x.png -> /output/skins/flat/yellow@2x.png.br
2023/08/01 15:32:44 gz /tmp/work/skins/flat/yellow@2x.png -> /output/skins/flat/yellow@2x.png.gz
2023/08/01 15:32:44 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/minimal/grey@2x.png /tmp/work/skins/minimal/grey@2x.png
2023/08/01 15:32:46 Optimizing /tmp/work/skins/minimal/aero.png
Input size: 1151 (1K)
Result size: 985 (0K). Percentage of original: 85.578%
Result is smaller


2023/08/01 15:32:46 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/aero.png.br /tmp/work/skins/minimal/aero.png
2023/08/01 15:32:46 br /tmp/work/skins/minimal/aero.png -> /output/skins/minimal/aero.png.br
2023/08/01 15:32:46 gz /tmp/work/skins/minimal/aero.png -> /output/skins/minimal/aero.png.gz
2023/08/01 15:32:46 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/minimal/minimal.min.css /tmp/work/skins/minimal/minimal.css
2023/08/01 15:32:47 sri /tmp/work/skins/minimal/minimal.min.css -> /output/skins/minimal/minimal.min.css.sri
2023/08/01 15:32:47 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/minimal.min.css.br /tmp/work/skins/minimal/minimal.min.css
2023/08/01 15:32:47 br /tmp/work/skins/minimal/minimal.min.css -> /output/skins/minimal/minimal.min.css.br
2023/08/01 15:32:47 gz /tmp/work/skins/minimal/minimal.min.css -> /output/skins/minimal/minimal.min.css.gz
2023/08/01 15:32:47 sri /tmp/work/skins/minimal/minimal.css -> /output/skins/minimal/minimal.css.sri
2023/08/01 15:32:47 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/minimal.css.br /tmp/work/skins/minimal/minimal.css
2023/08/01 15:32:47 br /tmp/work/skins/minimal/minimal.css -> /output/skins/minimal/minimal.css.br
2023/08/01 15:32:47 gz /tmp/work/skins/minimal/minimal.css -> /output/skins/minimal/minimal.css.gz
2023/08/01 15:32:47 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/minimal/minimal.png /tmp/work/skins/minimal/minimal.png
2023/08/01 15:32:50 Optimizing /tmp/work/skins/minimal/blue.png
Input size: 1132 (1K)
Result size: 988 (0K). Percentage of original: 87.279%
Result is smaller


2023/08/01 15:32:50 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/blue.png.br /tmp/work/skins/minimal/blue.png
2023/08/01 15:32:50 br /tmp/work/skins/minimal/blue.png -> /output/skins/minimal/blue.png.br
2023/08/01 15:32:50 gz /tmp/work/skins/minimal/blue.png -> /output/skins/minimal/blue.png.gz
2023/08/01 15:32:50 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/minimal/minimal@2x.png /tmp/work/skins/minimal/minimal@2x.png
2023/08/01 15:32:58 Optimizing /tmp/work/skins/minimal/green.png
Input size: 1143 (1K)
Result size: 975 (0K). Percentage of original: 85.302%
Result is smaller


2023/08/01 15:32:58 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/green.png.br /tmp/work/skins/minimal/green.png
2023/08/01 15:32:58 br /tmp/work/skins/minimal/green.png -> /output/skins/minimal/green.png.br
2023/08/01 15:32:58 gz /tmp/work/skins/minimal/green.png -> /output/skins/minimal/green.png.gz
2023/08/01 15:32:58 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/minimal/orange.min.css /tmp/work/skins/minimal/orange.css
2023/08/01 15:32:59 sri /tmp/work/skins/minimal/orange.min.css -> /output/skins/minimal/orange.min.css.sri
2023/08/01 15:32:59 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/orange.min.css.br /tmp/work/skins/minimal/orange.min.css
2023/08/01 15:32:59 br /tmp/work/skins/minimal/orange.min.css -> /output/skins/minimal/orange.min.css.br
2023/08/01 15:32:59 gz /tmp/work/skins/minimal/orange.min.css -> /output/skins/minimal/orange.min.css.gz
2023/08/01 15:32:59 sri /tmp/work/skins/minimal/orange.css -> /output/skins/minimal/orange.css.sri
2023/08/01 15:32:59 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/orange.css.br /tmp/work/skins/minimal/orange.css
2023/08/01 15:32:59 br /tmp/work/skins/minimal/orange.css -> /output/skins/minimal/orange.css.br
2023/08/01 15:32:59 gz /tmp/work/skins/minimal/orange.css -> /output/skins/minimal/orange.css.gz
2023/08/01 15:32:59 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/minimal/orange.png /tmp/work/skins/minimal/orange.png
2023/08/01 15:33:09 Optimizing /tmp/work/skins/minimal/grey.png
Input size: 1142 (1K)
Result size: 984 (0K). Percentage of original: 86.165%
Result is smaller


2023/08/01 15:33:09 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/grey.png.br /tmp/work/skins/minimal/grey.png
2023/08/01 15:33:09 br /tmp/work/skins/minimal/grey.png -> /output/skins/minimal/grey.png.br
2023/08/01 15:33:09 gz /tmp/work/skins/minimal/grey.png -> /output/skins/minimal/grey.png.gz
2023/08/01 15:33:09 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/minimal/orange@2x.png /tmp/work/skins/minimal/orange@2x.png
2023/08/01 15:33:11 Optimizing /tmp/work/skins/minimal/minimal.png
Input size: 1114 (1K)
Result size: 981 (0K). Percentage of original: 88.061%
Result is smaller


2023/08/01 15:33:11 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/minimal.png.br /tmp/work/skins/minimal/minimal.png
2023/08/01 15:33:11 br /tmp/work/skins/minimal/minimal.png -> /output/skins/minimal/minimal.png.br
2023/08/01 15:33:11 gz /tmp/work/skins/minimal/minimal.png -> /output/skins/minimal/minimal.png.gz
2023/08/01 15:33:11 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/minimal/pink.min.css /tmp/work/skins/minimal/pink.css
2023/08/01 15:33:12 sri /tmp/work/skins/minimal/pink.min.css -> /output/skins/minimal/pink.min.css.sri
2023/08/01 15:33:12 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/pink.min.css.br /tmp/work/skins/minimal/pink.min.css
2023/08/01 15:33:12 br /tmp/work/skins/minimal/pink.min.css -> /output/skins/minimal/pink.min.css.br
2023/08/01 15:33:12 gz /tmp/work/skins/minimal/pink.min.css -> /output/skins/minimal/pink.min.css.gz
2023/08/01 15:33:12 sri /tmp/work/skins/minimal/pink.css -> /output/skins/minimal/pink.css.sri
2023/08/01 15:33:12 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/pink.css.br /tmp/work/skins/minimal/pink.css
2023/08/01 15:33:12 br /tmp/work/skins/minimal/pink.css -> /output/skins/minimal/pink.css.br
2023/08/01 15:33:12 gz /tmp/work/skins/minimal/pink.css -> /output/skins/minimal/pink.css.gz
2023/08/01 15:33:12 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/minimal/pink.png /tmp/work/skins/minimal/pink.png
2023/08/01 15:33:22 Optimizing /tmp/work/skins/minimal/orange.png
Input size: 1139 (1K)
Result size: 984 (0K). Percentage of original: 86.392%
Result is smaller


2023/08/01 15:33:22 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/orange.png.br /tmp/work/skins/minimal/orange.png
2023/08/01 15:33:22 br /tmp/work/skins/minimal/orange.png -> /output/skins/minimal/orange.png.br
2023/08/01 15:33:22 gz /tmp/work/skins/minimal/orange.png -> /output/skins/minimal/orange.png.gz
2023/08/01 15:33:22 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/minimal/pink@2x.png /tmp/work/skins/minimal/pink@2x.png
2023/08/01 15:33:28 Optimizing /tmp/work/skins/minimal/aero@2x.png
Input size: 1409 (1K)
Result size: 2115 (2K). Percentage of original: 150.106%
Preserving original PNG since it was smaller


2023/08/01 15:33:28 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/aero@2x.png.br /tmp/work/skins/minimal/aero@2x.png
2023/08/01 15:33:28 br /tmp/work/skins/minimal/aero@2x.png -> /output/skins/minimal/aero@2x.png.br
2023/08/01 15:33:28 gz /tmp/work/skins/minimal/aero@2x.png -> /output/skins/minimal/aero@2x.png.gz
2023/08/01 15:33:28 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/minimal/purple.min.css /tmp/work/skins/minimal/purple.css
2023/08/01 15:33:29 sri /tmp/work/skins/minimal/purple.min.css -> /output/skins/minimal/purple.min.css.sri
2023/08/01 15:33:29 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/purple.min.css.br /tmp/work/skins/minimal/purple.min.css
2023/08/01 15:33:29 br /tmp/work/skins/minimal/purple.min.css -> /output/skins/minimal/purple.min.css.br
2023/08/01 15:33:29 gz /tmp/work/skins/minimal/purple.min.css -> /output/skins/minimal/purple.min.css.gz
2023/08/01 15:33:29 sri /tmp/work/skins/minimal/purple.css -> /output/skins/minimal/purple.css.sri
2023/08/01 15:33:29 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/purple.css.br /tmp/work/skins/minimal/purple.css
2023/08/01 15:33:29 br /tmp/work/skins/minimal/purple.css -> /output/skins/minimal/purple.css.br
2023/08/01 15:33:29 gz /tmp/work/skins/minimal/purple.css -> /output/skins/minimal/purple.css.gz
2023/08/01 15:33:29 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/minimal/purple.png /tmp/work/skins/minimal/purple.png
2023/08/01 15:33:32 Optimizing /tmp/work/skins/minimal/pink.png
Input size: 1150 (1K)
Result size: 979 (0K). Percentage of original: 85.130%
Result is smaller


2023/08/01 15:33:32 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/pink.png.br /tmp/work/skins/minimal/pink.png
2023/08/01 15:33:32 br /tmp/work/skins/minimal/pink.png -> /output/skins/minimal/pink.png.br
2023/08/01 15:33:32 gz /tmp/work/skins/minimal/pink.png -> /output/skins/minimal/pink.png.gz
2023/08/01 15:33:32 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/minimal/purple@2x.png /tmp/work/skins/minimal/purple@2x.png
2023/08/01 15:33:35 Optimizing /tmp/work/skins/minimal/blue@2x.png
Input size: 1410 (1K)
Result size: 2087 (2K). Percentage of original: 148.014%
Preserving original PNG since it was smaller


2023/08/01 15:33:35 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/blue@2x.png.br /tmp/work/skins/minimal/blue@2x.png
2023/08/01 15:33:35 br /tmp/work/skins/minimal/blue@2x.png -> /output/skins/minimal/blue@2x.png.br
2023/08/01 15:33:35 gz /tmp/work/skins/minimal/blue@2x.png -> /output/skins/minimal/blue@2x.png.gz
2023/08/01 15:33:35 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/minimal/red.min.css /tmp/work/skins/minimal/red.css
2023/08/01 15:33:36 sri /tmp/work/skins/minimal/red.min.css -> /output/skins/minimal/red.min.css.sri
2023/08/01 15:33:36 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/red.min.css.br /tmp/work/skins/minimal/red.min.css
2023/08/01 15:33:36 br /tmp/work/skins/minimal/red.min.css -> /output/skins/minimal/red.min.css.br
2023/08/01 15:33:36 gz /tmp/work/skins/minimal/red.min.css -> /output/skins/minimal/red.min.css.gz
2023/08/01 15:33:36 sri /tmp/work/skins/minimal/red.css -> /output/skins/minimal/red.css.sri
2023/08/01 15:33:36 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/red.css.br /tmp/work/skins/minimal/red.css
2023/08/01 15:33:36 br /tmp/work/skins/minimal/red.css -> /output/skins/minimal/red.css.br
2023/08/01 15:33:36 gz /tmp/work/skins/minimal/red.css -> /output/skins/minimal/red.css.gz
2023/08/01 15:33:36 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/minimal/red.png /tmp/work/skins/minimal/red.png
2023/08/01 15:33:46 Optimizing /tmp/work/skins/minimal/green@2x.png
Input size: 1408 (1K)
Result size: 2084 (2K). Percentage of original: 148.011%
Preserving original PNG since it was smaller


2023/08/01 15:33:46 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/green@2x.png.br /tmp/work/skins/minimal/green@2x.png
2023/08/01 15:33:46 br /tmp/work/skins/minimal/green@2x.png -> /output/skins/minimal/green@2x.png.br
2023/08/01 15:33:46 gz /tmp/work/skins/minimal/green@2x.png -> /output/skins/minimal/green@2x.png.gz
2023/08/01 15:33:46 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/minimal/red@2x.png /tmp/work/skins/minimal/red@2x.png
2023/08/01 15:33:50 Optimizing /tmp/work/skins/minimal/grey@2x.png
Input size: 1407 (1K)
Result size: 2095 (2K). Percentage of original: 148.898%
Preserving original PNG since it was smaller


2023/08/01 15:33:50 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/grey@2x.png.br /tmp/work/skins/minimal/grey@2x.png
2023/08/01 15:33:50 br /tmp/work/skins/minimal/grey@2x.png -> /output/skins/minimal/grey@2x.png.br
2023/08/01 15:33:50 gz /tmp/work/skins/minimal/grey@2x.png -> /output/skins/minimal/grey@2x.png.gz
2023/08/01 15:33:50 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/minimal/yellow.min.css /tmp/work/skins/minimal/yellow.css
2023/08/01 15:33:50 Optimizing /tmp/work/skins/minimal/purple.png
Input size: 1132 (1K)
Result size: 988 (0K). Percentage of original: 87.279%
Result is smaller


2023/08/01 15:33:50 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/purple.png.br /tmp/work/skins/minimal/purple.png
2023/08/01 15:33:50 br /tmp/work/skins/minimal/purple.png -> /output/skins/minimal/purple.png.br
2023/08/01 15:33:50 gz /tmp/work/skins/minimal/purple.png -> /output/skins/minimal/purple.png.gz
2023/08/01 15:33:50 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/minimal/yellow.png /tmp/work/skins/minimal/yellow.png
2023/08/01 15:33:51 sri /tmp/work/skins/minimal/yellow.min.css -> /output/skins/minimal/yellow.min.css.sri
2023/08/01 15:33:51 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/yellow.min.css.br /tmp/work/skins/minimal/yellow.min.css
2023/08/01 15:33:51 br /tmp/work/skins/minimal/yellow.min.css -> /output/skins/minimal/yellow.min.css.br
2023/08/01 15:33:51 gz /tmp/work/skins/minimal/yellow.min.css -> /output/skins/minimal/yellow.min.css.gz
2023/08/01 15:33:51 sri /tmp/work/skins/minimal/yellow.css -> /output/skins/minimal/yellow.css.sri
2023/08/01 15:33:51 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/yellow.css.br /tmp/work/skins/minimal/yellow.css
2023/08/01 15:33:51 br /tmp/work/skins/minimal/yellow.css -> /output/skins/minimal/yellow.css.br
2023/08/01 15:33:51 gz /tmp/work/skins/minimal/yellow.css -> /output/skins/minimal/yellow.css.gz
2023/08/01 15:33:51 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/minimal/yellow@2x.png /tmp/work/skins/minimal/yellow@2x.png
2023/08/01 15:33:52 Optimizing /tmp/work/skins/minimal/minimal@2x.png
Input size: 1410 (1K)
Result size: 2112 (2K). Percentage of original: 149.787%
Preserving original PNG since it was smaller


2023/08/01 15:33:52 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/minimal@2x.png.br /tmp/work/skins/minimal/minimal@2x.png
2023/08/01 15:33:52 br /tmp/work/skins/minimal/minimal@2x.png -> /output/skins/minimal/minimal@2x.png.br
2023/08/01 15:33:52 gz /tmp/work/skins/minimal/minimal@2x.png -> /output/skins/minimal/minimal@2x.png.gz
2023/08/01 15:33:52 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/polaris/polaris.min.css /tmp/work/skins/polaris/polaris.css
2023/08/01 15:33:53 sri /tmp/work/skins/polaris/polaris.min.css -> /output/skins/polaris/polaris.min.css.sri
2023/08/01 15:33:53 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/polaris/polaris.min.css.br /tmp/work/skins/polaris/polaris.min.css
2023/08/01 15:33:53 br /tmp/work/skins/polaris/polaris.min.css -> /output/skins/polaris/polaris.min.css.br
2023/08/01 15:33:53 gz /tmp/work/skins/polaris/polaris.min.css -> /output/skins/polaris/polaris.min.css.gz
2023/08/01 15:33:53 sri /tmp/work/skins/polaris/polaris.css -> /output/skins/polaris/polaris.css.sri
2023/08/01 15:33:53 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/polaris/polaris.css.br /tmp/work/skins/polaris/polaris.css
2023/08/01 15:33:53 br /tmp/work/skins/polaris/polaris.css -> /output/skins/polaris/polaris.css.br
2023/08/01 15:33:53 gz /tmp/work/skins/polaris/polaris.css -> /output/skins/polaris/polaris.css.gz
2023/08/01 15:33:53 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/polaris/polaris.png /tmp/work/skins/polaris/polaris.png
2023/08/01 15:33:58 Optimizing /tmp/work/skins/minimal/red.png
Input size: 1130 (1K)
Result size: 983 (0K). Percentage of original: 86.991%
Result is smaller


2023/08/01 15:33:58 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/red.png.br /tmp/work/skins/minimal/red.png
2023/08/01 15:33:58 br /tmp/work/skins/minimal/red.png -> /output/skins/minimal/red.png.br
2023/08/01 15:33:58 gz /tmp/work/skins/minimal/red.png -> /output/skins/minimal/red.png.gz
2023/08/01 15:33:58 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/polaris/polaris@2x.png /tmp/work/skins/polaris/polaris@2x.png
2023/08/01 15:34:12 Optimizing /tmp/work/skins/minimal/yellow.png
Input size: 1135 (1K)
Result size: 984 (0K). Percentage of original: 86.696%
Result is smaller


2023/08/01 15:34:12 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/yellow.png.br /tmp/work/skins/minimal/yellow.png
2023/08/01 15:34:12 br /tmp/work/skins/minimal/yellow.png -> /output/skins/minimal/yellow.png.br
2023/08/01 15:34:12 gz /tmp/work/skins/minimal/yellow.png -> /output/skins/minimal/yellow.png.gz
2023/08/01 15:34:12 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/square/_all.min.css /tmp/work/skins/square/_all.css
2023/08/01 15:34:13 sri /tmp/work/skins/square/_all.min.css -> /output/skins/square/_all.min.css.sri
2023/08/01 15:34:13 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/_all.min.css.br /tmp/work/skins/square/_all.min.css
2023/08/01 15:34:14 br /tmp/work/skins/square/_all.min.css -> /output/skins/square/_all.min.css.br
2023/08/01 15:34:14 gz /tmp/work/skins/square/_all.min.css -> /output/skins/square/_all.min.css.gz
2023/08/01 15:34:14 sri /tmp/work/skins/square/_all.css -> /output/skins/square/_all.css.sri
2023/08/01 15:34:14 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/_all.css.br /tmp/work/skins/square/_all.css
2023/08/01 15:34:14 br /tmp/work/skins/square/_all.css -> /output/skins/square/_all.css.br
2023/08/01 15:34:14 gz /tmp/work/skins/square/_all.css -> /output/skins/square/_all.css.gz
2023/08/01 15:34:14 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/square/aero.min.css /tmp/work/skins/square/aero.css
2023/08/01 15:34:14 Optimizing /tmp/work/skins/minimal/orange@2x.png
Input size: 1407 (1K)
Result size: 2080 (2K). Percentage of original: 147.832%
Preserving original PNG since it was smaller


2023/08/01 15:34:14 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/orange@2x.png.br /tmp/work/skins/minimal/orange@2x.png
2023/08/01 15:34:14 br /tmp/work/skins/minimal/orange@2x.png -> /output/skins/minimal/orange@2x.png.br
2023/08/01 15:34:14 gz /tmp/work/skins/minimal/orange@2x.png -> /output/skins/minimal/orange@2x.png.gz
2023/08/01 15:34:14 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/square/aero.png /tmp/work/skins/square/aero.png
2023/08/01 15:34:15 sri /tmp/work/skins/square/aero.min.css -> /output/skins/square/aero.min.css.sri
2023/08/01 15:34:15 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/aero.min.css.br /tmp/work/skins/square/aero.min.css
2023/08/01 15:34:15 br /tmp/work/skins/square/aero.min.css -> /output/skins/square/aero.min.css.br
2023/08/01 15:34:15 gz /tmp/work/skins/square/aero.min.css -> /output/skins/square/aero.min.css.gz
2023/08/01 15:34:15 sri /tmp/work/skins/square/aero.css -> /output/skins/square/aero.css.sri
2023/08/01 15:34:15 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/aero.css.br /tmp/work/skins/square/aero.css
2023/08/01 15:34:15 br /tmp/work/skins/square/aero.css -> /output/skins/square/aero.css.br
2023/08/01 15:34:15 gz /tmp/work/skins/square/aero.css -> /output/skins/square/aero.css.gz
2023/08/01 15:34:15 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/square/aero@2x.png /tmp/work/skins/square/aero@2x.png
2023/08/01 15:34:20 Optimizing /tmp/work/skins/minimal/pink@2x.png
Input size: 1409 (1K)
Result size: 2084 (2K). Percentage of original: 147.906%
Preserving original PNG since it was smaller


2023/08/01 15:34:20 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/pink@2x.png.br /tmp/work/skins/minimal/pink@2x.png
2023/08/01 15:34:21 br /tmp/work/skins/minimal/pink@2x.png -> /output/skins/minimal/pink@2x.png.br
2023/08/01 15:34:21 gz /tmp/work/skins/minimal/pink@2x.png -> /output/skins/minimal/pink@2x.png.gz
2023/08/01 15:34:21 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/square/blue.min.css /tmp/work/skins/square/blue.css
2023/08/01 15:34:22 sri /tmp/work/skins/square/blue.min.css -> /output/skins/square/blue.min.css.sri
2023/08/01 15:34:22 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/blue.min.css.br /tmp/work/skins/square/blue.min.css
2023/08/01 15:34:22 br /tmp/work/skins/square/blue.min.css -> /output/skins/square/blue.min.css.br
2023/08/01 15:34:22 gz /tmp/work/skins/square/blue.min.css -> /output/skins/square/blue.min.css.gz
2023/08/01 15:34:22 sri /tmp/work/skins/square/blue.css -> /output/skins/square/blue.css.sri
2023/08/01 15:34:22 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/blue.css.br /tmp/work/skins/square/blue.css
2023/08/01 15:34:22 br /tmp/work/skins/square/blue.css -> /output/skins/square/blue.css.br
2023/08/01 15:34:22 gz /tmp/work/skins/square/blue.css -> /output/skins/square/blue.css.gz
2023/08/01 15:34:22 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/square/blue.png /tmp/work/skins/square/blue.png
2023/08/01 15:34:33 Optimizing /tmp/work/skins/polaris/polaris.png
Input size: 6401 (6K)
Result size: 5379 (5K). Percentage of original: 84.034%
Result is smaller


2023/08/01 15:34:33 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/polaris/polaris.png.br /tmp/work/skins/polaris/polaris.png
2023/08/01 15:34:33 br /tmp/work/skins/polaris/polaris.png -> /output/skins/polaris/polaris.png.br
2023/08/01 15:34:33 gz /tmp/work/skins/polaris/polaris.png -> /output/skins/polaris/polaris.png.gz
2023/08/01 15:34:33 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/square/blue@2x.png /tmp/work/skins/square/blue@2x.png
2023/08/01 15:34:34 Optimizing /tmp/work/skins/minimal/purple@2x.png
Input size: 1409 (1K)
Result size: 2095 (2K). Percentage of original: 148.687%
Preserving original PNG since it was smaller


2023/08/01 15:34:34 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/purple@2x.png.br /tmp/work/skins/minimal/purple@2x.png
2023/08/01 15:34:34 br /tmp/work/skins/minimal/purple@2x.png -> /output/skins/minimal/purple@2x.png.br
2023/08/01 15:34:34 gz /tmp/work/skins/minimal/purple@2x.png -> /output/skins/minimal/purple@2x.png.gz
2023/08/01 15:34:34 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/square/green.min.css /tmp/work/skins/square/green.css
2023/08/01 15:34:35 sri /tmp/work/skins/square/green.min.css -> /output/skins/square/green.min.css.sri
2023/08/01 15:34:35 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/green.min.css.br /tmp/work/skins/square/green.min.css
2023/08/01 15:34:35 br /tmp/work/skins/square/green.min.css -> /output/skins/square/green.min.css.br
2023/08/01 15:34:35 gz /tmp/work/skins/square/green.min.css -> /output/skins/square/green.min.css.gz
2023/08/01 15:34:35 sri /tmp/work/skins/square/green.css -> /output/skins/square/green.css.sri
2023/08/01 15:34:35 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/green.css.br /tmp/work/skins/square/green.css
2023/08/01 15:34:35 br /tmp/work/skins/square/green.css -> /output/skins/square/green.css.br
2023/08/01 15:34:35 gz /tmp/work/skins/square/green.css -> /output/skins/square/green.css.gz
2023/08/01 15:34:35 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/square/green.png /tmp/work/skins/square/green.png
2023/08/01 15:34:52 Optimizing /tmp/work/skins/minimal/red@2x.png
Input size: 1410 (1K)
Result size: 2084 (2K). Percentage of original: 147.801%
Preserving original PNG since it was smaller


2023/08/01 15:34:52 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/red@2x.png.br /tmp/work/skins/minimal/red@2x.png
2023/08/01 15:34:52 br /tmp/work/skins/minimal/red@2x.png -> /output/skins/minimal/red@2x.png.br
2023/08/01 15:34:52 gz /tmp/work/skins/minimal/red@2x.png -> /output/skins/minimal/red@2x.png.gz
2023/08/01 15:34:52 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/square/green@2x.png /tmp/work/skins/square/green@2x.png
2023/08/01 15:34:58 Optimizing /tmp/work/skins/minimal/yellow@2x.png
Input size: 1406 (1K)
Result size: 2115 (2K). Percentage of original: 150.427%
Preserving original PNG since it was smaller


2023/08/01 15:34:58 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/minimal/yellow@2x.png.br /tmp/work/skins/minimal/yellow@2x.png
2023/08/01 15:34:58 br /tmp/work/skins/minimal/yellow@2x.png -> /output/skins/minimal/yellow@2x.png.br
2023/08/01 15:34:58 gz /tmp/work/skins/minimal/yellow@2x.png -> /output/skins/minimal/yellow@2x.png.gz
2023/08/01 15:34:58 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/square/grey.min.css /tmp/work/skins/square/grey.css
2023/08/01 15:34:59 sri /tmp/work/skins/square/grey.min.css -> /output/skins/square/grey.min.css.sri
2023/08/01 15:34:59 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/grey.min.css.br /tmp/work/skins/square/grey.min.css
2023/08/01 15:34:59 br /tmp/work/skins/square/grey.min.css -> /output/skins/square/grey.min.css.br
2023/08/01 15:34:59 gz /tmp/work/skins/square/grey.min.css -> /output/skins/square/grey.min.css.gz
2023/08/01 15:34:59 sri /tmp/work/skins/square/grey.css -> /output/skins/square/grey.css.sri
2023/08/01 15:34:59 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/grey.css.br /tmp/work/skins/square/grey.css
2023/08/01 15:34:59 br /tmp/work/skins/square/grey.css -> /output/skins/square/grey.css.br
2023/08/01 15:34:59 gz /tmp/work/skins/square/grey.css -> /output/skins/square/grey.css.gz
2023/08/01 15:34:59 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/square/grey.png /tmp/work/skins/square/grey.png
2023/08/01 15:35:05 Optimizing /tmp/work/skins/square/aero.png
Input size: 2167 (2K)
Result size: 1552 (1K). Percentage of original: 71.620%
Result is smaller


2023/08/01 15:35:05 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/aero.png.br /tmp/work/skins/square/aero.png
2023/08/01 15:35:05 br /tmp/work/skins/square/aero.png -> /output/skins/square/aero.png.br
2023/08/01 15:35:05 gz /tmp/work/skins/square/aero.png -> /output/skins/square/aero.png.gz
2023/08/01 15:35:05 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/square/grey@2x.png /tmp/work/skins/square/grey@2x.png
2023/08/01 15:35:11 Optimizing /tmp/work/skins/square/blue.png
Input size: 2185 (2K)
Result size: 1566 (1K). Percentage of original: 71.670%
Result is smaller


2023/08/01 15:35:11 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/blue.png.br /tmp/work/skins/square/blue.png
2023/08/01 15:35:12 br /tmp/work/skins/square/blue.png -> /output/skins/square/blue.png.br
2023/08/01 15:35:12 gz /tmp/work/skins/square/blue.png -> /output/skins/square/blue.png.gz
2023/08/01 15:35:12 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/square/orange.min.css /tmp/work/skins/square/orange.css
2023/08/01 15:35:13 sri /tmp/work/skins/square/orange.min.css -> /output/skins/square/orange.min.css.sri
2023/08/01 15:35:13 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/orange.min.css.br /tmp/work/skins/square/orange.min.css
2023/08/01 15:35:13 br /tmp/work/skins/square/orange.min.css -> /output/skins/square/orange.min.css.br
2023/08/01 15:35:13 gz /tmp/work/skins/square/orange.min.css -> /output/skins/square/orange.min.css.gz
2023/08/01 15:35:13 sri /tmp/work/skins/square/orange.css -> /output/skins/square/orange.css.sri
2023/08/01 15:35:13 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/orange.css.br /tmp/work/skins/square/orange.css
2023/08/01 15:35:13 br /tmp/work/skins/square/orange.css -> /output/skins/square/orange.css.br
2023/08/01 15:35:13 gz /tmp/work/skins/square/orange.css -> /output/skins/square/orange.css.gz
2023/08/01 15:35:13 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/square/orange.png /tmp/work/skins/square/orange.png
2023/08/01 15:35:23 Optimizing /tmp/work/skins/square/green.png
Input size: 2193 (2K)
Result size: 1573 (1K). Percentage of original: 71.728%
Result is smaller


2023/08/01 15:35:23 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/green.png.br /tmp/work/skins/square/green.png
2023/08/01 15:35:23 br /tmp/work/skins/square/green.png -> /output/skins/square/green.png.br
2023/08/01 15:35:23 gz /tmp/work/skins/square/green.png -> /output/skins/square/green.png.gz
2023/08/01 15:35:23 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/square/orange@2x.png /tmp/work/skins/square/orange@2x.png
2023/08/01 15:35:51 Optimizing /tmp/work/skins/square/grey.png
Input size: 2186 (2K)
Result size: 1565 (1K). Percentage of original: 71.592%
Result is smaller


2023/08/01 15:35:51 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/grey.png.br /tmp/work/skins/square/grey.png
2023/08/01 15:35:51 br /tmp/work/skins/square/grey.png -> /output/skins/square/grey.png.br
2023/08/01 15:35:51 gz /tmp/work/skins/square/grey.png -> /output/skins/square/grey.png.gz
2023/08/01 15:35:51 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/square/pink.min.css /tmp/work/skins/square/pink.css
2023/08/01 15:35:52 sri /tmp/work/skins/square/pink.min.css -> /output/skins/square/pink.min.css.sri
2023/08/01 15:35:52 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/pink.min.css.br /tmp/work/skins/square/pink.min.css
2023/08/01 15:35:52 br /tmp/work/skins/square/pink.min.css -> /output/skins/square/pink.min.css.br
2023/08/01 15:35:52 gz /tmp/work/skins/square/pink.min.css -> /output/skins/square/pink.min.css.gz
2023/08/01 15:35:52 sri /tmp/work/skins/square/pink.css -> /output/skins/square/pink.css.sri
2023/08/01 15:35:52 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/pink.css.br /tmp/work/skins/square/pink.css
2023/08/01 15:35:52 br /tmp/work/skins/square/pink.css -> /output/skins/square/pink.css.br
2023/08/01 15:35:52 gz /tmp/work/skins/square/pink.css -> /output/skins/square/pink.css.gz
2023/08/01 15:35:52 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/square/pink.png /tmp/work/skins/square/pink.png
2023/08/01 15:36:01 Optimizing /tmp/work/skins/square/orange.png
Input size: 2181 (2K)
Result size: 1563 (1K). Percentage of original: 71.664%
Result is smaller


2023/08/01 15:36:01 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/orange.png.br /tmp/work/skins/square/orange.png
2023/08/01 15:36:01 br /tmp/work/skins/square/orange.png -> /output/skins/square/orange.png.br
2023/08/01 15:36:01 gz /tmp/work/skins/square/orange.png -> /output/skins/square/orange.png.gz
2023/08/01 15:36:01 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/square/pink@2x.png /tmp/work/skins/square/pink@2x.png
2023/08/01 15:36:21 Optimizing /tmp/work/skins/polaris/polaris@2x.png
Input size: 16760 (16K)
Result size: 13444 (13K). Percentage of original: 80.215%
Result is smaller


2023/08/01 15:36:21 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/polaris/polaris@2x.png.br /tmp/work/skins/polaris/polaris@2x.png
2023/08/01 15:36:21 Optimizing /tmp/work/skins/square/aero@2x.png
Input size: 4455 (4K)
Result size: 3638 (3K). Percentage of original: 81.661%
Result is smaller


2023/08/01 15:36:21 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/aero@2x.png.br /tmp/work/skins/square/aero@2x.png
2023/08/01 15:36:22 br /tmp/work/skins/square/aero@2x.png -> /output/skins/square/aero@2x.png.br
2023/08/01 15:36:22 gz /tmp/work/skins/square/aero@2x.png -> /output/skins/square/aero@2x.png.gz
2023/08/01 15:36:22 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/square/purple.min.css /tmp/work/skins/square/purple.css
2023/08/01 15:36:22 br /tmp/work/skins/polaris/polaris@2x.png -> /output/skins/polaris/polaris@2x.png.br
2023/08/01 15:36:22 gz /tmp/work/skins/polaris/polaris@2x.png -> /output/skins/polaris/polaris@2x.png.gz
2023/08/01 15:36:22 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/square/purple.png /tmp/work/skins/square/purple.png
2023/08/01 15:36:23 sri /tmp/work/skins/square/purple.min.css -> /output/skins/square/purple.min.css.sri
2023/08/01 15:36:23 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/purple.min.css.br /tmp/work/skins/square/purple.min.css
2023/08/01 15:36:23 br /tmp/work/skins/square/purple.min.css -> /output/skins/square/purple.min.css.br
2023/08/01 15:36:23 gz /tmp/work/skins/square/purple.min.css -> /output/skins/square/purple.min.css.gz
2023/08/01 15:36:23 sri /tmp/work/skins/square/purple.css -> /output/skins/square/purple.css.sri
2023/08/01 15:36:23 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/purple.css.br /tmp/work/skins/square/purple.css
2023/08/01 15:36:23 br /tmp/work/skins/square/purple.css -> /output/skins/square/purple.css.br
2023/08/01 15:36:23 gz /tmp/work/skins/square/purple.css -> /output/skins/square/purple.css.gz
2023/08/01 15:36:23 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/square/purple@2x.png /tmp/work/skins/square/purple@2x.png
2023/08/01 15:36:36 Optimizing /tmp/work/skins/square/pink.png
Input size: 2189 (2K)
Result size: 1563 (1K). Percentage of original: 71.402%
Result is smaller


2023/08/01 15:36:36 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/pink.png.br /tmp/work/skins/square/pink.png
2023/08/01 15:36:36 br /tmp/work/skins/square/pink.png -> /output/skins/square/pink.png.br
2023/08/01 15:36:36 gz /tmp/work/skins/square/pink.png -> /output/skins/square/pink.png.gz
2023/08/01 15:36:36 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/square/red.min.css /tmp/work/skins/square/red.css
2023/08/01 15:36:38 sri /tmp/work/skins/square/red.min.css -> /output/skins/square/red.min.css.sri
2023/08/01 15:36:38 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/red.min.css.br /tmp/work/skins/square/red.min.css
2023/08/01 15:36:38 br /tmp/work/skins/square/red.min.css -> /output/skins/square/red.min.css.br
2023/08/01 15:36:38 gz /tmp/work/skins/square/red.min.css -> /output/skins/square/red.min.css.gz
2023/08/01 15:36:38 sri /tmp/work/skins/square/red.css -> /output/skins/square/red.css.sri
2023/08/01 15:36:38 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/red.css.br /tmp/work/skins/square/red.css
2023/08/01 15:36:38 br /tmp/work/skins/square/red.css -> /output/skins/square/red.css.br
2023/08/01 15:36:38 gz /tmp/work/skins/square/red.css -> /output/skins/square/red.css.gz
2023/08/01 15:36:38 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/square/red.png /tmp/work/skins/square/red.png
2023/08/01 15:36:43 Optimizing /tmp/work/skins/square/blue@2x.png
Input size: 4485 (4K)
Result size: 3667 (3K). Percentage of original: 81.761%
Result is smaller


2023/08/01 15:36:43 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/blue@2x.png.br /tmp/work/skins/square/blue@2x.png
2023/08/01 15:36:43 br /tmp/work/skins/square/blue@2x.png -> /output/skins/square/blue@2x.png.br
2023/08/01 15:36:43 gz /tmp/work/skins/square/blue@2x.png -> /output/skins/square/blue@2x.png.gz
2023/08/01 15:36:43 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/square/red@2x.png /tmp/work/skins/square/red@2x.png
2023/08/01 15:37:03 Optimizing /tmp/work/skins/square/purple.png
Input size: 2188 (2K)
Result size: 1561 (1K). Percentage of original: 71.344%
Result is smaller


2023/08/01 15:37:03 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/purple.png.br /tmp/work/skins/square/purple.png
2023/08/01 15:37:03 br /tmp/work/skins/square/purple.png -> /output/skins/square/purple.png.br
2023/08/01 15:37:03 gz /tmp/work/skins/square/purple.png -> /output/skins/square/purple.png.gz
2023/08/01 15:37:03 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/square/square.min.css /tmp/work/skins/square/square.css
2023/08/01 15:37:04 sri /tmp/work/skins/square/square.min.css -> /output/skins/square/square.min.css.sri
2023/08/01 15:37:04 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/square.min.css.br /tmp/work/skins/square/square.min.css
2023/08/01 15:37:04 br /tmp/work/skins/square/square.min.css -> /output/skins/square/square.min.css.br
2023/08/01 15:37:04 gz /tmp/work/skins/square/square.min.css -> /output/skins/square/square.min.css.gz
2023/08/01 15:37:04 sri /tmp/work/skins/square/square.css -> /output/skins/square/square.css.sri
2023/08/01 15:37:04 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/square.css.br /tmp/work/skins/square/square.css
2023/08/01 15:37:04 br /tmp/work/skins/square/square.css -> /output/skins/square/square.css.br
2023/08/01 15:37:04 gz /tmp/work/skins/square/square.css -> /output/skins/square/square.css.gz
2023/08/01 15:37:04 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/square/square.png /tmp/work/skins/square/square.png
2023/08/01 15:37:06 Optimizing /tmp/work/skins/square/grey@2x.png
Input size: 4483 (4K)
Result size: 3670 (3K). Percentage of original: 81.865%
Result is smaller


2023/08/01 15:37:06 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/grey@2x.png.br /tmp/work/skins/square/grey@2x.png
2023/08/01 15:37:06 br /tmp/work/skins/square/grey@2x.png -> /output/skins/square/grey@2x.png.br
2023/08/01 15:37:06 gz /tmp/work/skins/square/grey@2x.png -> /output/skins/square/grey@2x.png.gz
2023/08/01 15:37:06 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/square/square@2x.png /tmp/work/skins/square/square@2x.png
2023/08/01 15:37:07 Optimizing /tmp/work/skins/square/green@2x.png
Input size: 4498 (4K)
Result size: 3706 (3K). Percentage of original: 82.392%
Result is smaller


2023/08/01 15:37:07 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/green@2x.png.br /tmp/work/skins/square/green@2x.png
2023/08/01 15:37:07 br /tmp/work/skins/square/green@2x.png -> /output/skins/square/green@2x.png.br
2023/08/01 15:37:07 gz /tmp/work/skins/square/green@2x.png -> /output/skins/square/green@2x.png.gz
2023/08/01 15:37:07 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/skins/square/yellow.min.css /tmp/work/skins/square/yellow.css
2023/08/01 15:37:08 sri /tmp/work/skins/square/yellow.min.css -> /output/skins/square/yellow.min.css.sri
2023/08/01 15:37:08 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/yellow.min.css.br /tmp/work/skins/square/yellow.min.css
2023/08/01 15:37:08 br /tmp/work/skins/square/yellow.min.css -> /output/skins/square/yellow.min.css.br
2023/08/01 15:37:08 gz /tmp/work/skins/square/yellow.min.css -> /output/skins/square/yellow.min.css.gz
2023/08/01 15:37:08 sri /tmp/work/skins/square/yellow.css -> /output/skins/square/yellow.css.sri
2023/08/01 15:37:08 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/yellow.css.br /tmp/work/skins/square/yellow.css
2023/08/01 15:37:08 br /tmp/work/skins/square/yellow.css -> /output/skins/square/yellow.css.br
2023/08/01 15:37:08 gz /tmp/work/skins/square/yellow.css -> /output/skins/square/yellow.css.gz
2023/08/01 15:37:08 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/square/yellow.png /tmp/work/skins/square/yellow.png
2023/08/01 15:37:18 Optimizing /tmp/work/skins/square/red.png
Input size: 2190 (2K)
Result size: 1564 (1K). Percentage of original: 71.416%
Result is smaller


2023/08/01 15:37:18 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/red.png.br /tmp/work/skins/square/red.png
2023/08/01 15:37:18 br /tmp/work/skins/square/red.png -> /output/skins/square/red.png.br
2023/08/01 15:37:18 gz /tmp/work/skins/square/red.png -> /output/skins/square/red.png.gz
2023/08/01 15:37:18 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/skins/square/yellow@2x.png /tmp/work/skins/square/yellow@2x.png
2023/08/01 15:37:24 Optimizing /tmp/work/skins/square/orange@2x.png
Input size: 4474 (4K)
Result size: 3660 (3K). Percentage of original: 81.806%
Result is smaller


2023/08/01 15:37:24 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/orange@2x.png.br /tmp/work/skins/square/orange@2x.png
2023/08/01 15:37:24 br /tmp/work/skins/square/orange@2x.png -> /output/skins/square/orange@2x.png.br
2023/08/01 15:37:24 gz /tmp/work/skins/square/orange@2x.png -> /output/skins/square/orange@2x.png.gz
2023/08/01 15:37:43 Optimizing /tmp/work/skins/square/pink@2x.png
Input size: 4479 (4K)
Result size: 3669 (3K). Percentage of original: 81.916%
Result is smaller


2023/08/01 15:37:43 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/pink@2x.png.br /tmp/work/skins/square/pink@2x.png
2023/08/01 15:37:43 br /tmp/work/skins/square/pink@2x.png -> /output/skins/square/pink@2x.png.br
2023/08/01 15:37:43 gz /tmp/work/skins/square/pink@2x.png -> /output/skins/square/pink@2x.png.gz
2023/08/01 15:37:44 Optimizing /tmp/work/skins/square/square.png
Input size: 2175 (2K)
Result size: 1557 (1K). Percentage of original: 71.586%
Result is smaller


2023/08/01 15:37:44 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/square.png.br /tmp/work/skins/square/square.png
2023/08/01 15:37:44 br /tmp/work/skins/square/square.png -> /output/skins/square/square.png.br
2023/08/01 15:37:44 gz /tmp/work/skins/square/square.png -> /output/skins/square/square.png.gz
2023/08/01 15:37:45 Optimizing /tmp/work/skins/square/yellow.png
Input size: 2131 (2K)
Result size: 1529 (1K). Percentage of original: 71.750%
Result is smaller


2023/08/01 15:37:45 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/yellow.png.br /tmp/work/skins/square/yellow.png
2023/08/01 15:37:45 br /tmp/work/skins/square/yellow.png -> /output/skins/square/yellow.png.br
2023/08/01 15:37:45 gz /tmp/work/skins/square/yellow.png -> /output/skins/square/yellow.png.gz
2023/08/01 15:37:54 Optimizing /tmp/work/skins/square/purple@2x.png
Input size: 4501 (4K)
Result size: 3676 (3K). Percentage of original: 81.671%
Result is smaller


2023/08/01 15:37:54 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/purple@2x.png.br /tmp/work/skins/square/purple@2x.png
2023/08/01 15:37:54 br /tmp/work/skins/square/purple@2x.png -> /output/skins/square/purple@2x.png.br
2023/08/01 15:37:54 gz /tmp/work/skins/square/purple@2x.png -> /output/skins/square/purple@2x.png.gz
2023/08/01 15:38:04 Optimizing /tmp/work/skins/square/red@2x.png
Input size: 4490 (4K)
Result size: 3662 (3K). Percentage of original: 81.559%
Result is smaller


2023/08/01 15:38:04 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/red@2x.png.br /tmp/work/skins/square/red@2x.png
2023/08/01 15:38:04 br /tmp/work/skins/square/red@2x.png -> /output/skins/square/red@2x.png.br
2023/08/01 15:38:04 gz /tmp/work/skins/square/red@2x.png -> /output/skins/square/red@2x.png.gz
2023/08/01 15:38:12 Optimizing /tmp/work/skins/square/square@2x.png
Input size: 4478 (4K)
Result size: 3666 (3K). Percentage of original: 81.867%
Result is smaller


2023/08/01 15:38:12 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/square@2x.png.br /tmp/work/skins/square/square@2x.png
2023/08/01 15:38:12 br /tmp/work/skins/square/square@2x.png -> /output/skins/square/square@2x.png.br
2023/08/01 15:38:12 gz /tmp/work/skins/square/square@2x.png -> /output/skins/square/square@2x.png.gz
2023/08/01 15:38:15 Optimizing /tmp/work/skins/square/yellow@2x.png
Input size: 4385 (4K)
Result size: 3605 (3K). Percentage of original: 82.212%
Result is smaller


2023/08/01 15:38:15 algorithm: run /usr/bin/brotli --quality=11 --output=/output/skins/square/yellow@2x.png.br /tmp/work/skins/square/yellow@2x.png
2023/08/01 15:38:15 br /tmp/work/skins/square/yellow@2x.png -> /output/skins/square/yellow@2x.png.br
2023/08/01 15:38:15 gz /tmp/work/skins/square/yellow@2x.png -> /output/skins/square/yellow@2x.png.gz
2023/08/01 15:38:15 processed iCheck
