2023/08/01 18:35:24 ExtractTarGz: uknown type: 67 in pax_global_header
2023/08/01 18:35:24 optimizing files (Js true, Css true, Png true, Jpg true)
2023/08/01 18:35:25 /tmp/work/css/mdb.css already has a compressed version: /tmp/work/css/mdb.min.css
2023/08/01 18:35:25 sri /tmp/work/css/mdb.css -> /output/css/mdb.css.sri
2023/08/01 18:35:25 algorithm: run /usr/bin/brotli --quality=11 --output=/output/css/mdb.css.br /tmp/work/css/mdb.css
2023/08/01 18:35:25 sri /tmp/work/css/mdb.min.css -> /output/css/mdb.min.css.sri
2023/08/01 18:35:25 algorithm: run /usr/bin/brotli --quality=11 --output=/output/css/mdb.min.css.br /tmp/work/css/mdb.min.css
2023/08/01 18:35:25 /tmp/work/js/mdb.min.js already has corresponding compressed file
2023/08/01 18:35:25 sri /tmp/work/js/mdb.js -> /output/js/mdb.js.sri
2023/08/01 18:35:25 algorithm: run /usr/bin/brotli --quality=11 --output=/output/js/mdb.js.br /tmp/work/js/mdb.js
2023/08/01 18:35:25 /tmp/work/js/mdb.min.js is already compressed
2023/08/01 18:35:25 sri /tmp/work/js/mdb.min.js -> /output/js/mdb.min.js.sri
2023/08/01 18:35:25 algorithm: run /usr/bin/brotli --quality=11 --output=/output/js/mdb.min.js.br /tmp/work/js/mdb.min.js
2023/08/01 18:35:25 algorithm: run /usr/bin/brotli --quality=11 --output=/output/font/roboto/Roboto-Bold.eot.br /tmp/work/font/roboto/Roboto-Bold.eot
2023/08/01 18:35:25 algorithm: run /usr/bin/brotli --quality=11 --output=/output/font/roboto/Roboto-Bold.ttf.br /tmp/work/font/roboto/Roboto-Bold.ttf
2023/08/01 18:35:25 algorithm: run /usr/bin/brotli --quality=11 --output=/output/font/roboto/Roboto-Bold.woff.br /tmp/work/font/roboto/Roboto-Bold.woff
2023/08/01 18:35:25 copy /tmp/work/font/roboto/Roboto-Bold.woff2 -> /output/font/roboto/Roboto-Bold.woff2
2023/08/01 18:35:25 algorithm: run /usr/bin/brotli --quality=11 --output=/output/font/roboto/Roboto-Light.eot.br /tmp/work/font/roboto/Roboto-Light.eot
2023/08/01 18:35:25 br /tmp/work/font/roboto/Roboto-Bold.eot -> /output/font/roboto/Roboto-Bold.eot.br
2023/08/01 18:35:25 gz /tmp/work/font/roboto/Roboto-Bold.eot -> /output/font/roboto/Roboto-Bold.eot.gz
2023/08/01 18:35:25 algorithm: run /usr/bin/brotli --quality=11 --output=/output/font/roboto/Roboto-Light.ttf.br /tmp/work/font/roboto/Roboto-Light.ttf
2023/08/01 18:35:25 br /tmp/work/font/roboto/Roboto-Light.eot -> /output/font/roboto/Roboto-Light.eot.br
2023/08/01 18:35:25 gz /tmp/work/font/roboto/Roboto-Light.eot -> /output/font/roboto/Roboto-Light.eot.gz
2023/08/01 18:35:25 algorithm: run /usr/bin/brotli --quality=11 --output=/output/font/roboto/Roboto-Light.woff.br /tmp/work/font/roboto/Roboto-Light.woff
2023/08/01 18:35:26 br /tmp/work/font/roboto/Roboto-Bold.woff -> /output/font/roboto/Roboto-Bold.woff.br
2023/08/01 18:35:26 gz /tmp/work/font/roboto/Roboto-Bold.woff -> /output/font/roboto/Roboto-Bold.woff.gz
2023/08/01 18:35:26 copy /tmp/work/font/roboto/Roboto-Light.woff2 -> /output/font/roboto/Roboto-Light.woff2
2023/08/01 18:35:26 algorithm: run /usr/bin/brotli --quality=11 --output=/output/font/roboto/Roboto-Medium.eot.br /tmp/work/font/roboto/Roboto-Medium.eot
2023/08/01 18:35:26 br /tmp/work/css/mdb.min.css -> /output/css/mdb.min.css.br
2023/08/01 18:35:26 gz /tmp/work/css/mdb.min.css -> /output/css/mdb.min.css.gz
2023/08/01 18:35:26 algorithm: run /usr/bin/brotli --quality=11 --output=/output/font/roboto/Roboto-Medium.ttf.br /tmp/work/font/roboto/Roboto-Medium.ttf
2023/08/01 18:35:26 br /tmp/work/font/roboto/Roboto-Medium.eot -> /output/font/roboto/Roboto-Medium.eot.br
2023/08/01 18:35:26 gz /tmp/work/font/roboto/Roboto-Medium.eot -> /output/font/roboto/Roboto-Medium.eot.gz
2023/08/01 18:35:26 algorithm: run /usr/bin/brotli --quality=11 --output=/output/font/roboto/Roboto-Medium.woff.br /tmp/work/font/roboto/Roboto-Medium.woff
2023/08/01 18:35:27 br /tmp/work/js/mdb.min.js -> /output/js/mdb.min.js.br
2023/08/01 18:35:27 gz /tmp/work/js/mdb.min.js -> /output/js/mdb.min.js.gz
2023/08/01 18:35:27 copy /tmp/work/font/roboto/Roboto-Medium.woff2 -> /output/font/roboto/Roboto-Medium.woff2
2023/08/01 18:35:27 algorithm: run /usr/bin/brotli --quality=11 --output=/output/font/roboto/Roboto-Regular.eot.br /tmp/work/font/roboto/Roboto-Regular.eot
2023/08/01 18:35:27 br /tmp/work/font/roboto/Roboto-Regular.eot -> /output/font/roboto/Roboto-Regular.eot.br
2023/08/01 18:35:27 gz /tmp/work/font/roboto/Roboto-Regular.eot -> /output/font/roboto/Roboto-Regular.eot.gz
2023/08/01 18:35:27 algorithm: run /usr/bin/brotli --quality=11 --output=/output/font/roboto/Roboto-Regular.ttf.br /tmp/work/font/roboto/Roboto-Regular.ttf
2023/08/01 18:35:27 br /tmp/work/css/mdb.css -> /output/css/mdb.css.br
2023/08/01 18:35:27 gz /tmp/work/css/mdb.css -> /output/css/mdb.css.gz
2023/08/01 18:35:27 algorithm: run /usr/bin/brotli --quality=11 --output=/output/font/roboto/Roboto-Regular.woff.br /tmp/work/font/roboto/Roboto-Regular.woff
2023/08/01 18:35:28 br /tmp/work/font/roboto/Roboto-Light.woff -> /output/font/roboto/Roboto-Light.woff.br
2023/08/01 18:35:28 gz /tmp/work/font/roboto/Roboto-Light.woff -> /output/font/roboto/Roboto-Light.woff.gz
2023/08/01 18:35:28 copy /tmp/work/font/roboto/Roboto-Regular.woff2 -> /output/font/roboto/Roboto-Regular.woff2
2023/08/01 18:35:28 algorithm: run /usr/bin/brotli --quality=11 --output=/output/font/roboto/Roboto-Thin.eot.br /tmp/work/font/roboto/Roboto-Thin.eot
2023/08/01 18:35:28 br /tmp/work/font/roboto/Roboto-Light.ttf -> /output/font/roboto/Roboto-Light.ttf.br
2023/08/01 18:35:28 gz /tmp/work/font/roboto/Roboto-Light.ttf -> /output/font/roboto/Roboto-Light.ttf.gz
2023/08/01 18:35:28 algorithm: run /usr/bin/brotli --quality=11 --output=/output/font/roboto/Roboto-Thin.ttf.br /tmp/work/font/roboto/Roboto-Thin.ttf
2023/08/01 18:35:28 br /tmp/work/font/roboto/Roboto-Thin.eot -> /output/font/roboto/Roboto-Thin.eot.br
2023/08/01 18:35:28 gz /tmp/work/font/roboto/Roboto-Thin.eot -> /output/font/roboto/Roboto-Thin.eot.gz
2023/08/01 18:35:28 algorithm: run /usr/bin/brotli --quality=11 --output=/output/font/roboto/Roboto-Thin.woff.br /tmp/work/font/roboto/Roboto-Thin.woff
2023/08/01 18:35:28 br /tmp/work/font/roboto/Roboto-Bold.ttf -> /output/font/roboto/Roboto-Bold.ttf.br
2023/08/01 18:35:28 gz /tmp/work/font/roboto/Roboto-Bold.ttf -> /output/font/roboto/Roboto-Bold.ttf.gz
2023/08/01 18:35:28 copy /tmp/work/font/roboto/Roboto-Thin.woff2 -> /output/font/roboto/Roboto-Thin.woff2
2023/08/01 18:35:28 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/img/overlays/01.png /tmp/work/img/overlays/01.png
2023/08/01 18:35:28 Optimizing /tmp/work/img/overlays/01.png
Input size: 211 (0K)
Result size: 73 (0K). Percentage of original: 34.597%
Result is smaller


2023/08/01 18:35:28 algorithm: run /usr/bin/brotli --quality=11 --output=/output/img/overlays/01.png.br /tmp/work/img/overlays/01.png
2023/08/01 18:35:28 br /tmp/work/img/overlays/01.png -> /output/img/overlays/01.png.br
2023/08/01 18:35:28 gz /tmp/work/img/overlays/01.png -> /output/img/overlays/01.png.gz
2023/08/01 18:35:28 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/img/overlays/02.png /tmp/work/img/overlays/02.png
2023/08/01 18:35:28 br /tmp/work/font/roboto/Roboto-Medium.woff -> /output/font/roboto/Roboto-Medium.woff.br
2023/08/01 18:35:28 gz /tmp/work/font/roboto/Roboto-Medium.woff -> /output/font/roboto/Roboto-Medium.woff.gz
2023/08/01 18:35:28 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/img/overlays/03.png /tmp/work/img/overlays/03.png
2023/08/01 18:35:29 Optimizing /tmp/work/img/overlays/02.png
Input size: 213 (0K)
Result size: 76 (0K). Percentage of original: 35.681%
Result is smaller


2023/08/01 18:35:29 algorithm: run /usr/bin/brotli --quality=11 --output=/output/img/overlays/02.png.br /tmp/work/img/overlays/02.png
2023/08/01 18:35:29 br /tmp/work/img/overlays/02.png -> /output/img/overlays/02.png.br
2023/08/01 18:35:29 gz /tmp/work/img/overlays/02.png -> /output/img/overlays/02.png.gz
2023/08/01 18:35:29 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/img/overlays/04.png /tmp/work/img/overlays/04.png
2023/08/01 18:35:29 br /tmp/work/font/roboto/Roboto-Regular.ttf -> /output/font/roboto/Roboto-Regular.ttf.br
2023/08/01 18:35:29 br /tmp/work/font/roboto/Roboto-Medium.ttf -> /output/font/roboto/Roboto-Medium.ttf.br
2023/08/01 18:35:29 gz /tmp/work/font/roboto/Roboto-Regular.ttf -> /output/font/roboto/Roboto-Regular.ttf.gz
2023/08/01 18:35:29 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/img/overlays/05.png /tmp/work/img/overlays/05.png
2023/08/01 18:35:29 gz /tmp/work/font/roboto/Roboto-Medium.ttf -> /output/font/roboto/Roboto-Medium.ttf.gz
2023/08/01 18:35:29 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/img/overlays/06.png /tmp/work/img/overlays/06.png
2023/08/01 18:35:29 Optimizing /tmp/work/img/overlays/04.png
Input size: 211 (0K)
Result size: 69 (0K). Percentage of original: 32.701%
Result is smaller


2023/08/01 18:35:29 algorithm: run /usr/bin/brotli --quality=11 --output=/output/img/overlays/04.png.br /tmp/work/img/overlays/04.png
2023/08/01 18:35:29 br /tmp/work/img/overlays/04.png -> /output/img/overlays/04.png.br
2023/08/01 18:35:29 gz /tmp/work/img/overlays/04.png -> /output/img/overlays/04.png.gz
2023/08/01 18:35:29 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/img/overlays/07.png /tmp/work/img/overlays/07.png
2023/08/01 18:35:29 Optimizing /tmp/work/img/overlays/03.png
Input size: 209 (0K)
Result size: 70 (0K). Percentage of original: 33.493%
Result is smaller


2023/08/01 18:35:29 algorithm: run /usr/bin/brotli --quality=11 --output=/output/img/overlays/03.png.br /tmp/work/img/overlays/03.png
2023/08/01 18:35:29 br /tmp/work/img/overlays/03.png -> /output/img/overlays/03.png.br
2023/08/01 18:35:29 gz /tmp/work/img/overlays/03.png -> /output/img/overlays/03.png.gz
2023/08/01 18:35:29 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/img/overlays/08.png /tmp/work/img/overlays/08.png
2023/08/01 18:35:29 Optimizing /tmp/work/img/overlays/06.png
Input size: 211 (0K)
Result size: 73 (0K). Percentage of original: 34.597%
Result is smaller


2023/08/01 18:35:29 algorithm: run /usr/bin/brotli --quality=11 --output=/output/img/overlays/06.png.br /tmp/work/img/overlays/06.png
2023/08/01 18:35:29 br /tmp/work/img/overlays/06.png -> /output/img/overlays/06.png.br
2023/08/01 18:35:29 gz /tmp/work/img/overlays/06.png -> /output/img/overlays/06.png.gz
2023/08/01 18:35:29 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/img/overlays/09.png /tmp/work/img/overlays/09.png
2023/08/01 18:35:29 Optimizing /tmp/work/img/overlays/07.png
Input size: 215 (0K)
Result size: 84 (0K). Percentage of original: 39.070%
Result is smaller


2023/08/01 18:35:29 algorithm: run /usr/bin/brotli --quality=11 --output=/output/img/overlays/07.png.br /tmp/work/img/overlays/07.png
2023/08/01 18:35:29 br /tmp/work/img/overlays/07.png -> /output/img/overlays/07.png.br
2023/08/01 18:35:29 gz /tmp/work/img/overlays/07.png -> /output/img/overlays/07.png.gz
2023/08/01 18:35:29 algorithm: run /usr/bin/brotli --quality=11 --output=/output/img/svg/arrow_left.svg.br /tmp/work/img/svg/arrow_left.svg
2023/08/01 18:35:29 br /tmp/work/img/svg/arrow_left.svg -> /output/img/svg/arrow_left.svg.br
2023/08/01 18:35:29 gz /tmp/work/img/svg/arrow_left.svg -> /output/img/svg/arrow_left.svg.gz
2023/08/01 18:35:29 algorithm: run /usr/bin/brotli --quality=11 --output=/output/img/svg/arrow_right.svg.br /tmp/work/img/svg/arrow_right.svg
2023/08/01 18:35:29 br /tmp/work/img/svg/arrow_right.svg -> /output/img/svg/arrow_right.svg.br
2023/08/01 18:35:29 gz /tmp/work/img/svg/arrow_right.svg -> /output/img/svg/arrow_right.svg.gz
2023/08/01 18:35:29 br /tmp/work/font/roboto/Roboto-Regular.woff -> /output/font/roboto/Roboto-Regular.woff.br
2023/08/01 18:35:29 gz /tmp/work/font/roboto/Roboto-Regular.woff -> /output/font/roboto/Roboto-Regular.woff.gz
2023/08/01 18:35:29 Optimizing /tmp/work/img/overlays/08.png
Input size: 146 (0K)
Result size: 90 (0K). Percentage of original: 61.644%
Result is smaller


2023/08/01 18:35:29 algorithm: run /usr/bin/brotli --quality=11 --output=/output/img/overlays/08.png.br /tmp/work/img/overlays/08.png
2023/08/01 18:35:29 br /tmp/work/img/overlays/08.png -> /output/img/overlays/08.png.br
2023/08/01 18:35:29 gz /tmp/work/img/overlays/08.png -> /output/img/overlays/08.png.gz
2023/08/01 18:35:29 Optimizing /tmp/work/img/overlays/05.png
Input size: 213 (0K)
Result size: 79 (0K). Percentage of original: 37.089%
Result is smaller


2023/08/01 18:35:29 algorithm: run /usr/bin/brotli --quality=11 --output=/output/img/overlays/05.png.br /tmp/work/img/overlays/05.png
2023/08/01 18:35:30 br /tmp/work/img/overlays/05.png -> /output/img/overlays/05.png.br
2023/08/01 18:35:30 gz /tmp/work/img/overlays/05.png -> /output/img/overlays/05.png.gz
2023/08/01 18:35:30 Optimizing /tmp/work/img/overlays/09.png
Input size: 137 (0K)
Result size: 94 (0K). Percentage of original: 68.613%
Result is smaller


2023/08/01 18:35:30 algorithm: run /usr/bin/brotli --quality=11 --output=/output/img/overlays/09.png.br /tmp/work/img/overlays/09.png
2023/08/01 18:35:30 br /tmp/work/img/overlays/09.png -> /output/img/overlays/09.png.br
2023/08/01 18:35:30 gz /tmp/work/img/overlays/09.png -> /output/img/overlays/09.png.gz
2023/08/01 18:35:30 br /tmp/work/font/roboto/Roboto-Thin.woff -> /output/font/roboto/Roboto-Thin.woff.br
2023/08/01 18:35:30 gz /tmp/work/font/roboto/Roboto-Thin.woff -> /output/font/roboto/Roboto-Thin.woff.gz
2023/08/01 18:35:30 br /tmp/work/font/roboto/Roboto-Thin.ttf -> /output/font/roboto/Roboto-Thin.ttf.br
2023/08/01 18:35:30 gz /tmp/work/font/roboto/Roboto-Thin.ttf -> /output/font/roboto/Roboto-Thin.ttf.gz
2023/08/01 18:35:30 br /tmp/work/js/mdb.js -> /output/js/mdb.js.br
2023/08/01 18:35:30 gz /tmp/work/js/mdb.js -> /output/js/mdb.js.gz
2023/08/01 18:35:30 processed mdbootstrap
