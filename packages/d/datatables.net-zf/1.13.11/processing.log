2024/02/27 11:03:47 optimizing files (Js true, Css true, Png true, Jpg true)
2024/02/27 11:03:47 /tmp/work/css/dataTables.foundation.css already has a compressed version: /tmp/work/css/dataTables.foundation.min.css
2024/02/27 11:03:47 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/images/sort_asc_disabled.png /tmp/work/images/sort_asc_disabled.png
2024/02/27 11:03:47 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/images/sort_asc.png /tmp/work/images/sort_asc.png
2024/02/27 11:03:47 sri /tmp/work/css/dataTables.foundation.min.css -> /output/css/dataTables.foundation.min.css.sri
2024/02/27 11:03:47 sri /tmp/work/css/dataTables.foundation.css -> /output/css/dataTables.foundation.css.sri
2024/02/27 11:03:47 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/images/sort_desc_disabled.png /tmp/work/images/sort_desc_disabled.png
2024/02/27 11:03:47 algorithm: run /usr/bin/brotli --quality=11 --output=/output/css/dataTables.foundation.css.br /tmp/work/css/dataTables.foundation.css
2024/02/27 11:03:47 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/images/sort_desc.png /tmp/work/images/sort_desc.png
2024/02/27 11:03:47 algorithm: run /usr/bin/brotli --quality=11 --output=/output/css/dataTables.foundation.min.css.br /tmp/work/css/dataTables.foundation.min.css
2024/02/27 11:03:47 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/images/sort_both.png /tmp/work/images/sort_both.png
2024/02/27 11:03:47 /tmp/work/js/dataTables.foundation.min.js already has corresponding compressed file
2024/02/27 11:03:47 sri /tmp/work/js/dataTables.foundation.js -> /output/js/dataTables.foundation.js.sri
2024/02/27 11:03:47 algorithm: run /usr/bin/brotli --quality=11 --output=/output/js/dataTables.foundation.js.br /tmp/work/js/dataTables.foundation.js
2024/02/27 11:03:47 br /tmp/work/js/dataTables.foundation.js -> /output/js/dataTables.foundation.js.br
2024/02/27 11:03:47 gz /tmp/work/js/dataTables.foundation.js -> /output/js/dataTables.foundation.js.gz
2024/02/27 11:03:47 /tmp/work/js/dataTables.foundation.min.js is already compressed
2024/02/27 11:03:47 sri /tmp/work/js/dataTables.foundation.min.js -> /output/js/dataTables.foundation.min.js.sri
2024/02/27 11:03:47 algorithm: run /usr/bin/brotli --quality=11 --output=/output/js/dataTables.foundation.min.js.br /tmp/work/js/dataTables.foundation.min.js
2024/02/27 11:03:47 br /tmp/work/js/dataTables.foundation.min.js -> /output/js/dataTables.foundation.min.js.br
2024/02/27 11:03:47 gz /tmp/work/js/dataTables.foundation.min.js -> /output/js/dataTables.foundation.min.js.gz
2024/02/27 11:03:47 algorithm: run /usr/bin/brotli --quality=11 --output=/output/js/dataTables.foundation.min.mjs.br /tmp/work/js/dataTables.foundation.min.mjs
2024/02/27 11:03:47 br /tmp/work/css/dataTables.foundation.min.css -> /output/css/dataTables.foundation.min.css.br
2024/02/27 11:03:47 gz /tmp/work/css/dataTables.foundation.min.css -> /output/css/dataTables.foundation.min.css.gz
2024/02/27 11:03:47 algorithm: run /usr/bin/brotli --quality=11 --output=/output/js/dataTables.foundation.mjs.br /tmp/work/js/dataTables.foundation.mjs
2024/02/27 11:03:47 br /tmp/work/css/dataTables.foundation.css -> /output/css/dataTables.foundation.css.br
2024/02/27 11:03:47 gz /tmp/work/css/dataTables.foundation.css -> /output/css/dataTables.foundation.css.gz
2024/02/27 11:03:47 br /tmp/work/js/dataTables.foundation.min.mjs -> /output/js/dataTables.foundation.min.mjs.br
2024/02/27 11:03:47 gz /tmp/work/js/dataTables.foundation.min.mjs -> /output/js/dataTables.foundation.min.mjs.gz
2024/02/27 11:03:47 br /tmp/work/js/dataTables.foundation.mjs -> /output/js/dataTables.foundation.mjs.br
2024/02/27 11:03:47 gz /tmp/work/js/dataTables.foundation.mjs -> /output/js/dataTables.foundation.mjs.gz
2024/02/27 11:03:47 Optimizing /tmp/work/images/sort_desc_disabled.png
Input size: 148 (0K)
Result size: 159 (0K). Percentage of original: 107.432%
Preserving original PNG since it was smaller


2024/02/27 11:03:47 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/sort_desc_disabled.png.br /tmp/work/images/sort_desc_disabled.png
2024/02/27 11:03:47 br /tmp/work/images/sort_desc_disabled.png -> /output/images/sort_desc_disabled.png.br
2024/02/27 11:03:47 gz /tmp/work/images/sort_desc_disabled.png -> /output/images/sort_desc_disabled.png.gz
2024/02/27 11:03:47 Optimizing /tmp/work/images/sort_desc.png
Input size: 158 (0K)
Result size: 157 (0K). Percentage of original: 99.367%
Result is smaller


2024/02/27 11:03:47 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/sort_desc.png.br /tmp/work/images/sort_desc.png
2024/02/27 11:03:47 br /tmp/work/images/sort_desc.png -> /output/images/sort_desc.png.br
2024/02/27 11:03:47 gz /tmp/work/images/sort_desc.png -> /output/images/sort_desc.png.gz
2024/02/27 11:03:47 Optimizing /tmp/work/images/sort_asc_disabled.png
Input size: 146 (0K)
Result size: 157 (0K). Percentage of original: 107.534%
Preserving original PNG since it was smaller


2024/02/27 11:03:47 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/sort_asc_disabled.png.br /tmp/work/images/sort_asc_disabled.png
2024/02/27 11:03:47 br /tmp/work/images/sort_asc_disabled.png -> /output/images/sort_asc_disabled.png.br
2024/02/27 11:03:47 gz /tmp/work/images/sort_asc_disabled.png -> /output/images/sort_asc_disabled.png.gz
2024/02/27 11:03:47 Optimizing /tmp/work/images/sort_asc.png
Input size: 160 (0K)
Result size: 158 (0K). Percentage of original: 98.750%
Result is smaller


2024/02/27 11:03:47 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/sort_asc.png.br /tmp/work/images/sort_asc.png
2024/02/27 11:03:47 br /tmp/work/images/sort_asc.png -> /output/images/sort_asc.png.br
2024/02/27 11:03:47 gz /tmp/work/images/sort_asc.png -> /output/images/sort_asc.png.gz
2024/02/27 11:03:47 Optimizing /tmp/work/images/sort_both.png
Input size: 201 (0K)
Result size: 212 (0K). Percentage of original: 105.473%
Preserving original PNG since it was smaller


2024/02/27 11:03:47 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/sort_both.png.br /tmp/work/images/sort_both.png
2024/02/27 11:03:47 br /tmp/work/images/sort_both.png -> /output/images/sort_both.png.br
2024/02/27 11:03:47 gz /tmp/work/images/sort_both.png -> /output/images/sort_both.png.gz
2024/02/27 11:03:47 processed datatables.net-zf
