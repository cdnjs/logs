2023/08/01 15:39:44 optimizing files (Js true, Css true, Png true, Jpg true)
2023/08/01 15:39:44 /tmp/work/dist/css/basic/emojify.css already has a compressed version: /tmp/work/dist/css/basic/emojify.min.css
2023/08/01 15:39:44 sri /tmp/work/dist/css/basic/emojify.css -> /output/css/basic/emojify.css.sri
2023/08/01 15:39:44 algorithm: run /usr/bin/brotli --quality=11 --output=/output/css/basic/emojify.css.br /tmp/work/dist/css/basic/emojify.css
2023/08/01 15:39:44 sri /tmp/work/dist/css/basic/emojify.min.css -> /output/css/basic/emojify.min.css.sri
2023/08/01 15:39:44 algorithm: run /usr/bin/brotli --quality=11 --output=/output/css/basic/emojify.min.css.br /tmp/work/dist/css/basic/emojify.min.css
2023/08/01 15:39:44 /tmp/work/dist/css/data-uri/emojify-emoticons.css already has a compressed version: /tmp/work/dist/css/data-uri/emojify-emoticons.min.css
2023/08/01 15:39:44 sri /tmp/work/dist/css/data-uri/emojify-emoticons.min.css -> /output/css/data-uri/emojify-emoticons.min.css.sri
2023/08/01 15:39:44 algorithm: run /usr/bin/brotli --quality=11 --output=/output/css/data-uri/emojify-emoticons.min.css.br /tmp/work/dist/css/data-uri/emojify-emoticons.min.css
2023/08/01 15:39:44 sri /tmp/work/dist/css/data-uri/emojify-emoticons.css -> /output/css/data-uri/emojify-emoticons.css.sri
2023/08/01 15:39:44 algorithm: run /usr/bin/brotli --quality=11 --output=/output/css/data-uri/emojify-emoticons.css.br /tmp/work/dist/css/data-uri/emojify-emoticons.css
2023/08/01 15:39:44 /tmp/work/dist/css/data-uri/emojify.css already has a compressed version: /tmp/work/dist/css/data-uri/emojify.min.css
2023/08/01 15:39:44 br /tmp/work/dist/css/basic/emojify.min.css -> /output/css/basic/emojify.min.css.br
2023/08/01 15:39:44 gz /tmp/work/dist/css/basic/emojify.min.css -> /output/css/basic/emojify.min.css.gz
2023/08/01 15:39:44 /tmp/work/dist/css/sprites/emojify-emoticons.css already has a compressed version: /tmp/work/dist/css/sprites/emojify-emoticons.min.css
2023/08/01 15:39:44 sri /tmp/work/dist/css/sprites/emojify-emoticons.css -> /output/css/sprites/emojify-emoticons.css.sri
2023/08/01 15:39:44 algorithm: run /usr/bin/brotli --quality=11 --output=/output/css/sprites/emojify-emoticons.css.br /tmp/work/dist/css/sprites/emojify-emoticons.css
2023/08/01 15:39:44 sri /tmp/work/dist/css/sprites/emojify-emoticons.min.css -> /output/css/sprites/emojify-emoticons.min.css.sri
2023/08/01 15:39:44 algorithm: run /usr/bin/brotli --quality=11 --output=/output/css/sprites/emojify-emoticons.min.css.br /tmp/work/dist/css/sprites/emojify-emoticons.min.css
2023/08/01 15:39:44 sri /tmp/work/dist/css/data-uri/emojify.min.css -> /output/css/data-uri/emojify.min.css.sri
2023/08/01 15:39:44 algorithm: run /usr/bin/brotli --quality=11 --output=/output/css/data-uri/emojify.min.css.br /tmp/work/dist/css/data-uri/emojify.min.css
2023/08/01 15:39:44 /tmp/work/dist/css/sprites/emojify.css already has a compressed version: /tmp/work/dist/css/sprites/emojify.min.css
2023/08/01 15:39:44 br /tmp/work/dist/css/basic/emojify.css -> /output/css/basic/emojify.css.br
2023/08/01 15:39:44 br /tmp/work/dist/css/sprites/emojify-emoticons.css -> /output/css/sprites/emojify-emoticons.css.br
2023/08/01 15:39:44 sri /tmp/work/dist/css/sprites/emojify.css -> /output/css/sprites/emojify.css.sri
2023/08/01 15:39:44 algorithm: run /usr/bin/brotli --quality=11 --output=/output/css/sprites/emojify.css.br /tmp/work/dist/css/sprites/emojify.css
2023/08/01 15:39:44 gz /tmp/work/dist/css/basic/emojify.css -> /output/css/basic/emojify.css.gz
2023/08/01 15:39:44 sri /tmp/work/dist/css/sprites/emojify.min.css -> /output/css/sprites/emojify.min.css.sri
2023/08/01 15:39:44 algorithm: run /usr/bin/brotli --quality=11 --output=/output/css/sprites/emojify.min.css.br /tmp/work/dist/css/sprites/emojify.min.css
2023/08/01 15:39:44 gz /tmp/work/dist/css/sprites/emojify-emoticons.css -> /output/css/sprites/emojify-emoticons.css.gz
2023/08/01 15:39:44 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/-1.png /tmp/work/dist/images/basic/-1.png
2023/08/01 15:39:44 sri /tmp/work/dist/css/data-uri/emojify.css -> /output/css/data-uri/emojify.css.sri
2023/08/01 15:39:44 algorithm: run /usr/bin/brotli --quality=11 --output=/output/css/data-uri/emojify.css.br /tmp/work/dist/css/data-uri/emojify.css
2023/08/01 15:39:44 br /tmp/work/dist/css/sprites/emojify-emoticons.min.css -> /output/css/sprites/emojify-emoticons.min.css.br
2023/08/01 15:39:44 gz /tmp/work/dist/css/sprites/emojify-emoticons.min.css -> /output/css/sprites/emojify-emoticons.min.css.gz
2023/08/01 15:39:44 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/+1.png /tmp/work/dist/images/basic/+1.png
2023/08/01 15:39:45 br /tmp/work/dist/css/sprites/emojify.min.css -> /output/css/sprites/emojify.min.css.br
2023/08/01 15:39:45 gz /tmp/work/dist/css/sprites/emojify.min.css -> /output/css/sprites/emojify.min.css.gz
2023/08/01 15:39:45 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/100.png /tmp/work/dist/images/basic/100.png
2023/08/01 15:39:46 br /tmp/work/dist/css/data-uri/emojify-emoticons.css -> /output/css/data-uri/emojify-emoticons.css.br
2023/08/01 15:39:46 br /tmp/work/dist/css/sprites/emojify.css -> /output/css/sprites/emojify.css.br
2023/08/01 15:39:46 gz /tmp/work/dist/css/data-uri/emojify-emoticons.css -> /output/css/data-uri/emojify-emoticons.css.gz
2023/08/01 15:39:46 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/1234.png /tmp/work/dist/images/basic/1234.png
2023/08/01 15:39:46 gz /tmp/work/dist/css/sprites/emojify.css -> /output/css/sprites/emojify.css.gz
2023/08/01 15:39:46 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/8ball.png /tmp/work/dist/images/basic/8ball.png
2023/08/01 15:39:46 br /tmp/work/dist/css/data-uri/emojify-emoticons.min.css -> /output/css/data-uri/emojify-emoticons.min.css.br
2023/08/01 15:39:46 gz /tmp/work/dist/css/data-uri/emojify-emoticons.min.css -> /output/css/data-uri/emojify-emoticons.min.css.gz
2023/08/01 15:39:46 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/a.png /tmp/work/dist/images/basic/a.png
2023/08/01 15:39:54 Optimizing /tmp/work/dist/images/basic/+1.png
Input size: 5075 (4K)
Result size: 5052 (4K). Percentage of original: 99.547%
Result is smaller


2023/08/01 15:39:54 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/+1.png.br /tmp/work/dist/images/basic/+1.png
2023/08/01 15:39:54 br /tmp/work/dist/images/basic/+1.png -> /output/images/basic/+1.png.br
2023/08/01 15:39:54 gz /tmp/work/dist/images/basic/+1.png -> /output/images/basic/+1.png.gz
2023/08/01 15:39:54 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/ab.png /tmp/work/dist/images/basic/ab.png
2023/08/01 15:39:56 Optimizing /tmp/work/dist/images/basic/8ball.png
Input size: 4141 (4K)
Result size: 4143 (4K). Percentage of original: 100.048%
Preserving original PNG since it was smaller


2023/08/01 15:39:56 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/8ball.png.br /tmp/work/dist/images/basic/8ball.png
2023/08/01 15:39:56 Optimizing /tmp/work/dist/images/basic/1234.png
Input size: 4751 (4K)
Result size: 4766 (4K). Percentage of original: 100.316%
Preserving original PNG since it was smaller


2023/08/01 15:39:56 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/1234.png.br /tmp/work/dist/images/basic/1234.png
2023/08/01 15:39:56 br /tmp/work/dist/images/basic/8ball.png -> /output/images/basic/8ball.png.br
2023/08/01 15:39:56 gz /tmp/work/dist/images/basic/8ball.png -> /output/images/basic/8ball.png.gz
2023/08/01 15:39:56 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/abc.png /tmp/work/dist/images/basic/abc.png
2023/08/01 15:39:56 br /tmp/work/dist/images/basic/1234.png -> /output/images/basic/1234.png.br
2023/08/01 15:39:56 gz /tmp/work/dist/images/basic/1234.png -> /output/images/basic/1234.png.gz
2023/08/01 15:39:56 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/abcd.png /tmp/work/dist/images/basic/abcd.png
2023/08/01 15:39:57 Optimizing /tmp/work/dist/images/basic/a.png
Input size: 3154 (3K)
Result size: 3078 (3K). Percentage of original: 97.590%
Result is smaller


2023/08/01 15:39:57 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/a.png.br /tmp/work/dist/images/basic/a.png
2023/08/01 15:39:57 br /tmp/work/dist/images/basic/a.png -> /output/images/basic/a.png.br
2023/08/01 15:39:57 gz /tmp/work/dist/images/basic/a.png -> /output/images/basic/a.png.gz
2023/08/01 15:39:57 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/accept.png /tmp/work/dist/images/basic/accept.png
2023/08/01 15:39:57 Optimizing /tmp/work/dist/images/basic/-1.png
Input size: 5070 (4K)
Result size: 5165 (5K). Percentage of original: 101.874%
Preserving original PNG since it was smaller


2023/08/01 15:39:57 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/-1.png.br /tmp/work/dist/images/basic/-1.png
2023/08/01 15:39:57 br /tmp/work/dist/images/basic/-1.png -> /output/images/basic/-1.png.br
2023/08/01 15:39:57 gz /tmp/work/dist/images/basic/-1.png -> /output/images/basic/-1.png.gz
2023/08/01 15:39:57 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/aerial_tramway.png /tmp/work/dist/images/basic/aerial_tramway.png
2023/08/01 15:39:59 Optimizing /tmp/work/dist/images/basic/100.png
Input size: 3251 (3K)
Result size: 3174 (3K). Percentage of original: 97.631%
Result is smaller


2023/08/01 15:39:59 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/100.png.br /tmp/work/dist/images/basic/100.png
2023/08/01 15:39:59 br /tmp/work/dist/images/basic/100.png -> /output/images/basic/100.png.br
2023/08/01 15:39:59 gz /tmp/work/dist/images/basic/100.png -> /output/images/basic/100.png.gz
2023/08/01 15:39:59 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/airplane.png /tmp/work/dist/images/basic/airplane.png
2023/08/01 15:40:02 Optimizing /tmp/work/dist/images/basic/abc.png
Input size: 4247 (4K)
Result size: 4272 (4K). Percentage of original: 100.589%
Preserving original PNG since it was smaller


2023/08/01 15:40:02 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/abc.png.br /tmp/work/dist/images/basic/abc.png
2023/08/01 15:40:02 br /tmp/work/dist/images/basic/abc.png -> /output/images/basic/abc.png.br
2023/08/01 15:40:02 gz /tmp/work/dist/images/basic/abc.png -> /output/images/basic/abc.png.gz
2023/08/01 15:40:02 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/alarm_clock.png /tmp/work/dist/images/basic/alarm_clock.png
2023/08/01 15:40:04 Optimizing /tmp/work/dist/images/basic/accept.png
Input size: 4729 (4K)
Result size: 4913 (4K). Percentage of original: 103.891%
Preserving original PNG since it was smaller


2023/08/01 15:40:04 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/accept.png.br /tmp/work/dist/images/basic/accept.png
2023/08/01 15:40:04 br /tmp/work/dist/images/basic/accept.png -> /output/images/basic/accept.png.br
2023/08/01 15:40:04 gz /tmp/work/dist/images/basic/accept.png -> /output/images/basic/accept.png.gz
2023/08/01 15:40:04 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/alien.png /tmp/work/dist/images/basic/alien.png
2023/08/01 15:40:05 Optimizing /tmp/work/dist/images/basic/ab.png
Input size: 3859 (3K)
Result size: 3817 (3K). Percentage of original: 98.912%
Result is smaller


2023/08/01 15:40:05 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/ab.png.br /tmp/work/dist/images/basic/ab.png
2023/08/01 15:40:05 br /tmp/work/dist/images/basic/ab.png -> /output/images/basic/ab.png.br
2023/08/01 15:40:05 gz /tmp/work/dist/images/basic/ab.png -> /output/images/basic/ab.png.gz
2023/08/01 15:40:05 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/ambulance.png /tmp/work/dist/images/basic/ambulance.png
2023/08/01 15:40:06 Optimizing /tmp/work/dist/images/basic/abcd.png
Input size: 4471 (4K)
Result size: 4503 (4K). Percentage of original: 100.716%
Preserving original PNG since it was smaller


2023/08/01 15:40:06 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/abcd.png.br /tmp/work/dist/images/basic/abcd.png
2023/08/01 15:40:06 br /tmp/work/dist/images/basic/abcd.png -> /output/images/basic/abcd.png.br
2023/08/01 15:40:06 gz /tmp/work/dist/images/basic/abcd.png -> /output/images/basic/abcd.png.gz
2023/08/01 15:40:06 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/anchor.png /tmp/work/dist/images/basic/anchor.png
2023/08/01 15:40:07 Optimizing /tmp/work/dist/images/basic/airplane.png
Input size: 4740 (4K)
Result size: 4815 (4K). Percentage of original: 101.582%
Preserving original PNG since it was smaller


2023/08/01 15:40:07 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/airplane.png.br /tmp/work/dist/images/basic/airplane.png
2023/08/01 15:40:07 br /tmp/work/dist/images/basic/airplane.png -> /output/images/basic/airplane.png.br
2023/08/01 15:40:07 gz /tmp/work/dist/images/basic/airplane.png -> /output/images/basic/airplane.png.gz
2023/08/01 15:40:07 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/angel.png /tmp/work/dist/images/basic/angel.png
2023/08/01 15:40:11 Optimizing /tmp/work/dist/images/basic/aerial_tramway.png
Input size: 3489 (3K)
Result size: 3522 (3K). Percentage of original: 100.946%
Preserving original PNG since it was smaller


2023/08/01 15:40:11 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/aerial_tramway.png.br /tmp/work/dist/images/basic/aerial_tramway.png
2023/08/01 15:40:11 br /tmp/work/dist/images/basic/aerial_tramway.png -> /output/images/basic/aerial_tramway.png.br
2023/08/01 15:40:11 gz /tmp/work/dist/images/basic/aerial_tramway.png -> /output/images/basic/aerial_tramway.png.gz
2023/08/01 15:40:11 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/anger.png /tmp/work/dist/images/basic/anger.png
2023/08/01 15:40:15 Optimizing /tmp/work/dist/images/basic/alarm_clock.png
Input size: 7062 (6K)
Result size: 7176 (7K). Percentage of original: 101.614%
Preserving original PNG since it was smaller


2023/08/01 15:40:15 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/alarm_clock.png.br /tmp/work/dist/images/basic/alarm_clock.png
2023/08/01 15:40:15 br /tmp/work/dist/images/basic/alarm_clock.png -> /output/images/basic/alarm_clock.png.br
2023/08/01 15:40:15 gz /tmp/work/dist/images/basic/alarm_clock.png -> /output/images/basic/alarm_clock.png.gz
2023/08/01 15:40:15 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/angry.png /tmp/work/dist/images/basic/angry.png
2023/08/01 15:40:15 Optimizing /tmp/work/dist/images/basic/anchor.png
Input size: 4479 (4K)
Result size: 4468 (4K). Percentage of original: 99.754%
Result is smaller


2023/08/01 15:40:15 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/anchor.png.br /tmp/work/dist/images/basic/anchor.png
2023/08/01 15:40:15 br /tmp/work/dist/images/basic/anchor.png -> /output/images/basic/anchor.png.br
2023/08/01 15:40:15 gz /tmp/work/dist/images/basic/anchor.png -> /output/images/basic/anchor.png.gz
2023/08/01 15:40:15 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/anguished.png /tmp/work/dist/images/basic/anguished.png
2023/08/01 15:40:16 Optimizing /tmp/work/dist/images/basic/alien.png
Input size: 5457 (5K)
Result size: 5334 (5K). Percentage of original: 97.746%
Result is smaller


2023/08/01 15:40:16 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/alien.png.br /tmp/work/dist/images/basic/alien.png
2023/08/01 15:40:16 br /tmp/work/dist/images/basic/alien.png -> /output/images/basic/alien.png.br
2023/08/01 15:40:16 gz /tmp/work/dist/images/basic/alien.png -> /output/images/basic/alien.png.gz
2023/08/01 15:40:16 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/ant.png /tmp/work/dist/images/basic/ant.png
2023/08/01 15:40:17 Optimizing /tmp/work/dist/images/basic/angel.png
Input size: 6672 (6K)
Result size: 6578 (6K). Percentage of original: 98.591%
Result is smaller


2023/08/01 15:40:17 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/angel.png.br /tmp/work/dist/images/basic/angel.png
2023/08/01 15:40:17 br /tmp/work/dist/images/basic/angel.png -> /output/images/basic/angel.png.br
2023/08/01 15:40:17 gz /tmp/work/dist/images/basic/angel.png -> /output/images/basic/angel.png.gz
2023/08/01 15:40:17 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/apple.png /tmp/work/dist/images/basic/apple.png
2023/08/01 15:40:19 Optimizing /tmp/work/dist/images/basic/anger.png
Input size: 3079 (3K)
Result size: 3202 (3K). Percentage of original: 103.995%
Preserving original PNG since it was smaller


2023/08/01 15:40:19 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/anger.png.br /tmp/work/dist/images/basic/anger.png
2023/08/01 15:40:19 br /tmp/work/dist/images/basic/anger.png -> /output/images/basic/anger.png.br
2023/08/01 15:40:19 gz /tmp/work/dist/images/basic/anger.png -> /output/images/basic/anger.png.gz
2023/08/01 15:40:19 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/aquarius.png /tmp/work/dist/images/basic/aquarius.png
2023/08/01 15:40:20 Optimizing /tmp/work/dist/images/basic/ambulance.png
Input size: 3708 (3K)
Result size: 3635 (3K). Percentage of original: 98.031%
Result is smaller


2023/08/01 15:40:20 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/ambulance.png.br /tmp/work/dist/images/basic/ambulance.png
2023/08/01 15:40:20 br /tmp/work/dist/images/basic/ambulance.png -> /output/images/basic/ambulance.png.br
2023/08/01 15:40:20 gz /tmp/work/dist/images/basic/ambulance.png -> /output/images/basic/ambulance.png.gz
2023/08/01 15:40:20 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/aries.png /tmp/work/dist/images/basic/aries.png
2023/08/01 15:40:21 Optimizing /tmp/work/dist/images/basic/ant.png
Input size: 2851 (2K)
Result size: 3021 (2K). Percentage of original: 105.963%
Preserving original PNG since it was smaller


2023/08/01 15:40:21 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/ant.png.br /tmp/work/dist/images/basic/ant.png
2023/08/01 15:40:21 br /tmp/work/dist/images/basic/ant.png -> /output/images/basic/ant.png.br
2023/08/01 15:40:21 gz /tmp/work/dist/images/basic/ant.png -> /output/images/basic/ant.png.gz
2023/08/01 15:40:21 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/arrow_backward.png /tmp/work/dist/images/basic/arrow_backward.png
2023/08/01 15:40:24 Optimizing /tmp/work/dist/images/basic/anguished.png
Input size: 5091 (4K)
Result size: 5023 (4K). Percentage of original: 98.664%
Result is smaller


2023/08/01 15:40:24 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/anguished.png.br /tmp/work/dist/images/basic/anguished.png
2023/08/01 15:40:24 br /tmp/work/dist/images/basic/anguished.png -> /output/images/basic/anguished.png.br
2023/08/01 15:40:24 gz /tmp/work/dist/images/basic/anguished.png -> /output/images/basic/anguished.png.gz
2023/08/01 15:40:24 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/arrow_double_down.png /tmp/work/dist/images/basic/arrow_double_down.png
2023/08/01 15:40:26 Optimizing /tmp/work/dist/images/basic/arrow_backward.png
Input size: 3180 (3K)
Result size: 3090 (3K). Percentage of original: 97.170%
Result is smaller


2023/08/01 15:40:26 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/arrow_backward.png.br /tmp/work/dist/images/basic/arrow_backward.png
2023/08/01 15:40:26 br /tmp/work/dist/images/basic/arrow_backward.png -> /output/images/basic/arrow_backward.png.br
2023/08/01 15:40:26 gz /tmp/work/dist/images/basic/arrow_backward.png -> /output/images/basic/arrow_backward.png.gz
2023/08/01 15:40:26 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/arrow_double_up.png /tmp/work/dist/images/basic/arrow_double_up.png
2023/08/01 15:40:28 Optimizing /tmp/work/dist/images/basic/angry.png
Input size: 5037 (4K)
Result size: 4754 (4K). Percentage of original: 94.382%
Result is smaller


2023/08/01 15:40:28 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/angry.png.br /tmp/work/dist/images/basic/angry.png
2023/08/01 15:40:28 br /tmp/work/dist/images/basic/angry.png -> /output/images/basic/angry.png.br
2023/08/01 15:40:28 gz /tmp/work/dist/images/basic/angry.png -> /output/images/basic/angry.png.gz
2023/08/01 15:40:28 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/arrow_down_small.png /tmp/work/dist/images/basic/arrow_down_small.png
2023/08/01 15:40:28 Optimizing /tmp/work/dist/images/basic/apple.png
Input size: 5630 (5K)
Result size: 5615 (5K). Percentage of original: 99.734%
Result is smaller


2023/08/01 15:40:28 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/apple.png.br /tmp/work/dist/images/basic/apple.png
2023/08/01 15:40:28 br /tmp/work/dist/images/basic/apple.png -> /output/images/basic/apple.png.br
2023/08/01 15:40:28 gz /tmp/work/dist/images/basic/apple.png -> /output/images/basic/apple.png.gz
2023/08/01 15:40:28 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/arrow_down.png /tmp/work/dist/images/basic/arrow_down.png
2023/08/01 15:40:29 Optimizing /tmp/work/dist/images/basic/aquarius.png
Input size: 5096 (4K)
Result size: 5112 (4K). Percentage of original: 100.314%
Preserving original PNG since it was smaller


2023/08/01 15:40:29 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/aquarius.png.br /tmp/work/dist/images/basic/aquarius.png
2023/08/01 15:40:29 br /tmp/work/dist/images/basic/aquarius.png -> /output/images/basic/aquarius.png.br
2023/08/01 15:40:29 gz /tmp/work/dist/images/basic/aquarius.png -> /output/images/basic/aquarius.png.gz
2023/08/01 15:40:29 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/arrow_forward.png /tmp/work/dist/images/basic/arrow_forward.png
2023/08/01 15:40:31 Optimizing /tmp/work/dist/images/basic/arrow_down.png
Input size: 3006 (2K)
Result size: 2898 (2K). Percentage of original: 96.407%
Result is smaller


2023/08/01 15:40:31 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/arrow_down.png.br /tmp/work/dist/images/basic/arrow_down.png
2023/08/01 15:40:31 br /tmp/work/dist/images/basic/arrow_down.png -> /output/images/basic/arrow_down.png.br
2023/08/01 15:40:31 gz /tmp/work/dist/images/basic/arrow_down.png -> /output/images/basic/arrow_down.png.gz
2023/08/01 15:40:31 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/arrow_heading_down.png /tmp/work/dist/images/basic/arrow_heading_down.png
2023/08/01 15:40:34 Optimizing /tmp/work/dist/images/basic/aries.png
Input size: 4343 (4K)
Result size: 4167 (4K). Percentage of original: 95.948%
Result is smaller


2023/08/01 15:40:34 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/aries.png.br /tmp/work/dist/images/basic/aries.png
2023/08/01 15:40:35 br /tmp/work/dist/images/basic/aries.png -> /output/images/basic/aries.png.br
2023/08/01 15:40:35 gz /tmp/work/dist/images/basic/aries.png -> /output/images/basic/aries.png.gz
2023/08/01 15:40:35 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/arrow_heading_up.png /tmp/work/dist/images/basic/arrow_heading_up.png
2023/08/01 15:40:37 Optimizing /tmp/work/dist/images/basic/arrow_heading_down.png
Input size: 3521 (3K)
Result size: 3422 (3K). Percentage of original: 97.188%
Result is smaller


2023/08/01 15:40:37 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/arrow_heading_down.png.br /tmp/work/dist/images/basic/arrow_heading_down.png
2023/08/01 15:40:37 br /tmp/work/dist/images/basic/arrow_heading_down.png -> /output/images/basic/arrow_heading_down.png.br
2023/08/01 15:40:37 gz /tmp/work/dist/images/basic/arrow_heading_down.png -> /output/images/basic/arrow_heading_down.png.gz
2023/08/01 15:40:37 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/arrow_left.png /tmp/work/dist/images/basic/arrow_left.png
2023/08/01 15:40:37 Optimizing /tmp/work/dist/images/basic/arrow_double_down.png
Input size: 3179 (3K)
Result size: 3135 (3K). Percentage of original: 98.616%
Result is smaller


2023/08/01 15:40:37 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/arrow_double_down.png.br /tmp/work/dist/images/basic/arrow_double_down.png
2023/08/01 15:40:37 br /tmp/work/dist/images/basic/arrow_double_down.png -> /output/images/basic/arrow_double_down.png.br
2023/08/01 15:40:37 gz /tmp/work/dist/images/basic/arrow_double_down.png -> /output/images/basic/arrow_double_down.png.gz
2023/08/01 15:40:37 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/arrow_lower_left.png /tmp/work/dist/images/basic/arrow_lower_left.png
2023/08/01 15:40:41 Optimizing /tmp/work/dist/images/basic/arrow_down_small.png
Input size: 2889 (2K)
Result size: 2802 (2K). Percentage of original: 96.989%
Result is smaller


2023/08/01 15:40:41 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/arrow_down_small.png.br /tmp/work/dist/images/basic/arrow_down_small.png
2023/08/01 15:40:41 br /tmp/work/dist/images/basic/arrow_down_small.png -> /output/images/basic/arrow_down_small.png.br
2023/08/01 15:40:41 gz /tmp/work/dist/images/basic/arrow_down_small.png -> /output/images/basic/arrow_down_small.png.gz
2023/08/01 15:40:41 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/arrow_lower_right.png /tmp/work/dist/images/basic/arrow_lower_right.png
2023/08/01 15:40:43 Optimizing /tmp/work/dist/images/basic/arrow_double_up.png
Input size: 3611 (3K)
Result size: 3587 (3K). Percentage of original: 99.335%
Result is smaller


2023/08/01 15:40:43 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/arrow_double_up.png.br /tmp/work/dist/images/basic/arrow_double_up.png
2023/08/01 15:40:43 br /tmp/work/dist/images/basic/arrow_double_up.png -> /output/images/basic/arrow_double_up.png.br
2023/08/01 15:40:43 gz /tmp/work/dist/images/basic/arrow_double_up.png -> /output/images/basic/arrow_double_up.png.gz
2023/08/01 15:40:43 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/arrow_right_hook.png /tmp/work/dist/images/basic/arrow_right_hook.png
2023/08/01 15:40:45 Optimizing /tmp/work/dist/images/basic/arrow_heading_up.png
Input size: 3520 (3K)
Result size: 3532 (3K). Percentage of original: 100.341%
Preserving original PNG since it was smaller


2023/08/01 15:40:45 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/arrow_heading_up.png.br /tmp/work/dist/images/basic/arrow_heading_up.png
2023/08/01 15:40:45 br /tmp/work/dist/images/basic/arrow_heading_up.png -> /output/images/basic/arrow_heading_up.png.br
2023/08/01 15:40:45 gz /tmp/work/dist/images/basic/arrow_heading_up.png -> /output/images/basic/arrow_heading_up.png.gz
2023/08/01 15:40:45 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/arrow_right.png /tmp/work/dist/images/basic/arrow_right.png
2023/08/01 15:40:48 Optimizing /tmp/work/dist/images/basic/arrow_forward.png
Input size: 3201 (3K)
Result size: 3085 (3K). Percentage of original: 96.376%
Result is smaller


2023/08/01 15:40:48 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/arrow_forward.png.br /tmp/work/dist/images/basic/arrow_forward.png
2023/08/01 15:40:48 br /tmp/work/dist/images/basic/arrow_forward.png -> /output/images/basic/arrow_forward.png.br
2023/08/01 15:40:48 gz /tmp/work/dist/images/basic/arrow_forward.png -> /output/images/basic/arrow_forward.png.gz
2023/08/01 15:40:48 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/arrow_up_down.png /tmp/work/dist/images/basic/arrow_up_down.png
2023/08/01 15:40:50 Optimizing /tmp/work/dist/images/basic/arrow_left.png
Input size: 3041 (2K)
Result size: 2936 (2K). Percentage of original: 96.547%
Result is smaller


2023/08/01 15:40:50 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/arrow_left.png.br /tmp/work/dist/images/basic/arrow_left.png
2023/08/01 15:40:50 br /tmp/work/dist/images/basic/arrow_left.png -> /output/images/basic/arrow_left.png.br
2023/08/01 15:40:50 gz /tmp/work/dist/images/basic/arrow_left.png -> /output/images/basic/arrow_left.png.gz
2023/08/01 15:40:50 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/arrow_up_small.png /tmp/work/dist/images/basic/arrow_up_small.png
2023/08/01 15:40:50 Optimizing /tmp/work/dist/images/basic/arrow_lower_left.png
Input size: 3342 (3K)
Result size: 3238 (3K). Percentage of original: 96.888%
Result is smaller


2023/08/01 15:40:50 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/arrow_lower_left.png.br /tmp/work/dist/images/basic/arrow_lower_left.png
2023/08/01 15:40:50 br /tmp/work/dist/images/basic/arrow_lower_left.png -> /output/images/basic/arrow_lower_left.png.br
2023/08/01 15:40:50 gz /tmp/work/dist/images/basic/arrow_lower_left.png -> /output/images/basic/arrow_lower_left.png.gz
2023/08/01 15:40:50 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/arrow_up.png /tmp/work/dist/images/basic/arrow_up.png
2023/08/01 15:40:53 Optimizing /tmp/work/dist/images/basic/arrow_right_hook.png
Input size: 3712 (3K)
Result size: 3722 (3K). Percentage of original: 100.269%
Preserving original PNG since it was smaller


2023/08/01 15:40:53 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/arrow_right_hook.png.br /tmp/work/dist/images/basic/arrow_right_hook.png
2023/08/01 15:40:53 br /tmp/work/dist/images/basic/arrow_right_hook.png -> /output/images/basic/arrow_right_hook.png.br
2023/08/01 15:40:53 gz /tmp/work/dist/images/basic/arrow_right_hook.png -> /output/images/basic/arrow_right_hook.png.gz
2023/08/01 15:40:53 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/arrow_upper_left.png /tmp/work/dist/images/basic/arrow_upper_left.png
2023/08/01 15:40:57 Optimizing /tmp/work/dist/images/basic/arrow_upper_left.png
Input size: 3227 (3K)
Result size: 3130 (3K). Percentage of original: 96.994%
Result is smaller


2023/08/01 15:40:57 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/arrow_upper_left.png.br /tmp/work/dist/images/basic/arrow_upper_left.png
2023/08/01 15:40:57 br /tmp/work/dist/images/basic/arrow_upper_left.png -> /output/images/basic/arrow_upper_left.png.br
2023/08/01 15:40:57 gz /tmp/work/dist/images/basic/arrow_upper_left.png -> /output/images/basic/arrow_upper_left.png.gz
2023/08/01 15:40:57 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/arrow_upper_right.png /tmp/work/dist/images/basic/arrow_upper_right.png
2023/08/01 15:40:58 Optimizing /tmp/work/dist/images/basic/arrow_right.png
Input size: 3022 (2K)
Result size: 2921 (2K). Percentage of original: 96.658%
Result is smaller


2023/08/01 15:40:58 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/arrow_right.png.br /tmp/work/dist/images/basic/arrow_right.png
2023/08/01 15:40:59 br /tmp/work/dist/images/basic/arrow_right.png -> /output/images/basic/arrow_right.png.br
2023/08/01 15:40:59 gz /tmp/work/dist/images/basic/arrow_right.png -> /output/images/basic/arrow_right.png.gz
2023/08/01 15:40:59 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/arrows_clockwise.png /tmp/work/dist/images/basic/arrows_clockwise.png
2023/08/01 15:41:01 Optimizing /tmp/work/dist/images/basic/arrow_lower_right.png
Input size: 3334 (3K)
Result size: 3219 (3K). Percentage of original: 96.551%
Result is smaller


2023/08/01 15:41:01 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/arrow_lower_right.png.br /tmp/work/dist/images/basic/arrow_lower_right.png
2023/08/01 15:41:02 br /tmp/work/dist/images/basic/arrow_lower_right.png -> /output/images/basic/arrow_lower_right.png.br
2023/08/01 15:41:02 gz /tmp/work/dist/images/basic/arrow_lower_right.png -> /output/images/basic/arrow_lower_right.png.gz
2023/08/01 15:41:02 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/arrows_counterclockwise.png /tmp/work/dist/images/basic/arrows_counterclockwise.png
2023/08/01 15:41:02 Optimizing /tmp/work/dist/images/basic/arrow_upper_right.png
Input size: 3235 (3K)
Result size: 3138 (3K). Percentage of original: 97.002%
Result is smaller


2023/08/01 15:41:02 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/arrow_upper_right.png.br /tmp/work/dist/images/basic/arrow_upper_right.png
2023/08/01 15:41:02 br /tmp/work/dist/images/basic/arrow_upper_right.png -> /output/images/basic/arrow_upper_right.png.br
2023/08/01 15:41:02 gz /tmp/work/dist/images/basic/arrow_upper_right.png -> /output/images/basic/arrow_upper_right.png.gz
2023/08/01 15:41:02 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/art.png /tmp/work/dist/images/basic/art.png
2023/08/01 15:41:03 br /tmp/work/dist/css/data-uri/emojify.min.css -> /output/css/data-uri/emojify.min.css.br
2023/08/01 15:41:03 gz /tmp/work/dist/css/data-uri/emojify.min.css -> /output/css/data-uri/emojify.min.css.gz
2023/08/01 15:41:03 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/articulated_lorry.png /tmp/work/dist/images/basic/articulated_lorry.png
2023/08/01 15:41:04 Optimizing /tmp/work/dist/images/basic/arrow_up_small.png
Input size: 3185 (3K)
Result size: 3081 (3K). Percentage of original: 96.735%
Result is smaller


2023/08/01 15:41:04 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/arrow_up_small.png.br /tmp/work/dist/images/basic/arrow_up_small.png
2023/08/01 15:41:04 br /tmp/work/dist/images/basic/arrow_up_small.png -> /output/images/basic/arrow_up_small.png.br
2023/08/01 15:41:04 gz /tmp/work/dist/images/basic/arrow_up_small.png -> /output/images/basic/arrow_up_small.png.gz
2023/08/01 15:41:04 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/astonished.png /tmp/work/dist/images/basic/astonished.png
2023/08/01 15:41:05 Optimizing /tmp/work/dist/images/basic/arrows_clockwise.png
Input size: 1399 (1K)
Result size: 1382 (1K). Percentage of original: 98.785%
Result is smaller


2023/08/01 15:41:05 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/arrows_clockwise.png.br /tmp/work/dist/images/basic/arrows_clockwise.png
2023/08/01 15:41:05 br /tmp/work/dist/images/basic/arrows_clockwise.png -> /output/images/basic/arrows_clockwise.png.br
2023/08/01 15:41:05 gz /tmp/work/dist/images/basic/arrows_clockwise.png -> /output/images/basic/arrows_clockwise.png.gz
2023/08/01 15:41:05 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/atm.png /tmp/work/dist/images/basic/atm.png
2023/08/01 15:41:07 Optimizing /tmp/work/dist/images/basic/astonished.png
Input size: 6043 (5K)
Result size: 5798 (5K). Percentage of original: 95.946%
Result is smaller


2023/08/01 15:41:07 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/astonished.png.br /tmp/work/dist/images/basic/astonished.png
2023/08/01 15:41:07 br /tmp/work/dist/images/basic/astonished.png -> /output/images/basic/astonished.png.br
2023/08/01 15:41:07 gz /tmp/work/dist/images/basic/astonished.png -> /output/images/basic/astonished.png.gz
2023/08/01 15:41:07 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/b.png /tmp/work/dist/images/basic/b.png
2023/08/01 15:41:08 Optimizing /tmp/work/dist/images/basic/arrow_up.png
Input size: 3073 (3K)
Result size: 2962 (2K). Percentage of original: 96.388%
Result is smaller


2023/08/01 15:41:08 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/arrow_up.png.br /tmp/work/dist/images/basic/arrow_up.png
2023/08/01 15:41:08 br /tmp/work/dist/images/basic/arrow_up.png -> /output/images/basic/arrow_up.png.br
2023/08/01 15:41:08 gz /tmp/work/dist/images/basic/arrow_up.png -> /output/images/basic/arrow_up.png.gz
2023/08/01 15:41:08 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/baby_bottle.png /tmp/work/dist/images/basic/baby_bottle.png
2023/08/01 15:41:08 br /tmp/work/dist/css/data-uri/emojify.css -> /output/css/data-uri/emojify.css.br
2023/08/01 15:41:09 gz /tmp/work/dist/css/data-uri/emojify.css -> /output/css/data-uri/emojify.css.gz
2023/08/01 15:41:09 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/baby_chick.png /tmp/work/dist/images/basic/baby_chick.png
2023/08/01 15:41:11 Optimizing /tmp/work/dist/images/basic/arrow_up_down.png
Input size: 3542 (3K)
Result size: 3445 (3K). Percentage of original: 97.261%
Result is smaller


2023/08/01 15:41:11 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/arrow_up_down.png.br /tmp/work/dist/images/basic/arrow_up_down.png
2023/08/01 15:41:11 br /tmp/work/dist/images/basic/arrow_up_down.png -> /output/images/basic/arrow_up_down.png.br
2023/08/01 15:41:11 gz /tmp/work/dist/images/basic/arrow_up_down.png -> /output/images/basic/arrow_up_down.png.gz
2023/08/01 15:41:11 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/baby_symbol.png /tmp/work/dist/images/basic/baby_symbol.png
2023/08/01 15:41:12 Optimizing /tmp/work/dist/images/basic/b.png
Input size: 3025 (2K)
Result size: 2963 (2K). Percentage of original: 97.950%
Result is smaller


2023/08/01 15:41:12 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/b.png.br /tmp/work/dist/images/basic/b.png
2023/08/01 15:41:12 br /tmp/work/dist/images/basic/b.png -> /output/images/basic/b.png.br
2023/08/01 15:41:12 gz /tmp/work/dist/images/basic/b.png -> /output/images/basic/b.png.gz
2023/08/01 15:41:12 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/baby.png /tmp/work/dist/images/basic/baby.png
2023/08/01 15:41:12 Optimizing /tmp/work/dist/images/basic/atm.png
Input size: 4072 (3K)
Result size: 4137 (4K). Percentage of original: 101.596%
Preserving original PNG since it was smaller


2023/08/01 15:41:12 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/atm.png.br /tmp/work/dist/images/basic/atm.png
2023/08/01 15:41:12 br /tmp/work/dist/images/basic/atm.png -> /output/images/basic/atm.png.br
2023/08/01 15:41:12 gz /tmp/work/dist/images/basic/atm.png -> /output/images/basic/atm.png.gz
2023/08/01 15:41:12 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/back.png /tmp/work/dist/images/basic/back.png
2023/08/01 15:41:12 Optimizing /tmp/work/dist/images/basic/arrows_counterclockwise.png
Input size: 4816 (4K)
Result size: 4821 (4K). Percentage of original: 100.104%
Preserving original PNG since it was smaller


2023/08/01 15:41:12 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/arrows_counterclockwise.png.br /tmp/work/dist/images/basic/arrows_counterclockwise.png
2023/08/01 15:41:12 br /tmp/work/dist/images/basic/arrows_counterclockwise.png -> /output/images/basic/arrows_counterclockwise.png.br
2023/08/01 15:41:12 gz /tmp/work/dist/images/basic/arrows_counterclockwise.png -> /output/images/basic/arrows_counterclockwise.png.gz
2023/08/01 15:41:12 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/baggage_claim.png /tmp/work/dist/images/basic/baggage_claim.png
2023/08/01 15:41:13 Optimizing /tmp/work/dist/images/basic/art.png
Input size: 6744 (6K)
Result size: 6734 (6K). Percentage of original: 99.852%
Result is smaller


2023/08/01 15:41:13 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/art.png.br /tmp/work/dist/images/basic/art.png
2023/08/01 15:41:13 br /tmp/work/dist/images/basic/art.png -> /output/images/basic/art.png.br
2023/08/01 15:41:13 gz /tmp/work/dist/images/basic/art.png -> /output/images/basic/art.png.gz
2023/08/01 15:41:13 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/balloon.png /tmp/work/dist/images/basic/balloon.png
2023/08/01 15:41:15 Optimizing /tmp/work/dist/images/basic/baby.png
Input size: 5921 (5K)
Result size: 5954 (5K). Percentage of original: 100.557%
Preserving original PNG since it was smaller


2023/08/01 15:41:15 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/baby.png.br /tmp/work/dist/images/basic/baby.png
2023/08/01 15:41:15 br /tmp/work/dist/images/basic/baby.png -> /output/images/basic/baby.png.br
2023/08/01 15:41:15 gz /tmp/work/dist/images/basic/baby.png -> /output/images/basic/baby.png.gz
2023/08/01 15:41:15 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/ballot_box_with_check.png /tmp/work/dist/images/basic/ballot_box_with_check.png
2023/08/01 15:41:15 Optimizing /tmp/work/dist/images/basic/back.png
Input size: 5434 (5K)
Result size: 3475 (3K). Percentage of original: 63.949%
Result is smaller


2023/08/01 15:41:15 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/back.png.br /tmp/work/dist/images/basic/back.png
2023/08/01 15:41:15 br /tmp/work/dist/images/basic/back.png -> /output/images/basic/back.png.br
2023/08/01 15:41:15 gz /tmp/work/dist/images/basic/back.png -> /output/images/basic/back.png.gz
2023/08/01 15:41:15 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/bamboo.png /tmp/work/dist/images/basic/bamboo.png
2023/08/01 15:41:16 Optimizing /tmp/work/dist/images/basic/baby_chick.png
Input size: 3961 (3K)
Result size: 4013 (3K). Percentage of original: 101.313%
Preserving original PNG since it was smaller


2023/08/01 15:41:16 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/baby_chick.png.br /tmp/work/dist/images/basic/baby_chick.png
2023/08/01 15:41:16 br /tmp/work/dist/images/basic/baby_chick.png -> /output/images/basic/baby_chick.png.br
2023/08/01 15:41:16 gz /tmp/work/dist/images/basic/baby_chick.png -> /output/images/basic/baby_chick.png.gz
2023/08/01 15:41:16 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/banana.png /tmp/work/dist/images/basic/banana.png
2023/08/01 15:41:17 Optimizing /tmp/work/dist/images/basic/baby_bottle.png
Input size: 4461 (4K)
Result size: 4468 (4K). Percentage of original: 100.157%
Preserving original PNG since it was smaller


2023/08/01 15:41:17 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/baby_bottle.png.br /tmp/work/dist/images/basic/baby_bottle.png
2023/08/01 15:41:17 br /tmp/work/dist/images/basic/baby_bottle.png -> /output/images/basic/baby_bottle.png.br
2023/08/01 15:41:17 gz /tmp/work/dist/images/basic/baby_bottle.png -> /output/images/basic/baby_bottle.png.gz
2023/08/01 15:41:17 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/bangbang.png /tmp/work/dist/images/basic/bangbang.png
2023/08/01 15:41:17 Optimizing /tmp/work/dist/images/basic/articulated_lorry.png
Input size: 2938 (2K)
Result size: 2890 (2K). Percentage of original: 98.366%
Result is smaller


2023/08/01 15:41:17 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/articulated_lorry.png.br /tmp/work/dist/images/basic/articulated_lorry.png
2023/08/01 15:41:17 br /tmp/work/dist/images/basic/articulated_lorry.png -> /output/images/basic/articulated_lorry.png.br
2023/08/01 15:41:17 gz /tmp/work/dist/images/basic/articulated_lorry.png -> /output/images/basic/articulated_lorry.png.gz
2023/08/01 15:41:17 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/bank.png /tmp/work/dist/images/basic/bank.png
2023/08/01 15:41:18 Optimizing /tmp/work/dist/images/basic/bamboo.png
Input size: 4672 (4K)
Result size: 4809 (4K). Percentage of original: 102.932%
Preserving original PNG since it was smaller


2023/08/01 15:41:18 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/bamboo.png.br /tmp/work/dist/images/basic/bamboo.png
2023/08/01 15:41:18 br /tmp/work/dist/images/basic/bamboo.png -> /output/images/basic/bamboo.png.br
2023/08/01 15:41:18 gz /tmp/work/dist/images/basic/bamboo.png -> /output/images/basic/bamboo.png.gz
2023/08/01 15:41:18 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/bar_chart.png /tmp/work/dist/images/basic/bar_chart.png
2023/08/01 15:41:19 Optimizing /tmp/work/dist/images/basic/ballot_box_with_check.png
Input size: 1829 (1K)
Result size: 1848 (1K). Percentage of original: 101.039%
Preserving original PNG since it was smaller


2023/08/01 15:41:19 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/ballot_box_with_check.png.br /tmp/work/dist/images/basic/ballot_box_with_check.png
2023/08/01 15:41:19 br /tmp/work/dist/images/basic/ballot_box_with_check.png -> /output/images/basic/ballot_box_with_check.png.br
2023/08/01 15:41:19 gz /tmp/work/dist/images/basic/ballot_box_with_check.png -> /output/images/basic/ballot_box_with_check.png.gz
2023/08/01 15:41:19 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/barber.png /tmp/work/dist/images/basic/barber.png
2023/08/01 15:41:23 Optimizing /tmp/work/dist/images/basic/bar_chart.png
Input size: 2449 (2K)
Result size: 2257 (2K). Percentage of original: 92.160%
Result is smaller


2023/08/01 15:41:23 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/bar_chart.png.br /tmp/work/dist/images/basic/bar_chart.png
2023/08/01 15:41:23 br /tmp/work/dist/images/basic/bar_chart.png -> /output/images/basic/bar_chart.png.br
2023/08/01 15:41:23 gz /tmp/work/dist/images/basic/bar_chart.png -> /output/images/basic/bar_chart.png.gz
2023/08/01 15:41:23 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/baseball.png /tmp/work/dist/images/basic/baseball.png
2023/08/01 15:41:23 Optimizing /tmp/work/dist/images/basic/banana.png
Input size: 3915 (3K)
Result size: 3925 (3K). Percentage of original: 100.255%
Preserving original PNG since it was smaller


2023/08/01 15:41:23 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/banana.png.br /tmp/work/dist/images/basic/banana.png
2023/08/01 15:41:23 br /tmp/work/dist/images/basic/banana.png -> /output/images/basic/banana.png.br
2023/08/01 15:41:23 gz /tmp/work/dist/images/basic/banana.png -> /output/images/basic/banana.png.gz
2023/08/01 15:41:23 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/basketball.png /tmp/work/dist/images/basic/basketball.png
2023/08/01 15:41:25 Optimizing /tmp/work/dist/images/basic/balloon.png
Input size: 2300 (2K)
Result size: 2349 (2K). Percentage of original: 102.130%
Preserving original PNG since it was smaller


2023/08/01 15:41:25 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/balloon.png.br /tmp/work/dist/images/basic/balloon.png
2023/08/01 15:41:25 br /tmp/work/dist/images/basic/balloon.png -> /output/images/basic/balloon.png.br
2023/08/01 15:41:25 gz /tmp/work/dist/images/basic/balloon.png -> /output/images/basic/balloon.png.gz
2023/08/01 15:41:25 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/bath.png /tmp/work/dist/images/basic/bath.png
2023/08/01 15:41:25 Optimizing /tmp/work/dist/images/basic/barber.png
Input size: 4252 (4K)
Result size: 4346 (4K). Percentage of original: 102.211%
Preserving original PNG since it was smaller


2023/08/01 15:41:25 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/barber.png.br /tmp/work/dist/images/basic/barber.png
2023/08/01 15:41:25 br /tmp/work/dist/images/basic/barber.png -> /output/images/basic/barber.png.br
2023/08/01 15:41:25 gz /tmp/work/dist/images/basic/barber.png -> /output/images/basic/barber.png.gz
2023/08/01 15:41:25 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/bathtub.png /tmp/work/dist/images/basic/bathtub.png
2023/08/01 15:41:26 Optimizing /tmp/work/dist/images/basic/bank.png
Input size: 5583 (5K)
Result size: 5637 (5K). Percentage of original: 100.967%
Preserving original PNG since it was smaller


2023/08/01 15:41:26 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/bank.png.br /tmp/work/dist/images/basic/bank.png
2023/08/01 15:41:26 br /tmp/work/dist/images/basic/bank.png -> /output/images/basic/bank.png.br
2023/08/01 15:41:26 gz /tmp/work/dist/images/basic/bank.png -> /output/images/basic/bank.png.gz
2023/08/01 15:41:26 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/battery.png /tmp/work/dist/images/basic/battery.png
2023/08/01 15:41:26 Optimizing /tmp/work/dist/images/basic/bangbang.png
Input size: 1387 (1K)
Result size: 1564 (1K). Percentage of original: 112.761%
Preserving original PNG since it was smaller


2023/08/01 15:41:26 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/bangbang.png.br /tmp/work/dist/images/basic/bangbang.png
2023/08/01 15:41:26 br /tmp/work/dist/images/basic/bangbang.png -> /output/images/basic/bangbang.png.br
2023/08/01 15:41:26 gz /tmp/work/dist/images/basic/bangbang.png -> /output/images/basic/bangbang.png.gz
2023/08/01 15:41:26 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/bear.png /tmp/work/dist/images/basic/bear.png
2023/08/01 15:41:26 Optimizing /tmp/work/dist/images/basic/baby_symbol.png
Input size: 2967 (2K)
Result size: 2924 (2K). Percentage of original: 98.551%
Result is smaller


2023/08/01 15:41:26 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/baby_symbol.png.br /tmp/work/dist/images/basic/baby_symbol.png
2023/08/01 15:41:26 br /tmp/work/dist/images/basic/baby_symbol.png -> /output/images/basic/baby_symbol.png.br
2023/08/01 15:41:26 gz /tmp/work/dist/images/basic/baby_symbol.png -> /output/images/basic/baby_symbol.png.gz
2023/08/01 15:41:26 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/bee.png /tmp/work/dist/images/basic/bee.png
2023/08/01 15:41:26 Optimizing /tmp/work/dist/images/basic/baggage_claim.png
Input size: 3502 (3K)
Result size: 3510 (3K). Percentage of original: 100.228%
Preserving original PNG since it was smaller


2023/08/01 15:41:26 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/baggage_claim.png.br /tmp/work/dist/images/basic/baggage_claim.png
2023/08/01 15:41:27 br /tmp/work/dist/images/basic/baggage_claim.png -> /output/images/basic/baggage_claim.png.br
2023/08/01 15:41:27 gz /tmp/work/dist/images/basic/baggage_claim.png -> /output/images/basic/baggage_claim.png.gz
2023/08/01 15:41:27 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/beer.png /tmp/work/dist/images/basic/beer.png
2023/08/01 15:41:29 Optimizing /tmp/work/dist/images/basic/baseball.png
Input size: 6032 (5K)
Result size: 6081 (5K). Percentage of original: 100.812%
Preserving original PNG since it was smaller


2023/08/01 15:41:29 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/baseball.png.br /tmp/work/dist/images/basic/baseball.png
2023/08/01 15:41:29 br /tmp/work/dist/images/basic/baseball.png -> /output/images/basic/baseball.png.br
2023/08/01 15:41:29 gz /tmp/work/dist/images/basic/baseball.png -> /output/images/basic/baseball.png.gz
2023/08/01 15:41:29 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/beers.png /tmp/work/dist/images/basic/beers.png
2023/08/01 15:41:32 Optimizing /tmp/work/dist/images/basic/basketball.png
Input size: 6386 (6K)
Result size: 6408 (6K). Percentage of original: 100.345%
Preserving original PNG since it was smaller


2023/08/01 15:41:32 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/basketball.png.br /tmp/work/dist/images/basic/basketball.png
2023/08/01 15:41:32 br /tmp/work/dist/images/basic/basketball.png -> /output/images/basic/basketball.png.br
2023/08/01 15:41:32 gz /tmp/work/dist/images/basic/basketball.png -> /output/images/basic/basketball.png.gz
2023/08/01 15:41:32 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/beetle.png /tmp/work/dist/images/basic/beetle.png
2023/08/01 15:41:36 Optimizing /tmp/work/dist/images/basic/bee.png
Input size: 5851 (5K)
Result size: 5806 (5K). Percentage of original: 99.231%
Result is smaller


2023/08/01 15:41:36 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/bee.png.br /tmp/work/dist/images/basic/bee.png
2023/08/01 15:41:36 br /tmp/work/dist/images/basic/bee.png -> /output/images/basic/bee.png.br
2023/08/01 15:41:36 gz /tmp/work/dist/images/basic/bee.png -> /output/images/basic/bee.png.gz
2023/08/01 15:41:36 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/beginner.png /tmp/work/dist/images/basic/beginner.png
2023/08/01 15:41:37 Optimizing /tmp/work/dist/images/basic/beer.png
Input size: 6097 (5K)
Result size: 6166 (6K). Percentage of original: 101.132%
Preserving original PNG since it was smaller


2023/08/01 15:41:37 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/beer.png.br /tmp/work/dist/images/basic/beer.png
2023/08/01 15:41:37 br /tmp/work/dist/images/basic/beer.png -> /output/images/basic/beer.png.br
2023/08/01 15:41:37 gz /tmp/work/dist/images/basic/beer.png -> /output/images/basic/beer.png.gz
2023/08/01 15:41:37 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/bell.png /tmp/work/dist/images/basic/bell.png
2023/08/01 15:41:39 Optimizing /tmp/work/dist/images/basic/bath.png
Input size: 3210 (3K)
Result size: 3255 (3K). Percentage of original: 101.402%
Preserving original PNG since it was smaller


2023/08/01 15:41:39 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/bath.png.br /tmp/work/dist/images/basic/bath.png
2023/08/01 15:41:39 br /tmp/work/dist/images/basic/bath.png -> /output/images/basic/bath.png.br
2023/08/01 15:41:39 gz /tmp/work/dist/images/basic/bath.png -> /output/images/basic/bath.png.gz
2023/08/01 15:41:39 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/bento.png /tmp/work/dist/images/basic/bento.png
2023/08/01 15:41:39 Optimizing /tmp/work/dist/images/basic/bear.png
Input size: 5561 (5K)
Result size: 5622 (5K). Percentage of original: 101.097%
Preserving original PNG since it was smaller


2023/08/01 15:41:39 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/bear.png.br /tmp/work/dist/images/basic/bear.png
2023/08/01 15:41:39 br /tmp/work/dist/images/basic/bear.png -> /output/images/basic/bear.png.br
2023/08/01 15:41:39 gz /tmp/work/dist/images/basic/bear.png -> /output/images/basic/bear.png.gz
2023/08/01 15:41:39 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/bicyclist.png /tmp/work/dist/images/basic/bicyclist.png
2023/08/01 15:41:39 Optimizing /tmp/work/dist/images/basic/bathtub.png
Input size: 2784 (2K)
Result size: 2853 (2K). Percentage of original: 102.478%
Preserving original PNG since it was smaller


2023/08/01 15:41:39 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/bathtub.png.br /tmp/work/dist/images/basic/bathtub.png
2023/08/01 15:41:39 br /tmp/work/dist/images/basic/bathtub.png -> /output/images/basic/bathtub.png.br
2023/08/01 15:41:39 gz /tmp/work/dist/images/basic/bathtub.png -> /output/images/basic/bathtub.png.gz
2023/08/01 15:41:39 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/bike.png /tmp/work/dist/images/basic/bike.png
2023/08/01 15:41:39 Optimizing /tmp/work/dist/images/basic/battery.png
Input size: 3812 (3K)
Result size: 3854 (3K). Percentage of original: 101.102%
Preserving original PNG since it was smaller


2023/08/01 15:41:39 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/battery.png.br /tmp/work/dist/images/basic/battery.png
2023/08/01 15:41:39 br /tmp/work/dist/images/basic/battery.png -> /output/images/basic/battery.png.br
2023/08/01 15:41:39 gz /tmp/work/dist/images/basic/battery.png -> /output/images/basic/battery.png.gz
2023/08/01 15:41:39 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/bikini.png /tmp/work/dist/images/basic/bikini.png
2023/08/01 15:41:40 Optimizing /tmp/work/dist/images/basic/beetle.png
Input size: 5255 (5K)
Result size: 5390 (5K). Percentage of original: 102.569%
Preserving original PNG since it was smaller


2023/08/01 15:41:40 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/beetle.png.br /tmp/work/dist/images/basic/beetle.png
2023/08/01 15:41:40 br /tmp/work/dist/images/basic/beetle.png -> /output/images/basic/beetle.png.br
2023/08/01 15:41:40 gz /tmp/work/dist/images/basic/beetle.png -> /output/images/basic/beetle.png.gz
2023/08/01 15:41:40 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/bird.png /tmp/work/dist/images/basic/bird.png
2023/08/01 15:41:41 Optimizing /tmp/work/dist/images/basic/beers.png
Input size: 6591 (6K)
Result size: 6574 (6K). Percentage of original: 99.742%
Result is smaller


2023/08/01 15:41:41 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/beers.png.br /tmp/work/dist/images/basic/beers.png
2023/08/01 15:41:41 br /tmp/work/dist/images/basic/beers.png -> /output/images/basic/beers.png.br
2023/08/01 15:41:41 gz /tmp/work/dist/images/basic/beers.png -> /output/images/basic/beers.png.gz
2023/08/01 15:41:41 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/birthday.png /tmp/work/dist/images/basic/birthday.png
2023/08/01 15:41:46 Optimizing /tmp/work/dist/images/basic/bike.png
Input size: 4722 (4K)
Result size: 4723 (4K). Percentage of original: 100.021%
Preserving original PNG since it was smaller


2023/08/01 15:41:46 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/bike.png.br /tmp/work/dist/images/basic/bike.png
2023/08/01 15:41:47 br /tmp/work/dist/images/basic/bike.png -> /output/images/basic/bike.png.br
2023/08/01 15:41:47 gz /tmp/work/dist/images/basic/bike.png -> /output/images/basic/bike.png.gz
2023/08/01 15:41:47 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/black_circle.png /tmp/work/dist/images/basic/black_circle.png
2023/08/01 15:41:47 Optimizing /tmp/work/dist/images/basic/bikini.png
Input size: 3890 (3K)
Result size: 4042 (3K). Percentage of original: 103.907%
Preserving original PNG since it was smaller


2023/08/01 15:41:47 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/bikini.png.br /tmp/work/dist/images/basic/bikini.png
2023/08/01 15:41:47 Optimizing /tmp/work/dist/images/basic/bicyclist.png
Input size: 6472 (6K)
Result size: 6608 (6K). Percentage of original: 102.101%
Preserving original PNG since it was smaller


2023/08/01 15:41:47 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/bicyclist.png.br /tmp/work/dist/images/basic/bicyclist.png
2023/08/01 15:41:47 br /tmp/work/dist/images/basic/bikini.png -> /output/images/basic/bikini.png.br
2023/08/01 15:41:47 gz /tmp/work/dist/images/basic/bikini.png -> /output/images/basic/bikini.png.gz
2023/08/01 15:41:47 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/black_joker.png /tmp/work/dist/images/basic/black_joker.png
2023/08/01 15:41:47 br /tmp/work/dist/images/basic/bicyclist.png -> /output/images/basic/bicyclist.png.br
2023/08/01 15:41:47 gz /tmp/work/dist/images/basic/bicyclist.png -> /output/images/basic/bicyclist.png.gz
2023/08/01 15:41:47 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/black_medium_small_square.png /tmp/work/dist/images/basic/black_medium_small_square.png
2023/08/01 15:41:48 Optimizing /tmp/work/dist/images/basic/bell.png
Input size: 4859 (4K)
Result size: 4955 (4K). Percentage of original: 101.976%
Preserving original PNG since it was smaller


2023/08/01 15:41:48 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/bell.png.br /tmp/work/dist/images/basic/bell.png
2023/08/01 15:41:48 br /tmp/work/dist/images/basic/bell.png -> /output/images/basic/bell.png.br
2023/08/01 15:41:48 gz /tmp/work/dist/images/basic/bell.png -> /output/images/basic/bell.png.gz
2023/08/01 15:41:48 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/black_medium_square.png /tmp/work/dist/images/basic/black_medium_square.png
2023/08/01 15:41:48 Optimizing /tmp/work/dist/images/basic/bento.png
Input size: 5730 (5K)
Result size: 5465 (5K). Percentage of original: 95.375%
Result is smaller


2023/08/01 15:41:48 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/bento.png.br /tmp/work/dist/images/basic/bento.png
2023/08/01 15:41:48 br /tmp/work/dist/images/basic/bento.png -> /output/images/basic/bento.png.br
2023/08/01 15:41:48 gz /tmp/work/dist/images/basic/bento.png -> /output/images/basic/bento.png.gz
2023/08/01 15:41:48 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/black_nib.png /tmp/work/dist/images/basic/black_nib.png
2023/08/01 15:41:50 Optimizing /tmp/work/dist/images/basic/birthday.png
Input size: 5404 (5K)
Result size: 5487 (5K). Percentage of original: 101.536%
Preserving original PNG since it was smaller


2023/08/01 15:41:50 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/birthday.png.br /tmp/work/dist/images/basic/birthday.png
2023/08/01 15:41:50 br /tmp/work/dist/images/basic/birthday.png -> /output/images/basic/birthday.png.br
2023/08/01 15:41:50 gz /tmp/work/dist/images/basic/birthday.png -> /output/images/basic/birthday.png.gz
2023/08/01 15:41:50 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/black_small_square.png /tmp/work/dist/images/basic/black_small_square.png
2023/08/01 15:41:53 Optimizing /tmp/work/dist/images/basic/black_nib.png
Input size: 2352 (2K)
Result size: 2429 (2K). Percentage of original: 103.274%
Preserving original PNG since it was smaller


2023/08/01 15:41:53 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/black_nib.png.br /tmp/work/dist/images/basic/black_nib.png
2023/08/01 15:41:53 br /tmp/work/dist/images/basic/black_nib.png -> /output/images/basic/black_nib.png.br
2023/08/01 15:41:53 gz /tmp/work/dist/images/basic/black_nib.png -> /output/images/basic/black_nib.png.gz
2023/08/01 15:41:53 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/black_square_button.png /tmp/work/dist/images/basic/black_square_button.png
2023/08/01 15:41:54 Optimizing /tmp/work/dist/images/basic/bird.png
Input size: 4878 (4K)
Result size: 4910 (4K). Percentage of original: 100.656%
Preserving original PNG since it was smaller


2023/08/01 15:41:54 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/bird.png.br /tmp/work/dist/images/basic/bird.png
2023/08/01 15:41:54 br /tmp/work/dist/images/basic/bird.png -> /output/images/basic/bird.png.br
2023/08/01 15:41:54 gz /tmp/work/dist/images/basic/bird.png -> /output/images/basic/bird.png.gz
2023/08/01 15:41:54 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/black_square.png /tmp/work/dist/images/basic/black_square.png
2023/08/01 15:41:58 Optimizing /tmp/work/dist/images/basic/black_joker.png
Input size: 3877 (3K)
Result size: 3826 (3K). Percentage of original: 98.685%
Result is smaller


2023/08/01 15:41:58 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/black_joker.png.br /tmp/work/dist/images/basic/black_joker.png
2023/08/01 15:41:58 br /tmp/work/dist/images/basic/black_joker.png -> /output/images/basic/black_joker.png.br
2023/08/01 15:41:58 gz /tmp/work/dist/images/basic/black_joker.png -> /output/images/basic/black_joker.png.gz
2023/08/01 15:41:58 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/blossom.png /tmp/work/dist/images/basic/blossom.png
2023/08/01 15:42:01 Optimizing /tmp/work/dist/images/basic/beginner.png
Input size: 2761 (2K)
Result size: 2695 (2K). Percentage of original: 97.610%
Result is smaller


2023/08/01 15:42:01 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/beginner.png.br /tmp/work/dist/images/basic/beginner.png
2023/08/01 15:42:01 br /tmp/work/dist/images/basic/beginner.png -> /output/images/basic/beginner.png.br
2023/08/01 15:42:01 gz /tmp/work/dist/images/basic/beginner.png -> /output/images/basic/beginner.png.gz
2023/08/01 15:42:01 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/blowfish.png /tmp/work/dist/images/basic/blowfish.png
2023/08/01 15:42:10 Optimizing /tmp/work/dist/images/basic/blossom.png
Input size: 4232 (4K)
Result size: 4285 (4K). Percentage of original: 101.252%
Preserving original PNG since it was smaller


2023/08/01 15:42:10 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/blossom.png.br /tmp/work/dist/images/basic/blossom.png
2023/08/01 15:42:10 br /tmp/work/dist/images/basic/blossom.png -> /output/images/basic/blossom.png.br
2023/08/01 15:42:10 gz /tmp/work/dist/images/basic/blossom.png -> /output/images/basic/blossom.png.gz
2023/08/01 15:42:10 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/blue_book.png /tmp/work/dist/images/basic/blue_book.png
2023/08/01 15:42:16 Optimizing /tmp/work/dist/images/basic/blowfish.png
Input size: 3737 (3K)
Result size: 3791 (3K). Percentage of original: 101.445%
Preserving original PNG since it was smaller


2023/08/01 15:42:16 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/blowfish.png.br /tmp/work/dist/images/basic/blowfish.png
2023/08/01 15:42:16 br /tmp/work/dist/images/basic/blowfish.png -> /output/images/basic/blowfish.png.br
2023/08/01 15:42:16 gz /tmp/work/dist/images/basic/blowfish.png -> /output/images/basic/blowfish.png.gz
2023/08/01 15:42:16 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/blue_car.png /tmp/work/dist/images/basic/blue_car.png
2023/08/01 15:42:17 Optimizing /tmp/work/dist/images/basic/black_medium_square.png
Input size: 4035 (3K)
Result size: 2642 (2K). Percentage of original: 65.477%
Result is smaller


2023/08/01 15:42:17 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/black_medium_square.png.br /tmp/work/dist/images/basic/black_medium_square.png
2023/08/01 15:42:17 br /tmp/work/dist/images/basic/black_medium_square.png -> /output/images/basic/black_medium_square.png.br
2023/08/01 15:42:17 gz /tmp/work/dist/images/basic/black_medium_square.png -> /output/images/basic/black_medium_square.png.gz
2023/08/01 15:42:17 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/blue_heart.png /tmp/work/dist/images/basic/blue_heart.png
2023/08/01 15:42:19 Optimizing /tmp/work/dist/images/basic/black_square.png
Input size: 1332 (1K)
Result size: 1185 (1K). Percentage of original: 88.964%
Result is smaller


2023/08/01 15:42:19 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/black_square.png.br /tmp/work/dist/images/basic/black_square.png
2023/08/01 15:42:19 Optimizing /tmp/work/dist/images/basic/black_circle.png
Input size: 2369 (2K)
Result size: 2424 (2K). Percentage of original: 102.322%
Preserving original PNG since it was smaller


2023/08/01 15:42:19 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/black_circle.png.br /tmp/work/dist/images/basic/black_circle.png
2023/08/01 15:42:19 br /tmp/work/dist/images/basic/black_square.png -> /output/images/basic/black_square.png.br
2023/08/01 15:42:19 gz /tmp/work/dist/images/basic/black_square.png -> /output/images/basic/black_square.png.gz
2023/08/01 15:42:19 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/blush.png /tmp/work/dist/images/basic/blush.png
2023/08/01 15:42:19 br /tmp/work/dist/images/basic/black_circle.png -> /output/images/basic/black_circle.png.br
2023/08/01 15:42:19 gz /tmp/work/dist/images/basic/black_circle.png -> /output/images/basic/black_circle.png.gz
2023/08/01 15:42:19 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/boar.png /tmp/work/dist/images/basic/boar.png
2023/08/01 15:42:19 Optimizing /tmp/work/dist/images/basic/black_medium_small_square.png
Input size: 3495 (3K)
Result size: 2288 (2K). Percentage of original: 65.465%
Result is smaller


2023/08/01 15:42:19 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/black_medium_small_square.png.br /tmp/work/dist/images/basic/black_medium_small_square.png
2023/08/01 15:42:19 br /tmp/work/dist/images/basic/black_medium_small_square.png -> /output/images/basic/black_medium_small_square.png.br
2023/08/01 15:42:19 gz /tmp/work/dist/images/basic/black_medium_small_square.png -> /output/images/basic/black_medium_small_square.png.gz
2023/08/01 15:42:19 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/boat.png /tmp/work/dist/images/basic/boat.png
2023/08/01 15:42:23 Optimizing /tmp/work/dist/images/basic/black_small_square.png
Input size: 3061 (2K)
Result size: 2010 (1K). Percentage of original: 65.665%
Result is smaller


2023/08/01 15:42:23 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/black_small_square.png.br /tmp/work/dist/images/basic/black_small_square.png
2023/08/01 15:42:23 br /tmp/work/dist/images/basic/black_small_square.png -> /output/images/basic/black_small_square.png.br
2023/08/01 15:42:23 gz /tmp/work/dist/images/basic/black_small_square.png -> /output/images/basic/black_small_square.png.gz
2023/08/01 15:42:23 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/bomb.png /tmp/work/dist/images/basic/bomb.png
2023/08/01 15:42:24 Optimizing /tmp/work/dist/images/basic/blue_car.png
Input size: 4081 (3K)
Result size: 4012 (3K). Percentage of original: 98.309%
Result is smaller


2023/08/01 15:42:24 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/blue_car.png.br /tmp/work/dist/images/basic/blue_car.png
2023/08/01 15:42:24 br /tmp/work/dist/images/basic/blue_car.png -> /output/images/basic/blue_car.png.br
2023/08/01 15:42:24 gz /tmp/work/dist/images/basic/blue_car.png -> /output/images/basic/blue_car.png.gz
2023/08/01 15:42:24 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/book.png /tmp/work/dist/images/basic/book.png
2023/08/01 15:42:28 Optimizing /tmp/work/dist/images/basic/boat.png
Input size: 3833 (3K)
Result size: 3965 (3K). Percentage of original: 103.444%
Preserving original PNG since it was smaller


2023/08/01 15:42:28 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/boat.png.br /tmp/work/dist/images/basic/boat.png
2023/08/01 15:42:28 br /tmp/work/dist/images/basic/boat.png -> /output/images/basic/boat.png.br
2023/08/01 15:42:28 gz /tmp/work/dist/images/basic/boat.png -> /output/images/basic/boat.png.gz
2023/08/01 15:42:28 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/bookmark_tabs.png /tmp/work/dist/images/basic/bookmark_tabs.png
2023/08/01 15:42:30 Optimizing /tmp/work/dist/images/basic/boar.png
Input size: 4840 (4K)
Result size: 4877 (4K). Percentage of original: 100.764%
Preserving original PNG since it was smaller


2023/08/01 15:42:30 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/boar.png.br /tmp/work/dist/images/basic/boar.png
2023/08/01 15:42:30 br /tmp/work/dist/images/basic/boar.png -> /output/images/basic/boar.png.br
2023/08/01 15:42:30 gz /tmp/work/dist/images/basic/boar.png -> /output/images/basic/boar.png.gz
2023/08/01 15:42:30 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/bookmark.png /tmp/work/dist/images/basic/bookmark.png
2023/08/01 15:42:30 Optimizing /tmp/work/dist/images/basic/blue_book.png
Input size: 5092 (4K)
Result size: 5021 (4K). Percentage of original: 98.606%
Result is smaller


2023/08/01 15:42:30 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/blue_book.png.br /tmp/work/dist/images/basic/blue_book.png
2023/08/01 15:42:30 br /tmp/work/dist/images/basic/blue_book.png -> /output/images/basic/blue_book.png.br
2023/08/01 15:42:30 gz /tmp/work/dist/images/basic/blue_book.png -> /output/images/basic/blue_book.png.gz
2023/08/01 15:42:30 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/books.png /tmp/work/dist/images/basic/books.png
2023/08/01 15:42:31 Optimizing /tmp/work/dist/images/basic/book.png
Input size: 6050 (5K)
Result size: 5962 (5K). Percentage of original: 98.545%
Result is smaller


2023/08/01 15:42:31 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/book.png.br /tmp/work/dist/images/basic/book.png
2023/08/01 15:42:31 br /tmp/work/dist/images/basic/book.png -> /output/images/basic/book.png.br
2023/08/01 15:42:31 gz /tmp/work/dist/images/basic/book.png -> /output/images/basic/book.png.gz
2023/08/01 15:42:31 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/boom.png /tmp/work/dist/images/basic/boom.png
2023/08/01 15:42:31 Optimizing /tmp/work/dist/images/basic/blue_heart.png
Input size: 4094 (3K)
Result size: 4040 (3K). Percentage of original: 98.681%
Result is smaller


2023/08/01 15:42:31 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/blue_heart.png.br /tmp/work/dist/images/basic/blue_heart.png
2023/08/01 15:42:31 br /tmp/work/dist/images/basic/blue_heart.png -> /output/images/basic/blue_heart.png.br
2023/08/01 15:42:31 gz /tmp/work/dist/images/basic/blue_heart.png -> /output/images/basic/blue_heart.png.gz
2023/08/01 15:42:31 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/boot.png /tmp/work/dist/images/basic/boot.png
2023/08/01 15:42:32 Optimizing /tmp/work/dist/images/basic/black_square_button.png
Input size: 1337 (1K)
Result size: 1229 (1K). Percentage of original: 91.922%
Result is smaller


2023/08/01 15:42:32 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/black_square_button.png.br /tmp/work/dist/images/basic/black_square_button.png
2023/08/01 15:42:32 br /tmp/work/dist/images/basic/black_square_button.png -> /output/images/basic/black_square_button.png.br
2023/08/01 15:42:32 gz /tmp/work/dist/images/basic/black_square_button.png -> /output/images/basic/black_square_button.png.gz
2023/08/01 15:42:32 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/bouquet.png /tmp/work/dist/images/basic/bouquet.png
2023/08/01 15:42:34 Optimizing /tmp/work/dist/images/basic/bomb.png
Input size: 5208 (5K)
Result size: 5138 (5K). Percentage of original: 98.656%
Result is smaller


2023/08/01 15:42:34 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/bomb.png.br /tmp/work/dist/images/basic/bomb.png
2023/08/01 15:42:35 br /tmp/work/dist/images/basic/bomb.png -> /output/images/basic/bomb.png.br
2023/08/01 15:42:35 gz /tmp/work/dist/images/basic/bomb.png -> /output/images/basic/bomb.png.gz
2023/08/01 15:42:35 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/bow.png /tmp/work/dist/images/basic/bow.png
2023/08/01 15:42:35 Optimizing /tmp/work/dist/images/basic/bookmark_tabs.png
Input size: 3150 (3K)
Result size: 3098 (3K). Percentage of original: 98.349%
Result is smaller


2023/08/01 15:42:35 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/bookmark_tabs.png.br /tmp/work/dist/images/basic/bookmark_tabs.png
2023/08/01 15:42:35 br /tmp/work/dist/images/basic/bookmark_tabs.png -> /output/images/basic/bookmark_tabs.png.br
2023/08/01 15:42:35 gz /tmp/work/dist/images/basic/bookmark_tabs.png -> /output/images/basic/bookmark_tabs.png.gz
2023/08/01 15:42:35 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/bowling.png /tmp/work/dist/images/basic/bowling.png
2023/08/01 15:42:37 Optimizing /tmp/work/dist/images/basic/blush.png
Input size: 5188 (5K)
Result size: 4913 (4K). Percentage of original: 94.699%
Result is smaller


2023/08/01 15:42:37 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/blush.png.br /tmp/work/dist/images/basic/blush.png
2023/08/01 15:42:37 br /tmp/work/dist/images/basic/blush.png -> /output/images/basic/blush.png.br
2023/08/01 15:42:37 gz /tmp/work/dist/images/basic/blush.png -> /output/images/basic/blush.png.gz
2023/08/01 15:42:37 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/bowtie.png /tmp/work/dist/images/basic/bowtie.png
2023/08/01 15:42:38 Optimizing /tmp/work/dist/images/basic/boot.png
Input size: 3327 (3K)
Result size: 3483 (3K). Percentage of original: 104.689%
Preserving original PNG since it was smaller


2023/08/01 15:42:38 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/boot.png.br /tmp/work/dist/images/basic/boot.png
2023/08/01 15:42:39 br /tmp/work/dist/images/basic/boot.png -> /output/images/basic/boot.png.br
2023/08/01 15:42:39 gz /tmp/work/dist/images/basic/boot.png -> /output/images/basic/boot.png.gz
2023/08/01 15:42:39 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/boy.png /tmp/work/dist/images/basic/boy.png
2023/08/01 15:42:39 Optimizing /tmp/work/dist/images/basic/bouquet.png
Input size: 6915 (6K)
Result size: 7045 (6K). Percentage of original: 101.880%
Preserving original PNG since it was smaller


2023/08/01 15:42:39 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/bouquet.png.br /tmp/work/dist/images/basic/bouquet.png
2023/08/01 15:42:40 br /tmp/work/dist/images/basic/bouquet.png -> /output/images/basic/bouquet.png.br
2023/08/01 15:42:40 gz /tmp/work/dist/images/basic/bouquet.png -> /output/images/basic/bouquet.png.gz
2023/08/01 15:42:40 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/bread.png /tmp/work/dist/images/basic/bread.png
2023/08/01 15:42:40 Optimizing /tmp/work/dist/images/basic/books.png
Input size: 6539 (6K)
Result size: 6505 (6K). Percentage of original: 99.480%
Result is smaller


2023/08/01 15:42:40 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/books.png.br /tmp/work/dist/images/basic/books.png
2023/08/01 15:42:40 br /tmp/work/dist/images/basic/books.png -> /output/images/basic/books.png.br
2023/08/01 15:42:40 gz /tmp/work/dist/images/basic/books.png -> /output/images/basic/books.png.gz
2023/08/01 15:42:40 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/bride_with_veil.png /tmp/work/dist/images/basic/bride_with_veil.png
2023/08/01 15:42:45 Optimizing /tmp/work/dist/images/basic/bowling.png
Input size: 4184 (4K)
Result size: 4298 (4K). Percentage of original: 102.725%
Preserving original PNG since it was smaller


2023/08/01 15:42:45 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/bowling.png.br /tmp/work/dist/images/basic/bowling.png
2023/08/01 15:42:45 br /tmp/work/dist/images/basic/bowling.png -> /output/images/basic/bowling.png.br
2023/08/01 15:42:45 gz /tmp/work/dist/images/basic/bowling.png -> /output/images/basic/bowling.png.gz
2023/08/01 15:42:45 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/bridge_at_night.png /tmp/work/dist/images/basic/bridge_at_night.png
2023/08/01 15:42:47 Optimizing /tmp/work/dist/images/basic/bow.png
Input size: 5143 (5K)
Result size: 5136 (5K). Percentage of original: 99.864%
Result is smaller


2023/08/01 15:42:47 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/bow.png.br /tmp/work/dist/images/basic/bow.png
2023/08/01 15:42:47 br /tmp/work/dist/images/basic/bow.png -> /output/images/basic/bow.png.br
2023/08/01 15:42:47 gz /tmp/work/dist/images/basic/bow.png -> /output/images/basic/bow.png.gz
2023/08/01 15:42:47 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/briefcase.png /tmp/work/dist/images/basic/briefcase.png
2023/08/01 15:42:48 Optimizing /tmp/work/dist/images/basic/bowtie.png
Input size: 6478 (6K)
Result size: 6384 (6K). Percentage of original: 98.549%
Result is smaller


2023/08/01 15:42:48 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/bowtie.png.br /tmp/work/dist/images/basic/bowtie.png
2023/08/01 15:42:48 br /tmp/work/dist/images/basic/bowtie.png -> /output/images/basic/bowtie.png.br
2023/08/01 15:42:48 gz /tmp/work/dist/images/basic/bowtie.png -> /output/images/basic/bowtie.png.gz
2023/08/01 15:42:48 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/broken_heart.png /tmp/work/dist/images/basic/broken_heart.png
2023/08/01 15:42:48 Optimizing /tmp/work/dist/images/basic/bookmark.png
Input size: 4649 (4K)
Result size: 4710 (4K). Percentage of original: 101.312%
Preserving original PNG since it was smaller


2023/08/01 15:42:48 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/bookmark.png.br /tmp/work/dist/images/basic/bookmark.png
2023/08/01 15:42:48 br /tmp/work/dist/images/basic/bookmark.png -> /output/images/basic/bookmark.png.br
2023/08/01 15:42:48 gz /tmp/work/dist/images/basic/bookmark.png -> /output/images/basic/bookmark.png.gz
2023/08/01 15:42:48 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/bug.png /tmp/work/dist/images/basic/bug.png
2023/08/01 15:42:49 Optimizing /tmp/work/dist/images/basic/bride_with_veil.png
Input size: 8515 (8K)
Result size: 8578 (8K). Percentage of original: 100.740%
Preserving original PNG since it was smaller


2023/08/01 15:42:49 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/bride_with_veil.png.br /tmp/work/dist/images/basic/bride_with_veil.png
2023/08/01 15:42:49 br /tmp/work/dist/images/basic/bride_with_veil.png -> /output/images/basic/bride_with_veil.png.br
2023/08/01 15:42:49 gz /tmp/work/dist/images/basic/bride_with_veil.png -> /output/images/basic/bride_with_veil.png.gz
2023/08/01 15:42:49 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/bulb.png /tmp/work/dist/images/basic/bulb.png
2023/08/01 15:42:50 Optimizing /tmp/work/dist/images/basic/boom.png
Input size: 3772 (3K)
Result size: 3881 (3K). Percentage of original: 102.890%
Preserving original PNG since it was smaller


2023/08/01 15:42:50 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/boom.png.br /tmp/work/dist/images/basic/boom.png
2023/08/01 15:42:50 br /tmp/work/dist/images/basic/boom.png -> /output/images/basic/boom.png.br
2023/08/01 15:42:50 gz /tmp/work/dist/images/basic/boom.png -> /output/images/basic/boom.png.gz
2023/08/01 15:42:50 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/bullettrain_front.png /tmp/work/dist/images/basic/bullettrain_front.png
2023/08/01 15:42:53 Optimizing /tmp/work/dist/images/basic/boy.png
Input size: 5946 (5K)
Result size: 5947 (5K). Percentage of original: 100.017%
Preserving original PNG since it was smaller


2023/08/01 15:42:53 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/boy.png.br /tmp/work/dist/images/basic/boy.png
2023/08/01 15:42:53 br /tmp/work/dist/images/basic/boy.png -> /output/images/basic/boy.png.br
2023/08/01 15:42:53 gz /tmp/work/dist/images/basic/boy.png -> /output/images/basic/boy.png.gz
2023/08/01 15:42:53 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/bullettrain_side.png /tmp/work/dist/images/basic/bullettrain_side.png
2023/08/01 15:42:55 Optimizing /tmp/work/dist/images/basic/bread.png
Input size: 6214 (6K)
Result size: 6322 (6K). Percentage of original: 101.738%
Preserving original PNG since it was smaller


2023/08/01 15:42:55 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/bread.png.br /tmp/work/dist/images/basic/bread.png
2023/08/01 15:42:55 br /tmp/work/dist/images/basic/bread.png -> /output/images/basic/bread.png.br
2023/08/01 15:42:55 gz /tmp/work/dist/images/basic/bread.png -> /output/images/basic/bread.png.gz
2023/08/01 15:42:55 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/bus.png /tmp/work/dist/images/basic/bus.png
2023/08/01 15:42:56 Optimizing /tmp/work/dist/images/basic/briefcase.png
Input size: 2698 (2K)
Result size: 2647 (2K). Percentage of original: 98.110%
Result is smaller


2023/08/01 15:42:56 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/briefcase.png.br /tmp/work/dist/images/basic/briefcase.png
2023/08/01 15:42:56 br /tmp/work/dist/images/basic/briefcase.png -> /output/images/basic/briefcase.png.br
2023/08/01 15:42:56 gz /tmp/work/dist/images/basic/briefcase.png -> /output/images/basic/briefcase.png.gz
2023/08/01 15:42:56 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/busstop.png /tmp/work/dist/images/basic/busstop.png
2023/08/01 15:42:56 Optimizing /tmp/work/dist/images/basic/bridge_at_night.png
Input size: 5137 (5K)
Result size: 5057 (4K). Percentage of original: 98.443%
Result is smaller


2023/08/01 15:42:56 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/bridge_at_night.png.br /tmp/work/dist/images/basic/bridge_at_night.png
2023/08/01 15:42:56 br /tmp/work/dist/images/basic/bridge_at_night.png -> /output/images/basic/bridge_at_night.png.br
2023/08/01 15:42:56 gz /tmp/work/dist/images/basic/bridge_at_night.png -> /output/images/basic/bridge_at_night.png.gz
2023/08/01 15:42:56 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/bust_in_silhouette.png /tmp/work/dist/images/basic/bust_in_silhouette.png
2023/08/01 15:42:58 Optimizing /tmp/work/dist/images/basic/bullettrain_front.png
Input size: 4992 (4K)
Result size: 5068 (4K). Percentage of original: 101.522%
Preserving original PNG since it was smaller


2023/08/01 15:42:58 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/bullettrain_front.png.br /tmp/work/dist/images/basic/bullettrain_front.png
2023/08/01 15:42:58 br /tmp/work/dist/images/basic/bullettrain_front.png -> /output/images/basic/bullettrain_front.png.br
2023/08/01 15:42:58 gz /tmp/work/dist/images/basic/bullettrain_front.png -> /output/images/basic/bullettrain_front.png.gz
2023/08/01 15:42:58 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/busts_in_silhouette.png /tmp/work/dist/images/basic/busts_in_silhouette.png
2023/08/01 15:42:59 Optimizing /tmp/work/dist/images/basic/bug.png
Input size: 5945 (5K)
Result size: 5838 (5K). Percentage of original: 98.200%
Result is smaller


2023/08/01 15:42:59 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/bug.png.br /tmp/work/dist/images/basic/bug.png
2023/08/01 15:42:59 br /tmp/work/dist/images/basic/bug.png -> /output/images/basic/bug.png.br
2023/08/01 15:42:59 gz /tmp/work/dist/images/basic/bug.png -> /output/images/basic/bug.png.gz
2023/08/01 15:42:59 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/cactus.png /tmp/work/dist/images/basic/cactus.png
2023/08/01 15:42:59 Optimizing /tmp/work/dist/images/basic/bulb.png
Input size: 4490 (4K)
Result size: 4635 (4K). Percentage of original: 103.229%
Preserving original PNG since it was smaller


2023/08/01 15:42:59 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/bulb.png.br /tmp/work/dist/images/basic/bulb.png
2023/08/01 15:42:59 br /tmp/work/dist/images/basic/bulb.png -> /output/images/basic/bulb.png.br
2023/08/01 15:42:59 gz /tmp/work/dist/images/basic/bulb.png -> /output/images/basic/bulb.png.gz
2023/08/01 15:42:59 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/cake.png /tmp/work/dist/images/basic/cake.png
2023/08/01 15:42:59 Optimizing /tmp/work/dist/images/basic/broken_heart.png
Input size: 4118 (4K)
Result size: 4074 (3K). Percentage of original: 98.932%
Result is smaller


2023/08/01 15:42:59 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/broken_heart.png.br /tmp/work/dist/images/basic/broken_heart.png
2023/08/01 15:42:59 br /tmp/work/dist/images/basic/broken_heart.png -> /output/images/basic/broken_heart.png.br
2023/08/01 15:42:59 gz /tmp/work/dist/images/basic/broken_heart.png -> /output/images/basic/broken_heart.png.gz
2023/08/01 15:42:59 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/calendar.png /tmp/work/dist/images/basic/calendar.png
2023/08/01 15:43:02 Optimizing /tmp/work/dist/images/basic/bullettrain_side.png
Input size: 3842 (3K)
Result size: 3925 (3K). Percentage of original: 102.160%
Preserving original PNG since it was smaller


2023/08/01 15:43:02 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/bullettrain_side.png.br /tmp/work/dist/images/basic/bullettrain_side.png
2023/08/01 15:43:02 br /tmp/work/dist/images/basic/bullettrain_side.png -> /output/images/basic/bullettrain_side.png.br
2023/08/01 15:43:02 gz /tmp/work/dist/images/basic/bullettrain_side.png -> /output/images/basic/bullettrain_side.png.gz
2023/08/01 15:43:02 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/calling.png /tmp/work/dist/images/basic/calling.png
2023/08/01 15:43:03 Optimizing /tmp/work/dist/images/basic/bus.png
Input size: 4065 (3K)
Result size: 3908 (3K). Percentage of original: 96.138%
Result is smaller


2023/08/01 15:43:03 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/bus.png.br /tmp/work/dist/images/basic/bus.png
2023/08/01 15:43:03 br /tmp/work/dist/images/basic/bus.png -> /output/images/basic/bus.png.br
2023/08/01 15:43:03 gz /tmp/work/dist/images/basic/bus.png -> /output/images/basic/bus.png.gz
2023/08/01 15:43:03 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/camel.png /tmp/work/dist/images/basic/camel.png
2023/08/01 15:43:05 Optimizing /tmp/work/dist/images/basic/busstop.png
Input size: 1676 (1K)
Result size: 1812 (1K). Percentage of original: 108.115%
Preserving original PNG since it was smaller


2023/08/01 15:43:05 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/busstop.png.br /tmp/work/dist/images/basic/busstop.png
2023/08/01 15:43:05 br /tmp/work/dist/images/basic/busstop.png -> /output/images/basic/busstop.png.br
2023/08/01 15:43:05 gz /tmp/work/dist/images/basic/busstop.png -> /output/images/basic/busstop.png.gz
2023/08/01 15:43:05 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/camera.png /tmp/work/dist/images/basic/camera.png
2023/08/01 15:43:05 Optimizing /tmp/work/dist/images/basic/bust_in_silhouette.png
Input size: 2005 (1K)
Result size: 2115 (2K). Percentage of original: 105.486%
Preserving original PNG since it was smaller


2023/08/01 15:43:05 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/bust_in_silhouette.png.br /tmp/work/dist/images/basic/bust_in_silhouette.png
2023/08/01 15:43:05 br /tmp/work/dist/images/basic/bust_in_silhouette.png -> /output/images/basic/bust_in_silhouette.png.br
2023/08/01 15:43:05 gz /tmp/work/dist/images/basic/bust_in_silhouette.png -> /output/images/basic/bust_in_silhouette.png.gz
2023/08/01 15:43:05 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/cancer.png /tmp/work/dist/images/basic/cancer.png
2023/08/01 15:43:07 Optimizing /tmp/work/dist/images/basic/cactus.png
Input size: 4509 (4K)
Result size: 4691 (4K). Percentage of original: 104.036%
Preserving original PNG since it was smaller


2023/08/01 15:43:07 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/cactus.png.br /tmp/work/dist/images/basic/cactus.png
2023/08/01 15:43:08 br /tmp/work/dist/images/basic/cactus.png -> /output/images/basic/cactus.png.br
2023/08/01 15:43:08 gz /tmp/work/dist/images/basic/cactus.png -> /output/images/basic/cactus.png.gz
2023/08/01 15:43:08 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/candy.png /tmp/work/dist/images/basic/candy.png
2023/08/01 15:43:10 Optimizing /tmp/work/dist/images/basic/calling.png
Input size: 4037 (3K)
Result size: 3963 (3K). Percentage of original: 98.167%
Result is smaller


2023/08/01 15:43:10 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/calling.png.br /tmp/work/dist/images/basic/calling.png
2023/08/01 15:43:10 br /tmp/work/dist/images/basic/calling.png -> /output/images/basic/calling.png.br
2023/08/01 15:43:10 gz /tmp/work/dist/images/basic/calling.png -> /output/images/basic/calling.png.gz
2023/08/01 15:43:10 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/capital_abcd.png /tmp/work/dist/images/basic/capital_abcd.png
2023/08/01 15:43:11 Optimizing /tmp/work/dist/images/basic/busts_in_silhouette.png
Input size: 3021 (2K)
Result size: 2985 (2K). Percentage of original: 98.808%
Result is smaller


2023/08/01 15:43:11 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/busts_in_silhouette.png.br /tmp/work/dist/images/basic/busts_in_silhouette.png
2023/08/01 15:43:11 br /tmp/work/dist/images/basic/busts_in_silhouette.png -> /output/images/basic/busts_in_silhouette.png.br
2023/08/01 15:43:11 gz /tmp/work/dist/images/basic/busts_in_silhouette.png -> /output/images/basic/busts_in_silhouette.png.gz
2023/08/01 15:43:11 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/capricorn.png /tmp/work/dist/images/basic/capricorn.png
2023/08/01 15:43:12 Optimizing /tmp/work/dist/images/basic/camera.png
Input size: 4661 (4K)
Result size: 4591 (4K). Percentage of original: 98.498%
Result is smaller


2023/08/01 15:43:12 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/camera.png.br /tmp/work/dist/images/basic/camera.png
2023/08/01 15:43:12 br /tmp/work/dist/images/basic/camera.png -> /output/images/basic/camera.png.br
2023/08/01 15:43:12 gz /tmp/work/dist/images/basic/camera.png -> /output/images/basic/camera.png.gz
2023/08/01 15:43:12 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/car.png /tmp/work/dist/images/basic/car.png
2023/08/01 15:43:14 Optimizing /tmp/work/dist/images/basic/cancer.png
Input size: 5384 (5K)
Result size: 5407 (5K). Percentage of original: 100.427%
Preserving original PNG since it was smaller


2023/08/01 15:43:14 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/cancer.png.br /tmp/work/dist/images/basic/cancer.png
2023/08/01 15:43:14 br /tmp/work/dist/images/basic/cancer.png -> /output/images/basic/cancer.png.br
2023/08/01 15:43:14 gz /tmp/work/dist/images/basic/cancer.png -> /output/images/basic/cancer.png.gz
2023/08/01 15:43:14 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/card_index.png /tmp/work/dist/images/basic/card_index.png
2023/08/01 15:43:16 Optimizing /tmp/work/dist/images/basic/calendar.png
Input size: 2920 (2K)
Result size: 2875 (2K). Percentage of original: 98.459%
Result is smaller


2023/08/01 15:43:16 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/calendar.png.br /tmp/work/dist/images/basic/calendar.png
2023/08/01 15:43:16 br /tmp/work/dist/images/basic/calendar.png -> /output/images/basic/calendar.png.br
2023/08/01 15:43:16 gz /tmp/work/dist/images/basic/calendar.png -> /output/images/basic/calendar.png.gz
2023/08/01 15:43:16 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/carousel_horse.png /tmp/work/dist/images/basic/carousel_horse.png
2023/08/01 15:43:18 Optimizing /tmp/work/dist/images/basic/cake.png
Input size: 6129 (5K)
Result size: 6192 (6K). Percentage of original: 101.028%
Preserving original PNG since it was smaller


2023/08/01 15:43:18 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/cake.png.br /tmp/work/dist/images/basic/cake.png
2023/08/01 15:43:18 br /tmp/work/dist/images/basic/cake.png -> /output/images/basic/cake.png.br
2023/08/01 15:43:18 gz /tmp/work/dist/images/basic/cake.png -> /output/images/basic/cake.png.gz
2023/08/01 15:43:18 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/cat.png /tmp/work/dist/images/basic/cat.png
2023/08/01 15:43:20 Optimizing /tmp/work/dist/images/basic/car.png
Input size: 4278 (4K)
Result size: 4257 (4K). Percentage of original: 99.509%
Result is smaller


2023/08/01 15:43:20 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/car.png.br /tmp/work/dist/images/basic/car.png
2023/08/01 15:43:20 br /tmp/work/dist/images/basic/car.png -> /output/images/basic/car.png.br
2023/08/01 15:43:20 gz /tmp/work/dist/images/basic/car.png -> /output/images/basic/car.png.gz
2023/08/01 15:43:20 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/cat2.png /tmp/work/dist/images/basic/cat2.png
2023/08/01 15:43:21 Optimizing /tmp/work/dist/images/basic/capital_abcd.png
Input size: 5136 (5K)
Result size: 5151 (5K). Percentage of original: 100.292%
Preserving original PNG since it was smaller


2023/08/01 15:43:21 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/capital_abcd.png.br /tmp/work/dist/images/basic/capital_abcd.png
2023/08/01 15:43:21 br /tmp/work/dist/images/basic/capital_abcd.png -> /output/images/basic/capital_abcd.png.br
2023/08/01 15:43:21 gz /tmp/work/dist/images/basic/capital_abcd.png -> /output/images/basic/capital_abcd.png.gz
2023/08/01 15:43:21 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/cd.png /tmp/work/dist/images/basic/cd.png
2023/08/01 15:43:22 Optimizing /tmp/work/dist/images/basic/candy.png
Input size: 4502 (4K)
Result size: 4532 (4K). Percentage of original: 100.666%
Preserving original PNG since it was smaller


2023/08/01 15:43:22 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/candy.png.br /tmp/work/dist/images/basic/candy.png
2023/08/01 15:43:22 br /tmp/work/dist/images/basic/candy.png -> /output/images/basic/candy.png.br
2023/08/01 15:43:22 gz /tmp/work/dist/images/basic/candy.png -> /output/images/basic/candy.png.gz
2023/08/01 15:43:22 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/chart_with_downwards_trend.png /tmp/work/dist/images/basic/chart_with_downwards_trend.png
2023/08/01 15:43:26 Optimizing /tmp/work/dist/images/basic/carousel_horse.png
Input size: 5893 (5K)
Result size: 5819 (5K). Percentage of original: 98.744%
Result is smaller


2023/08/01 15:43:26 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/carousel_horse.png.br /tmp/work/dist/images/basic/carousel_horse.png
2023/08/01 15:43:26 br /tmp/work/dist/images/basic/carousel_horse.png -> /output/images/basic/carousel_horse.png.br
2023/08/01 15:43:26 gz /tmp/work/dist/images/basic/carousel_horse.png -> /output/images/basic/carousel_horse.png.gz
2023/08/01 15:43:26 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/chart_with_upwards_trend.png /tmp/work/dist/images/basic/chart_with_upwards_trend.png
2023/08/01 15:43:28 Optimizing /tmp/work/dist/images/basic/camel.png
Input size: 4485 (4K)
Result size: 4532 (4K). Percentage of original: 101.048%
Preserving original PNG since it was smaller


2023/08/01 15:43:28 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/camel.png.br /tmp/work/dist/images/basic/camel.png
2023/08/01 15:43:28 br /tmp/work/dist/images/basic/camel.png -> /output/images/basic/camel.png.br
2023/08/01 15:43:28 gz /tmp/work/dist/images/basic/camel.png -> /output/images/basic/camel.png.gz
2023/08/01 15:43:28 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/chart.png /tmp/work/dist/images/basic/chart.png
2023/08/01 15:43:29 Optimizing /tmp/work/dist/images/basic/capricorn.png
Input size: 4670 (4K)
Result size: 4664 (4K). Percentage of original: 99.872%
Result is smaller


2023/08/01 15:43:29 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/capricorn.png.br /tmp/work/dist/images/basic/capricorn.png
2023/08/01 15:43:29 br /tmp/work/dist/images/basic/capricorn.png -> /output/images/basic/capricorn.png.br
2023/08/01 15:43:29 gz /tmp/work/dist/images/basic/capricorn.png -> /output/images/basic/capricorn.png.gz
2023/08/01 15:43:29 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/checkered_flag.png /tmp/work/dist/images/basic/checkered_flag.png
2023/08/01 15:43:30 Optimizing /tmp/work/dist/images/basic/cat.png
Input size: 5987 (5K)
Result size: 6002 (5K). Percentage of original: 100.251%
Preserving original PNG since it was smaller


2023/08/01 15:43:30 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/cat.png.br /tmp/work/dist/images/basic/cat.png
2023/08/01 15:43:30 br /tmp/work/dist/images/basic/cat.png -> /output/images/basic/cat.png.br
2023/08/01 15:43:30 gz /tmp/work/dist/images/basic/cat.png -> /output/images/basic/cat.png.gz
2023/08/01 15:43:30 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/cherries.png /tmp/work/dist/images/basic/cherries.png
2023/08/01 15:43:30 Optimizing /tmp/work/dist/images/basic/cd.png
Input size: 6718 (6K)
Result size: 6596 (6K). Percentage of original: 98.184%
Result is smaller


2023/08/01 15:43:30 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/cd.png.br /tmp/work/dist/images/basic/cd.png
2023/08/01 15:43:31 br /tmp/work/dist/images/basic/cd.png -> /output/images/basic/cd.png.br
2023/08/01 15:43:31 gz /tmp/work/dist/images/basic/cd.png -> /output/images/basic/cd.png.gz
2023/08/01 15:43:31 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/cherry_blossom.png /tmp/work/dist/images/basic/cherry_blossom.png
2023/08/01 15:43:31 Optimizing /tmp/work/dist/images/basic/card_index.png
Input size: 3749 (3K)
Result size: 3747 (3K). Percentage of original: 99.947%
Result is smaller


2023/08/01 15:43:31 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/card_index.png.br /tmp/work/dist/images/basic/card_index.png
2023/08/01 15:43:31 br /tmp/work/dist/images/basic/card_index.png -> /output/images/basic/card_index.png.br
2023/08/01 15:43:31 gz /tmp/work/dist/images/basic/card_index.png -> /output/images/basic/card_index.png.gz
2023/08/01 15:43:31 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/chestnut.png /tmp/work/dist/images/basic/chestnut.png
2023/08/01 15:43:31 Optimizing /tmp/work/dist/images/basic/chart_with_downwards_trend.png
Input size: 2897 (2K)
Result size: 2706 (2K). Percentage of original: 93.407%
Result is smaller


2023/08/01 15:43:31 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/chart_with_downwards_trend.png.br /tmp/work/dist/images/basic/chart_with_downwards_trend.png
2023/08/01 15:43:31 br /tmp/work/dist/images/basic/chart_with_downwards_trend.png -> /output/images/basic/chart_with_downwards_trend.png.br
2023/08/01 15:43:31 gz /tmp/work/dist/images/basic/chart_with_downwards_trend.png -> /output/images/basic/chart_with_downwards_trend.png.gz
2023/08/01 15:43:31 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/chicken.png /tmp/work/dist/images/basic/chicken.png
2023/08/01 15:43:32 Optimizing /tmp/work/dist/images/basic/cat2.png
Input size: 5644 (5K)
Result size: 5746 (5K). Percentage of original: 101.807%
Preserving original PNG since it was smaller


2023/08/01 15:43:32 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/cat2.png.br /tmp/work/dist/images/basic/cat2.png
2023/08/01 15:43:32 br /tmp/work/dist/images/basic/cat2.png -> /output/images/basic/cat2.png.br
2023/08/01 15:43:32 gz /tmp/work/dist/images/basic/cat2.png -> /output/images/basic/cat2.png.gz
2023/08/01 15:43:32 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/children_crossing.png /tmp/work/dist/images/basic/children_crossing.png
2023/08/01 15:43:35 Optimizing /tmp/work/dist/images/basic/chart_with_upwards_trend.png
Input size: 2930 (2K)
Result size: 2735 (2K). Percentage of original: 93.345%
Result is smaller


2023/08/01 15:43:35 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/chart_with_upwards_trend.png.br /tmp/work/dist/images/basic/chart_with_upwards_trend.png
2023/08/01 15:43:36 br /tmp/work/dist/images/basic/chart_with_upwards_trend.png -> /output/images/basic/chart_with_upwards_trend.png.br
2023/08/01 15:43:36 gz /tmp/work/dist/images/basic/chart_with_upwards_trend.png -> /output/images/basic/chart_with_upwards_trend.png.gz
2023/08/01 15:43:36 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/chocolate_bar.png /tmp/work/dist/images/basic/chocolate_bar.png
2023/08/01 15:43:38 Optimizing /tmp/work/dist/images/basic/chart.png
Input size: 4331 (4K)
Result size: 4417 (4K). Percentage of original: 101.986%
Preserving original PNG since it was smaller


2023/08/01 15:43:38 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/chart.png.br /tmp/work/dist/images/basic/chart.png
2023/08/01 15:43:38 br /tmp/work/dist/images/basic/chart.png -> /output/images/basic/chart.png.br
2023/08/01 15:43:38 gz /tmp/work/dist/images/basic/chart.png -> /output/images/basic/chart.png.gz
2023/08/01 15:43:38 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/christmas_tree.png /tmp/work/dist/images/basic/christmas_tree.png
2023/08/01 15:43:38 Optimizing /tmp/work/dist/images/basic/checkered_flag.png
Input size: 1675 (1K)
Result size: 1622 (1K). Percentage of original: 96.836%
Result is smaller


2023/08/01 15:43:38 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/checkered_flag.png.br /tmp/work/dist/images/basic/checkered_flag.png
2023/08/01 15:43:38 br /tmp/work/dist/images/basic/checkered_flag.png -> /output/images/basic/checkered_flag.png.br
2023/08/01 15:43:38 gz /tmp/work/dist/images/basic/checkered_flag.png -> /output/images/basic/checkered_flag.png.gz
2023/08/01 15:43:38 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/church.png /tmp/work/dist/images/basic/church.png
2023/08/01 15:43:41 Optimizing /tmp/work/dist/images/basic/cherry_blossom.png
Input size: 7174 (7K)
Result size: 7127 (6K). Percentage of original: 99.345%
Result is smaller


2023/08/01 15:43:41 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/cherry_blossom.png.br /tmp/work/dist/images/basic/cherry_blossom.png
2023/08/01 15:43:41 br /tmp/work/dist/images/basic/cherry_blossom.png -> /output/images/basic/cherry_blossom.png.br
2023/08/01 15:43:41 gz /tmp/work/dist/images/basic/cherry_blossom.png -> /output/images/basic/cherry_blossom.png.gz
2023/08/01 15:43:41 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/cinema.png /tmp/work/dist/images/basic/cinema.png
2023/08/01 15:43:42 Optimizing /tmp/work/dist/images/basic/cherries.png
Input size: 5604 (5K)
Result size: 5521 (5K). Percentage of original: 98.519%
Result is smaller


2023/08/01 15:43:42 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/cherries.png.br /tmp/work/dist/images/basic/cherries.png
2023/08/01 15:43:42 br /tmp/work/dist/images/basic/cherries.png -> /output/images/basic/cherries.png.br
2023/08/01 15:43:42 gz /tmp/work/dist/images/basic/cherries.png -> /output/images/basic/cherries.png.gz
2023/08/01 15:43:42 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/circus_tent.png /tmp/work/dist/images/basic/circus_tent.png
2023/08/01 15:43:42 Optimizing /tmp/work/dist/images/basic/chicken.png
Input size: 3988 (3K)
Result size: 4052 (3K). Percentage of original: 101.605%
Preserving original PNG since it was smaller


2023/08/01 15:43:42 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/chicken.png.br /tmp/work/dist/images/basic/chicken.png
2023/08/01 15:43:42 br /tmp/work/dist/images/basic/chicken.png -> /output/images/basic/chicken.png.br
2023/08/01 15:43:42 gz /tmp/work/dist/images/basic/chicken.png -> /output/images/basic/chicken.png.gz
2023/08/01 15:43:42 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/city_sunrise.png /tmp/work/dist/images/basic/city_sunrise.png
2023/08/01 15:43:43 Optimizing /tmp/work/dist/images/basic/chestnut.png
Input size: 5875 (5K)
Result size: 5794 (5K). Percentage of original: 98.621%
Result is smaller


2023/08/01 15:43:43 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/chestnut.png.br /tmp/work/dist/images/basic/chestnut.png
2023/08/01 15:43:43 br /tmp/work/dist/images/basic/chestnut.png -> /output/images/basic/chestnut.png.br
2023/08/01 15:43:43 gz /tmp/work/dist/images/basic/chestnut.png -> /output/images/basic/chestnut.png.gz
2023/08/01 15:43:43 Optimizing /tmp/work/dist/images/basic/children_crossing.png
Input size: 3460 (3K)
Result size: 3422 (3K). Percentage of original: 98.902%
Result is smaller


2023/08/01 15:43:43 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/city_sunset.png /tmp/work/dist/images/basic/city_sunset.png
2023/08/01 15:43:43 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/children_crossing.png.br /tmp/work/dist/images/basic/children_crossing.png
2023/08/01 15:43:43 br /tmp/work/dist/images/basic/children_crossing.png -> /output/images/basic/children_crossing.png.br
2023/08/01 15:43:43 gz /tmp/work/dist/images/basic/children_crossing.png -> /output/images/basic/children_crossing.png.gz
2023/08/01 15:43:43 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/cl.png /tmp/work/dist/images/basic/cl.png
2023/08/01 15:43:44 Optimizing /tmp/work/dist/images/basic/christmas_tree.png
Input size: 4721 (4K)
Result size: 4947 (4K). Percentage of original: 104.787%
Preserving original PNG since it was smaller


2023/08/01 15:43:44 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/christmas_tree.png.br /tmp/work/dist/images/basic/christmas_tree.png
2023/08/01 15:43:44 br /tmp/work/dist/images/basic/christmas_tree.png -> /output/images/basic/christmas_tree.png.br
2023/08/01 15:43:44 gz /tmp/work/dist/images/basic/christmas_tree.png -> /output/images/basic/christmas_tree.png.gz
2023/08/01 15:43:44 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/clap.png /tmp/work/dist/images/basic/clap.png
2023/08/01 15:43:48 Optimizing /tmp/work/dist/images/basic/church.png
Input size: 4653 (4K)
Result size: 4635 (4K). Percentage of original: 99.613%
Result is smaller


2023/08/01 15:43:48 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/church.png.br /tmp/work/dist/images/basic/church.png
2023/08/01 15:43:48 br /tmp/work/dist/images/basic/church.png -> /output/images/basic/church.png.br
2023/08/01 15:43:48 gz /tmp/work/dist/images/basic/church.png -> /output/images/basic/church.png.gz
2023/08/01 15:43:48 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/clapper.png /tmp/work/dist/images/basic/clapper.png
2023/08/01 15:43:49 Optimizing /tmp/work/dist/images/basic/chocolate_bar.png
Input size: 5249 (5K)
Result size: 5269 (5K). Percentage of original: 100.381%
Preserving original PNG since it was smaller


2023/08/01 15:43:49 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/chocolate_bar.png.br /tmp/work/dist/images/basic/chocolate_bar.png
2023/08/01 15:43:49 br /tmp/work/dist/images/basic/chocolate_bar.png -> /output/images/basic/chocolate_bar.png.br
2023/08/01 15:43:49 gz /tmp/work/dist/images/basic/chocolate_bar.png -> /output/images/basic/chocolate_bar.png.gz
2023/08/01 15:43:49 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/clipboard.png /tmp/work/dist/images/basic/clipboard.png
2023/08/01 15:43:49 Optimizing /tmp/work/dist/images/basic/clap.png
Input size: 7110 (6K)
Result size: 7155 (6K). Percentage of original: 100.633%
Preserving original PNG since it was smaller


2023/08/01 15:43:49 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/clap.png.br /tmp/work/dist/images/basic/clap.png
2023/08/01 15:43:49 br /tmp/work/dist/images/basic/clap.png -> /output/images/basic/clap.png.br
2023/08/01 15:43:49 gz /tmp/work/dist/images/basic/clap.png -> /output/images/basic/clap.png.gz
2023/08/01 15:43:49 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/clock1.png /tmp/work/dist/images/basic/clock1.png
2023/08/01 15:43:53 Optimizing /tmp/work/dist/images/basic/cinema.png
Input size: 3573 (3K)
Result size: 3511 (3K). Percentage of original: 98.265%
Result is smaller


2023/08/01 15:43:53 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/cinema.png.br /tmp/work/dist/images/basic/cinema.png
2023/08/01 15:43:53 br /tmp/work/dist/images/basic/cinema.png -> /output/images/basic/cinema.png.br
2023/08/01 15:43:53 gz /tmp/work/dist/images/basic/cinema.png -> /output/images/basic/cinema.png.gz
2023/08/01 15:43:53 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/clock10.png /tmp/work/dist/images/basic/clock10.png
2023/08/01 15:43:53 Optimizing /tmp/work/dist/images/basic/circus_tent.png
Input size: 4683 (4K)
Result size: 4724 (4K). Percentage of original: 100.876%
Preserving original PNG since it was smaller


2023/08/01 15:43:53 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/circus_tent.png.br /tmp/work/dist/images/basic/circus_tent.png
2023/08/01 15:43:53 br /tmp/work/dist/images/basic/circus_tent.png -> /output/images/basic/circus_tent.png.br
2023/08/01 15:43:53 gz /tmp/work/dist/images/basic/circus_tent.png -> /output/images/basic/circus_tent.png.gz
2023/08/01 15:43:53 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/clock1030.png /tmp/work/dist/images/basic/clock1030.png
2023/08/01 15:43:53 Optimizing /tmp/work/dist/images/basic/city_sunrise.png
Input size: 4312 (4K)
Result size: 4124 (4K). Percentage of original: 95.640%
Result is smaller


2023/08/01 15:43:53 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/city_sunrise.png.br /tmp/work/dist/images/basic/city_sunrise.png
2023/08/01 15:43:53 Optimizing /tmp/work/dist/images/basic/cl.png
Input size: 3493 (3K)
Result size: 3478 (3K). Percentage of original: 99.571%
Result is smaller


2023/08/01 15:43:53 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/cl.png.br /tmp/work/dist/images/basic/cl.png
2023/08/01 15:43:53 br /tmp/work/dist/images/basic/cl.png -> /output/images/basic/cl.png.br
2023/08/01 15:43:53 gz /tmp/work/dist/images/basic/cl.png -> /output/images/basic/cl.png.gz
2023/08/01 15:43:53 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/clock11.png /tmp/work/dist/images/basic/clock11.png
2023/08/01 15:43:53 br /tmp/work/dist/images/basic/city_sunrise.png -> /output/images/basic/city_sunrise.png.br
2023/08/01 15:43:53 gz /tmp/work/dist/images/basic/city_sunrise.png -> /output/images/basic/city_sunrise.png.gz
2023/08/01 15:43:53 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/clock1130.png /tmp/work/dist/images/basic/clock1130.png
2023/08/01 15:43:55 Optimizing /tmp/work/dist/images/basic/city_sunset.png
Input size: 3841 (3K)
Result size: 3756 (3K). Percentage of original: 97.787%
Result is smaller


2023/08/01 15:43:55 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/city_sunset.png.br /tmp/work/dist/images/basic/city_sunset.png
2023/08/01 15:43:55 br /tmp/work/dist/images/basic/city_sunset.png -> /output/images/basic/city_sunset.png.br
2023/08/01 15:43:55 gz /tmp/work/dist/images/basic/city_sunset.png -> /output/images/basic/city_sunset.png.gz
2023/08/01 15:43:55 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/clock12.png /tmp/work/dist/images/basic/clock12.png
2023/08/01 15:43:55 Optimizing /tmp/work/dist/images/basic/clock1.png
Input size: 2590 (2K)
Result size: 2596 (2K). Percentage of original: 100.232%
Preserving original PNG since it was smaller


2023/08/01 15:43:55 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/clock1.png.br /tmp/work/dist/images/basic/clock1.png
2023/08/01 15:43:55 br /tmp/work/dist/images/basic/clock1.png -> /output/images/basic/clock1.png.br
2023/08/01 15:43:55 gz /tmp/work/dist/images/basic/clock1.png -> /output/images/basic/clock1.png.gz
2023/08/01 15:43:55 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/clock1230.png /tmp/work/dist/images/basic/clock1230.png
2023/08/01 15:43:59 Optimizing /tmp/work/dist/images/basic/clipboard.png
Input size: 4663 (4K)
Result size: 4637 (4K). Percentage of original: 99.442%
Result is smaller


2023/08/01 15:43:59 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/clipboard.png.br /tmp/work/dist/images/basic/clipboard.png
2023/08/01 15:43:59 br /tmp/work/dist/images/basic/clipboard.png -> /output/images/basic/clipboard.png.br
2023/08/01 15:43:59 gz /tmp/work/dist/images/basic/clipboard.png -> /output/images/basic/clipboard.png.gz
2023/08/01 15:43:59 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/clock130.png /tmp/work/dist/images/basic/clock130.png
2023/08/01 15:43:59 Optimizing /tmp/work/dist/images/basic/clock10.png
Input size: 2590 (2K)
Result size: 2594 (2K). Percentage of original: 100.154%
Preserving original PNG since it was smaller


2023/08/01 15:43:59 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/clock10.png.br /tmp/work/dist/images/basic/clock10.png
2023/08/01 15:43:59 br /tmp/work/dist/images/basic/clock10.png -> /output/images/basic/clock10.png.br
2023/08/01 15:43:59 gz /tmp/work/dist/images/basic/clock10.png -> /output/images/basic/clock10.png.gz
2023/08/01 15:43:59 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/clock2.png /tmp/work/dist/images/basic/clock2.png
2023/08/01 15:43:59 Optimizing /tmp/work/dist/images/basic/clock1030.png
Input size: 2817 (2K)
Result size: 2834 (2K). Percentage of original: 100.603%
Preserving original PNG since it was smaller


2023/08/01 15:43:59 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/clock1030.png.br /tmp/work/dist/images/basic/clock1030.png
2023/08/01 15:43:59 br /tmp/work/dist/images/basic/clock1030.png -> /output/images/basic/clock1030.png.br
2023/08/01 15:43:59 Optimizing /tmp/work/dist/images/basic/clapper.png
Input size: 4192 (4K)
Result size: 4173 (4K). Percentage of original: 99.547%
Result is smaller


2023/08/01 15:43:59 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/clapper.png.br /tmp/work/dist/images/basic/clapper.png
2023/08/01 15:43:59 gz /tmp/work/dist/images/basic/clock1030.png -> /output/images/basic/clock1030.png.gz
2023/08/01 15:43:59 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/clock230.png /tmp/work/dist/images/basic/clock230.png
2023/08/01 15:44:00 Optimizing /tmp/work/dist/images/basic/clock11.png
Input size: 2587 (2K)
Result size: 2602 (2K). Percentage of original: 100.580%
Preserving original PNG since it was smaller


2023/08/01 15:44:00 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/clock11.png.br /tmp/work/dist/images/basic/clock11.png
2023/08/01 15:44:00 br /tmp/work/dist/images/basic/clapper.png -> /output/images/basic/clapper.png.br
2023/08/01 15:44:00 gz /tmp/work/dist/images/basic/clapper.png -> /output/images/basic/clapper.png.gz
2023/08/01 15:44:00 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/clock3.png /tmp/work/dist/images/basic/clock3.png
2023/08/01 15:44:00 Optimizing /tmp/work/dist/images/basic/clock1130.png
Input size: 2854 (2K)
Result size: 2859 (2K). Percentage of original: 100.175%
Preserving original PNG since it was smaller


2023/08/01 15:44:00 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/clock1130.png.br /tmp/work/dist/images/basic/clock1130.png
2023/08/01 15:44:00 br /tmp/work/dist/images/basic/clock11.png -> /output/images/basic/clock11.png.br
2023/08/01 15:44:00 gz /tmp/work/dist/images/basic/clock11.png -> /output/images/basic/clock11.png.gz
2023/08/01 15:44:00 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/clock330.png /tmp/work/dist/images/basic/clock330.png
2023/08/01 15:44:00 br /tmp/work/dist/images/basic/clock1130.png -> /output/images/basic/clock1130.png.br
2023/08/01 15:44:00 gz /tmp/work/dist/images/basic/clock1130.png -> /output/images/basic/clock1130.png.gz
2023/08/01 15:44:00 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/clock4.png /tmp/work/dist/images/basic/clock4.png
2023/08/01 15:44:01 Optimizing /tmp/work/dist/images/basic/clock12.png
Input size: 2504 (2K)
Result size: 2518 (2K). Percentage of original: 100.559%
Preserving original PNG since it was smaller


2023/08/01 15:44:01 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/clock12.png.br /tmp/work/dist/images/basic/clock12.png
2023/08/01 15:44:01 br /tmp/work/dist/images/basic/clock12.png -> /output/images/basic/clock12.png.br
2023/08/01 15:44:01 gz /tmp/work/dist/images/basic/clock12.png -> /output/images/basic/clock12.png.gz
2023/08/01 15:44:01 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/clock430.png /tmp/work/dist/images/basic/clock430.png
2023/08/01 15:44:01 Optimizing /tmp/work/dist/images/basic/clock1230.png
Input size: 2797 (2K)
Result size: 2791 (2K). Percentage of original: 99.785%
Result is smaller


2023/08/01 15:44:01 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/clock1230.png.br /tmp/work/dist/images/basic/clock1230.png
2023/08/01 15:44:01 br /tmp/work/dist/images/basic/clock1230.png -> /output/images/basic/clock1230.png.br
2023/08/01 15:44:02 gz /tmp/work/dist/images/basic/clock1230.png -> /output/images/basic/clock1230.png.gz
2023/08/01 15:44:02 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/clock5.png /tmp/work/dist/images/basic/clock5.png
2023/08/01 15:44:05 Optimizing /tmp/work/dist/images/basic/clock130.png
Input size: 2837 (2K)
Result size: 2810 (2K). Percentage of original: 99.048%
Result is smaller


2023/08/01 15:44:05 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/clock130.png.br /tmp/work/dist/images/basic/clock130.png
2023/08/01 15:44:05 br /tmp/work/dist/images/basic/clock130.png -> /output/images/basic/clock130.png.br
2023/08/01 15:44:05 gz /tmp/work/dist/images/basic/clock130.png -> /output/images/basic/clock130.png.gz
2023/08/01 15:44:05 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/clock530.png /tmp/work/dist/images/basic/clock530.png
2023/08/01 15:44:05 Optimizing /tmp/work/dist/images/basic/clock2.png
Input size: 2595 (2K)
Result size: 2611 (2K). Percentage of original: 100.617%
Preserving original PNG since it was smaller


2023/08/01 15:44:05 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/clock2.png.br /tmp/work/dist/images/basic/clock2.png
2023/08/01 15:44:06 br /tmp/work/dist/images/basic/clock2.png -> /output/images/basic/clock2.png.br
2023/08/01 15:44:06 gz /tmp/work/dist/images/basic/clock2.png -> /output/images/basic/clock2.png.gz
2023/08/01 15:44:06 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/clock6.png /tmp/work/dist/images/basic/clock6.png
2023/08/01 15:44:06 Optimizing /tmp/work/dist/images/basic/clock230.png
Input size: 2853 (2K)
Result size: 2825 (2K). Percentage of original: 99.019%
Result is smaller


2023/08/01 15:44:06 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/clock230.png.br /tmp/work/dist/images/basic/clock230.png
2023/08/01 15:44:06 br /tmp/work/dist/images/basic/clock230.png -> /output/images/basic/clock230.png.br
2023/08/01 15:44:06 gz /tmp/work/dist/images/basic/clock230.png -> /output/images/basic/clock230.png.gz
2023/08/01 15:44:06 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/clock630.png /tmp/work/dist/images/basic/clock630.png
2023/08/01 15:44:06 Optimizing /tmp/work/dist/images/basic/clock4.png
Input size: 2619 (2K)
Result size: 2623 (2K). Percentage of original: 100.153%
Preserving original PNG since it was smaller


2023/08/01 15:44:06 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/clock4.png.br /tmp/work/dist/images/basic/clock4.png
2023/08/01 15:44:06 br /tmp/work/dist/images/basic/clock4.png -> /output/images/basic/clock4.png.br
2023/08/01 15:44:06 gz /tmp/work/dist/images/basic/clock4.png -> /output/images/basic/clock4.png.gz
2023/08/01 15:44:06 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/clock7.png /tmp/work/dist/images/basic/clock7.png
2023/08/01 15:44:06 Optimizing /tmp/work/dist/images/basic/clock3.png
Input size: 2492 (2K)
Result size: 2508 (2K). Percentage of original: 100.642%
Preserving original PNG since it was smaller


2023/08/01 15:44:06 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/clock3.png.br /tmp/work/dist/images/basic/clock3.png
2023/08/01 15:44:06 Optimizing /tmp/work/dist/images/basic/clock330.png
Input size: 2739 (2K)
Result size: 2712 (2K). Percentage of original: 99.014%
Result is smaller


2023/08/01 15:44:06 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/clock330.png.br /tmp/work/dist/images/basic/clock330.png
2023/08/01 15:44:06 br /tmp/work/dist/images/basic/clock3.png -> /output/images/basic/clock3.png.br
2023/08/01 15:44:06 gz /tmp/work/dist/images/basic/clock3.png -> /output/images/basic/clock3.png.gz
2023/08/01 15:44:06 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/clock730.png /tmp/work/dist/images/basic/clock730.png
2023/08/01 15:44:06 br /tmp/work/dist/images/basic/clock330.png -> /output/images/basic/clock330.png.br
2023/08/01 15:44:07 gz /tmp/work/dist/images/basic/clock330.png -> /output/images/basic/clock330.png.gz
2023/08/01 15:44:07 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/clock8.png /tmp/work/dist/images/basic/clock8.png
2023/08/01 15:44:08 Optimizing /tmp/work/dist/images/basic/clock430.png
Input size: 2803 (2K)
Result size: 2818 (2K). Percentage of original: 100.535%
Preserving original PNG since it was smaller


2023/08/01 15:44:08 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/clock430.png.br /tmp/work/dist/images/basic/clock430.png
2023/08/01 15:44:08 br /tmp/work/dist/images/basic/clock430.png -> /output/images/basic/clock430.png.br
2023/08/01 15:44:08 gz /tmp/work/dist/images/basic/clock430.png -> /output/images/basic/clock430.png.gz
2023/08/01 15:44:08 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/clock830.png /tmp/work/dist/images/basic/clock830.png
2023/08/01 15:44:08 Optimizing /tmp/work/dist/images/basic/clock5.png
Input size: 2624 (2K)
Result size: 2625 (2K). Percentage of original: 100.038%
Preserving original PNG since it was smaller


2023/08/01 15:44:08 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/clock5.png.br /tmp/work/dist/images/basic/clock5.png
2023/08/01 15:44:08 br /tmp/work/dist/images/basic/clock5.png -> /output/images/basic/clock5.png.br
2023/08/01 15:44:08 gz /tmp/work/dist/images/basic/clock5.png -> /output/images/basic/clock5.png.gz
2023/08/01 15:44:08 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/clock9.png /tmp/work/dist/images/basic/clock9.png
2023/08/01 15:44:11 Optimizing /tmp/work/dist/images/basic/clock530.png
Input size: 2832 (2K)
Result size: 2812 (2K). Percentage of original: 99.294%
Result is smaller


2023/08/01 15:44:11 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/clock530.png.br /tmp/work/dist/images/basic/clock530.png
2023/08/01 15:44:11 br /tmp/work/dist/images/basic/clock530.png -> /output/images/basic/clock530.png.br
2023/08/01 15:44:11 gz /tmp/work/dist/images/basic/clock530.png -> /output/images/basic/clock530.png.gz
2023/08/01 15:44:11 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/clock930.png /tmp/work/dist/images/basic/clock930.png
2023/08/01 15:44:12 Optimizing /tmp/work/dist/images/basic/clock630.png
Input size: 2730 (2K)
Result size: 2711 (2K). Percentage of original: 99.304%
Result is smaller


2023/08/01 15:44:12 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/clock630.png.br /tmp/work/dist/images/basic/clock630.png
2023/08/01 15:44:12 br /tmp/work/dist/images/basic/clock630.png -> /output/images/basic/clock630.png.br
2023/08/01 15:44:12 gz /tmp/work/dist/images/basic/clock630.png -> /output/images/basic/clock630.png.gz
2023/08/01 15:44:12 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/closed_book.png /tmp/work/dist/images/basic/closed_book.png
2023/08/01 15:44:12 Optimizing /tmp/work/dist/images/basic/clock6.png
Input size: 2577 (2K)
Result size: 2585 (2K). Percentage of original: 100.310%
Preserving original PNG since it was smaller


2023/08/01 15:44:12 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/clock6.png.br /tmp/work/dist/images/basic/clock6.png
2023/08/01 15:44:12 br /tmp/work/dist/images/basic/clock6.png -> /output/images/basic/clock6.png.br
2023/08/01 15:44:12 gz /tmp/work/dist/images/basic/clock6.png -> /output/images/basic/clock6.png.gz
2023/08/01 15:44:12 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/closed_lock_with_key.png /tmp/work/dist/images/basic/closed_lock_with_key.png
2023/08/01 15:44:13 Optimizing /tmp/work/dist/images/basic/clock7.png
Input size: 2615 (2K)
Result size: 2624 (2K). Percentage of original: 100.344%
Preserving original PNG since it was smaller


2023/08/01 15:44:13 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/clock7.png.br /tmp/work/dist/images/basic/clock7.png
2023/08/01 15:44:13 br /tmp/work/dist/images/basic/clock7.png -> /output/images/basic/clock7.png.br
2023/08/01 15:44:13 gz /tmp/work/dist/images/basic/clock7.png -> /output/images/basic/clock7.png.gz
2023/08/01 15:44:13 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/closed_umbrella.png /tmp/work/dist/images/basic/closed_umbrella.png
2023/08/01 15:44:13 Optimizing /tmp/work/dist/images/basic/clock730.png
Input size: 2794 (2K)
Result size: 2797 (2K). Percentage of original: 100.107%
Preserving original PNG since it was smaller


2023/08/01 15:44:13 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/clock730.png.br /tmp/work/dist/images/basic/clock730.png
2023/08/01 15:44:13 br /tmp/work/dist/images/basic/clock730.png -> /output/images/basic/clock730.png.br
2023/08/01 15:44:13 gz /tmp/work/dist/images/basic/clock730.png -> /output/images/basic/clock730.png.gz
2023/08/01 15:44:13 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/cloud.png /tmp/work/dist/images/basic/cloud.png
2023/08/01 15:44:13 Optimizing /tmp/work/dist/images/basic/clock8.png
Input size: 2603 (2K)
Result size: 2604 (2K). Percentage of original: 100.038%
Preserving original PNG since it was smaller


2023/08/01 15:44:13 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/clock8.png.br /tmp/work/dist/images/basic/clock8.png
2023/08/01 15:44:13 br /tmp/work/dist/images/basic/clock8.png -> /output/images/basic/clock8.png.br
2023/08/01 15:44:13 gz /tmp/work/dist/images/basic/clock8.png -> /output/images/basic/clock8.png.gz
2023/08/01 15:44:13 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/clubs.png /tmp/work/dist/images/basic/clubs.png
2023/08/01 15:44:14 Optimizing /tmp/work/dist/images/basic/clock830.png
Input size: 2792 (2K)
Result size: 2792 (2K). Percentage of original: 100.000%
Result has exact same size


2023/08/01 15:44:14 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/clock830.png.br /tmp/work/dist/images/basic/clock830.png
2023/08/01 15:44:15 br /tmp/work/dist/images/basic/clock830.png -> /output/images/basic/clock830.png.br
2023/08/01 15:44:15 gz /tmp/work/dist/images/basic/clock830.png -> /output/images/basic/clock830.png.gz
2023/08/01 15:44:15 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/cn.png /tmp/work/dist/images/basic/cn.png
2023/08/01 15:44:15 Optimizing /tmp/work/dist/images/basic/clock9.png
Input size: 2486 (2K)
Result size: 2505 (2K). Percentage of original: 100.764%
Preserving original PNG since it was smaller


2023/08/01 15:44:15 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/clock9.png.br /tmp/work/dist/images/basic/clock9.png
2023/08/01 15:44:15 br /tmp/work/dist/images/basic/clock9.png -> /output/images/basic/clock9.png.br
2023/08/01 15:44:15 gz /tmp/work/dist/images/basic/clock9.png -> /output/images/basic/clock9.png.gz
2023/08/01 15:44:15 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/cocktail.png /tmp/work/dist/images/basic/cocktail.png
2023/08/01 15:44:17 Optimizing /tmp/work/dist/images/basic/clock930.png
Input size: 2746 (2K)
Result size: 2734 (2K). Percentage of original: 99.563%
Result is smaller


2023/08/01 15:44:17 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/clock930.png.br /tmp/work/dist/images/basic/clock930.png
2023/08/01 15:44:17 br /tmp/work/dist/images/basic/clock930.png -> /output/images/basic/clock930.png.br
2023/08/01 15:44:17 gz /tmp/work/dist/images/basic/clock930.png -> /output/images/basic/clock930.png.gz
2023/08/01 15:44:17 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/coffee.png /tmp/work/dist/images/basic/coffee.png
2023/08/01 15:44:20 Optimizing /tmp/work/dist/images/basic/clubs.png
Input size: 1685 (1K)
Result size: 1647 (1K). Percentage of original: 97.745%
Result is smaller


2023/08/01 15:44:20 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/clubs.png.br /tmp/work/dist/images/basic/clubs.png
2023/08/01 15:44:20 br /tmp/work/dist/images/basic/clubs.png -> /output/images/basic/clubs.png.br
2023/08/01 15:44:20 gz /tmp/work/dist/images/basic/clubs.png -> /output/images/basic/clubs.png.gz
2023/08/01 15:44:20 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/cold_sweat.png /tmp/work/dist/images/basic/cold_sweat.png
2023/08/01 15:44:23 Optimizing /tmp/work/dist/images/basic/closed_lock_with_key.png
Input size: 5701 (5K)
Result size: 5651 (5K). Percentage of original: 99.123%
Result is smaller


2023/08/01 15:44:23 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/closed_lock_with_key.png.br /tmp/work/dist/images/basic/closed_lock_with_key.png
2023/08/01 15:44:23 br /tmp/work/dist/images/basic/closed_lock_with_key.png -> /output/images/basic/closed_lock_with_key.png.br
2023/08/01 15:44:23 gz /tmp/work/dist/images/basic/closed_lock_with_key.png -> /output/images/basic/closed_lock_with_key.png.gz
2023/08/01 15:44:23 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/collision.png /tmp/work/dist/images/basic/collision.png
2023/08/01 15:44:24 Optimizing /tmp/work/dist/images/basic/cocktail.png
Input size: 2949 (2K)
Result size: 3078 (3K). Percentage of original: 104.374%
Preserving original PNG since it was smaller


2023/08/01 15:44:24 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/cocktail.png.br /tmp/work/dist/images/basic/cocktail.png
2023/08/01 15:44:24 br /tmp/work/dist/images/basic/cocktail.png -> /output/images/basic/cocktail.png.br
2023/08/01 15:44:24 gz /tmp/work/dist/images/basic/cocktail.png -> /output/images/basic/cocktail.png.gz
2023/08/01 15:44:24 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/computer.png /tmp/work/dist/images/basic/computer.png
2023/08/01 15:44:24 Optimizing /tmp/work/dist/images/basic/closed_umbrella.png
Input size: 3868 (3K)
Result size: 4081 (3K). Percentage of original: 105.507%
Preserving original PNG since it was smaller


2023/08/01 15:44:24 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/closed_umbrella.png.br /tmp/work/dist/images/basic/closed_umbrella.png
2023/08/01 15:44:24 br /tmp/work/dist/images/basic/closed_umbrella.png -> /output/images/basic/closed_umbrella.png.br
2023/08/01 15:44:24 gz /tmp/work/dist/images/basic/closed_umbrella.png -> /output/images/basic/closed_umbrella.png.gz
2023/08/01 15:44:24 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/confetti_ball.png /tmp/work/dist/images/basic/confetti_ball.png
2023/08/01 15:44:25 Optimizing /tmp/work/dist/images/basic/cloud.png
Input size: 3860 (3K)
Result size: 3803 (3K). Percentage of original: 98.523%
Result is smaller


2023/08/01 15:44:25 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/cloud.png.br /tmp/work/dist/images/basic/cloud.png
2023/08/01 15:44:25 br /tmp/work/dist/images/basic/cloud.png -> /output/images/basic/cloud.png.br
2023/08/01 15:44:25 gz /tmp/work/dist/images/basic/cloud.png -> /output/images/basic/cloud.png.gz
2023/08/01 15:44:25 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/confounded.png /tmp/work/dist/images/basic/confounded.png
2023/08/01 15:44:31 Optimizing /tmp/work/dist/images/basic/cold_sweat.png
Input size: 5972 (5K)
Result size: 5844 (5K). Percentage of original: 97.857%
Result is smaller


2023/08/01 15:44:31 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/cold_sweat.png.br /tmp/work/dist/images/basic/cold_sweat.png
2023/08/01 15:44:31 br /tmp/work/dist/images/basic/cold_sweat.png -> /output/images/basic/cold_sweat.png.br
2023/08/01 15:44:31 gz /tmp/work/dist/images/basic/cold_sweat.png -> /output/images/basic/cold_sweat.png.gz
2023/08/01 15:44:31 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/confused.png /tmp/work/dist/images/basic/confused.png
2023/08/01 15:44:33 Optimizing /tmp/work/dist/images/basic/closed_book.png
Input size: 4847 (4K)
Result size: 4745 (4K). Percentage of original: 97.896%
Result is smaller


2023/08/01 15:44:33 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/closed_book.png.br /tmp/work/dist/images/basic/closed_book.png
2023/08/01 15:44:33 br /tmp/work/dist/images/basic/closed_book.png -> /output/images/basic/closed_book.png.br
2023/08/01 15:44:33 gz /tmp/work/dist/images/basic/closed_book.png -> /output/images/basic/closed_book.png.gz
2023/08/01 15:44:33 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/congratulations.png /tmp/work/dist/images/basic/congratulations.png
2023/08/01 15:44:33 Optimizing /tmp/work/dist/images/basic/confetti_ball.png
Input size: 5521 (5K)
Result size: 5480 (5K). Percentage of original: 99.257%
Result is smaller


2023/08/01 15:44:33 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/confetti_ball.png.br /tmp/work/dist/images/basic/confetti_ball.png
2023/08/01 15:44:33 br /tmp/work/dist/images/basic/confetti_ball.png -> /output/images/basic/confetti_ball.png.br
2023/08/01 15:44:33 gz /tmp/work/dist/images/basic/confetti_ball.png -> /output/images/basic/confetti_ball.png.gz
2023/08/01 15:44:33 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/construction_worker.png /tmp/work/dist/images/basic/construction_worker.png
2023/08/01 15:44:33 Optimizing /tmp/work/dist/images/basic/coffee.png
Input size: 4306 (4K)
Result size: 4156 (4K). Percentage of original: 96.516%
Result is smaller


2023/08/01 15:44:33 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/coffee.png.br /tmp/work/dist/images/basic/coffee.png
2023/08/01 15:44:33 br /tmp/work/dist/images/basic/coffee.png -> /output/images/basic/coffee.png.br
2023/08/01 15:44:33 gz /tmp/work/dist/images/basic/coffee.png -> /output/images/basic/coffee.png.gz
2023/08/01 15:44:34 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/construction.png /tmp/work/dist/images/basic/construction.png
2023/08/01 15:44:35 Optimizing /tmp/work/dist/images/basic/cn.png
Input size: 3634 (3K)
Result size: 3520 (3K). Percentage of original: 96.863%
Result is smaller


2023/08/01 15:44:35 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/cn.png.br /tmp/work/dist/images/basic/cn.png
2023/08/01 15:44:35 br /tmp/work/dist/images/basic/cn.png -> /output/images/basic/cn.png.br
2023/08/01 15:44:35 gz /tmp/work/dist/images/basic/cn.png -> /output/images/basic/cn.png.gz
2023/08/01 15:44:35 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/convenience_store.png /tmp/work/dist/images/basic/convenience_store.png
2023/08/01 15:44:36 Optimizing /tmp/work/dist/images/basic/confounded.png
Input size: 5857 (5K)
Result size: 5539 (5K). Percentage of original: 94.571%
Result is smaller


2023/08/01 15:44:36 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/confounded.png.br /tmp/work/dist/images/basic/confounded.png
2023/08/01 15:44:36 br /tmp/work/dist/images/basic/confounded.png -> /output/images/basic/confounded.png.br
2023/08/01 15:44:36 gz /tmp/work/dist/images/basic/confounded.png -> /output/images/basic/confounded.png.gz
2023/08/01 15:44:36 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/cookie.png /tmp/work/dist/images/basic/cookie.png
2023/08/01 15:44:39 Optimizing /tmp/work/dist/images/basic/computer.png
Input size: 1705 (1K)
Result size: 1699 (1K). Percentage of original: 99.648%
Result is smaller


2023/08/01 15:44:39 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/computer.png.br /tmp/work/dist/images/basic/computer.png
2023/08/01 15:44:40 br /tmp/work/dist/images/basic/computer.png -> /output/images/basic/computer.png.br
2023/08/01 15:44:40 gz /tmp/work/dist/images/basic/computer.png -> /output/images/basic/computer.png.gz
2023/08/01 15:44:40 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/cool.png /tmp/work/dist/images/basic/cool.png
2023/08/01 15:44:40 Optimizing /tmp/work/dist/images/basic/confused.png
Input size: 4633 (4K)
Result size: 4561 (4K). Percentage of original: 98.446%
Result is smaller


2023/08/01 15:44:40 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/confused.png.br /tmp/work/dist/images/basic/confused.png
2023/08/01 15:44:41 br /tmp/work/dist/images/basic/confused.png -> /output/images/basic/confused.png.br
2023/08/01 15:44:41 gz /tmp/work/dist/images/basic/confused.png -> /output/images/basic/confused.png.gz
2023/08/01 15:44:41 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/cop.png /tmp/work/dist/images/basic/cop.png
2023/08/01 15:44:43 Optimizing /tmp/work/dist/images/basic/congratulations.png
Input size: 4881 (4K)
Result size: 4870 (4K). Percentage of original: 99.775%
Result is smaller


2023/08/01 15:44:43 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/congratulations.png.br /tmp/work/dist/images/basic/congratulations.png
2023/08/01 15:44:43 br /tmp/work/dist/images/basic/congratulations.png -> /output/images/basic/congratulations.png.br
2023/08/01 15:44:43 gz /tmp/work/dist/images/basic/congratulations.png -> /output/images/basic/congratulations.png.gz
2023/08/01 15:44:43 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/copyright.png /tmp/work/dist/images/basic/copyright.png
2023/08/01 15:44:44 Optimizing /tmp/work/dist/images/basic/collision.png
Input size: 3772 (3K)
Result size: 3881 (3K). Percentage of original: 102.890%
Preserving original PNG since it was smaller


2023/08/01 15:44:44 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/collision.png.br /tmp/work/dist/images/basic/collision.png
2023/08/01 15:44:44 br /tmp/work/dist/images/basic/collision.png -> /output/images/basic/collision.png.br
2023/08/01 15:44:44 gz /tmp/work/dist/images/basic/collision.png -> /output/images/basic/collision.png.gz
2023/08/01 15:44:44 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/corn.png /tmp/work/dist/images/basic/corn.png
2023/08/01 15:44:44 Optimizing /tmp/work/dist/images/basic/construction_worker.png
Input size: 6193 (6K)
Result size: 6160 (6K). Percentage of original: 99.467%
Result is smaller


2023/08/01 15:44:44 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/construction_worker.png.br /tmp/work/dist/images/basic/construction_worker.png
2023/08/01 15:44:44 br /tmp/work/dist/images/basic/construction_worker.png -> /output/images/basic/construction_worker.png.br
2023/08/01 15:44:44 gz /tmp/work/dist/images/basic/construction_worker.png -> /output/images/basic/construction_worker.png.gz
2023/08/01 15:44:44 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/couple_with_heart.png /tmp/work/dist/images/basic/couple_with_heart.png
2023/08/01 15:44:45 Optimizing /tmp/work/dist/images/basic/convenience_store.png
Input size: 4073 (3K)
Result size: 4097 (4K). Percentage of original: 100.589%
Preserving original PNG since it was smaller


2023/08/01 15:44:45 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/convenience_store.png.br /tmp/work/dist/images/basic/convenience_store.png
2023/08/01 15:44:45 br /tmp/work/dist/images/basic/convenience_store.png -> /output/images/basic/convenience_store.png.br
2023/08/01 15:44:45 gz /tmp/work/dist/images/basic/convenience_store.png -> /output/images/basic/convenience_store.png.gz
2023/08/01 15:44:45 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/couple.png /tmp/work/dist/images/basic/couple.png
2023/08/01 15:44:46 Optimizing /tmp/work/dist/images/basic/cookie.png
Input size: 8149 (7K)
Result size: 8040 (7K). Percentage of original: 98.662%
Result is smaller


2023/08/01 15:44:46 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/cookie.png.br /tmp/work/dist/images/basic/cookie.png
2023/08/01 15:44:46 br /tmp/work/dist/images/basic/cookie.png -> /output/images/basic/cookie.png.br
2023/08/01 15:44:46 gz /tmp/work/dist/images/basic/cookie.png -> /output/images/basic/cookie.png.gz
2023/08/01 15:44:46 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/couplekiss.png /tmp/work/dist/images/basic/couplekiss.png
2023/08/01 15:44:48 Optimizing /tmp/work/dist/images/basic/copyright.png
Input size: 1579 (1K)
Result size: 1659 (1K). Percentage of original: 105.066%
Preserving original PNG since it was smaller


2023/08/01 15:44:48 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/copyright.png.br /tmp/work/dist/images/basic/copyright.png
2023/08/01 15:44:48 br /tmp/work/dist/images/basic/copyright.png -> /output/images/basic/copyright.png.br
2023/08/01 15:44:48 gz /tmp/work/dist/images/basic/copyright.png -> /output/images/basic/copyright.png.gz
2023/08/01 15:44:48 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/cow.png /tmp/work/dist/images/basic/cow.png
2023/08/01 15:44:51 Optimizing /tmp/work/dist/images/basic/cop.png
Input size: 7141 (6K)
Result size: 7175 (7K). Percentage of original: 100.476%
Preserving original PNG since it was smaller


2023/08/01 15:44:51 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/cop.png.br /tmp/work/dist/images/basic/cop.png
2023/08/01 15:44:51 Optimizing /tmp/work/dist/images/basic/construction.png
Input size: 3700 (3K)
Result size: 3703 (3K). Percentage of original: 100.081%
Preserving original PNG since it was smaller


2023/08/01 15:44:51 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/construction.png.br /tmp/work/dist/images/basic/construction.png
2023/08/01 15:44:52 br /tmp/work/dist/images/basic/construction.png -> /output/images/basic/construction.png.br
2023/08/01 15:44:52 gz /tmp/work/dist/images/basic/construction.png -> /output/images/basic/construction.png.gz
2023/08/01 15:44:52 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/cow2.png /tmp/work/dist/images/basic/cow2.png
2023/08/01 15:44:52 br /tmp/work/dist/images/basic/cop.png -> /output/images/basic/cop.png.br
2023/08/01 15:44:52 gz /tmp/work/dist/images/basic/cop.png -> /output/images/basic/cop.png.gz
2023/08/01 15:44:52 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/credit_card.png /tmp/work/dist/images/basic/credit_card.png
2023/08/01 15:44:54 Optimizing /tmp/work/dist/images/basic/couple_with_heart.png
Input size: 7370 (7K)
Result size: 7256 (7K). Percentage of original: 98.453%
Result is smaller


2023/08/01 15:44:54 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/couple_with_heart.png.br /tmp/work/dist/images/basic/couple_with_heart.png
2023/08/01 15:44:54 br /tmp/work/dist/images/basic/couple_with_heart.png -> /output/images/basic/couple_with_heart.png.br
2023/08/01 15:44:54 gz /tmp/work/dist/images/basic/couple_with_heart.png -> /output/images/basic/couple_with_heart.png.gz
2023/08/01 15:44:54 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/crescent_moon.png /tmp/work/dist/images/basic/crescent_moon.png
2023/08/01 15:44:55 Optimizing /tmp/work/dist/images/basic/couple.png
Input size: 7615 (7K)
Result size: 7674 (7K). Percentage of original: 100.775%
Preserving original PNG since it was smaller


2023/08/01 15:44:55 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/couple.png.br /tmp/work/dist/images/basic/couple.png
2023/08/01 15:44:55 br /tmp/work/dist/images/basic/couple.png -> /output/images/basic/couple.png.br
2023/08/01 15:44:55 gz /tmp/work/dist/images/basic/couple.png -> /output/images/basic/couple.png.gz
2023/08/01 15:44:55 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/crocodile.png /tmp/work/dist/images/basic/crocodile.png
2023/08/01 15:44:56 Optimizing /tmp/work/dist/images/basic/couplekiss.png
Input size: 7219 (7K)
Result size: 7167 (6K). Percentage of original: 99.280%
Result is smaller


2023/08/01 15:44:56 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/couplekiss.png.br /tmp/work/dist/images/basic/couplekiss.png
2023/08/01 15:44:56 Optimizing /tmp/work/dist/images/basic/corn.png
Input size: 6694 (6K)
Result size: 6763 (6K). Percentage of original: 101.031%
Preserving original PNG since it was smaller


2023/08/01 15:44:56 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/corn.png.br /tmp/work/dist/images/basic/corn.png
2023/08/01 15:44:56 br /tmp/work/dist/images/basic/couplekiss.png -> /output/images/basic/couplekiss.png.br
2023/08/01 15:44:56 gz /tmp/work/dist/images/basic/couplekiss.png -> /output/images/basic/couplekiss.png.gz
2023/08/01 15:44:56 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/crossed_flags.png /tmp/work/dist/images/basic/crossed_flags.png
2023/08/01 15:44:56 br /tmp/work/dist/images/basic/corn.png -> /output/images/basic/corn.png.br
2023/08/01 15:44:56 gz /tmp/work/dist/images/basic/corn.png -> /output/images/basic/corn.png.gz
2023/08/01 15:44:56 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/crown.png /tmp/work/dist/images/basic/crown.png
2023/08/01 15:45:00 Optimizing /tmp/work/dist/images/basic/cool.png
Input size: 4182 (4K)
Result size: 4140 (4K). Percentage of original: 98.996%
Result is smaller


2023/08/01 15:45:00 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/cool.png.br /tmp/work/dist/images/basic/cool.png
2023/08/01 15:45:00 br /tmp/work/dist/images/basic/cool.png -> /output/images/basic/cool.png.br
2023/08/01 15:45:00 gz /tmp/work/dist/images/basic/cool.png -> /output/images/basic/cool.png.gz
2023/08/01 15:45:00 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/cry.png /tmp/work/dist/images/basic/cry.png
2023/08/01 15:45:01 Optimizing /tmp/work/dist/images/basic/cow2.png
Input size: 5303 (5K)
Result size: 5315 (5K). Percentage of original: 100.226%
Preserving original PNG since it was smaller


2023/08/01 15:45:01 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/cow2.png.br /tmp/work/dist/images/basic/cow2.png
2023/08/01 15:45:01 br /tmp/work/dist/images/basic/cow2.png -> /output/images/basic/cow2.png.br
2023/08/01 15:45:01 gz /tmp/work/dist/images/basic/cow2.png -> /output/images/basic/cow2.png.gz
2023/08/01 15:45:01 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/crying_cat_face.png /tmp/work/dist/images/basic/crying_cat_face.png
2023/08/01 15:45:01 Optimizing /tmp/work/dist/images/basic/cow.png
Input size: 5745 (5K)
Result size: 5824 (5K). Percentage of original: 101.375%
Preserving original PNG since it was smaller


2023/08/01 15:45:01 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/cow.png.br /tmp/work/dist/images/basic/cow.png
2023/08/01 15:45:01 br /tmp/work/dist/images/basic/cow.png -> /output/images/basic/cow.png.br
2023/08/01 15:45:01 gz /tmp/work/dist/images/basic/cow.png -> /output/images/basic/cow.png.gz
2023/08/01 15:45:01 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/crystal_ball.png /tmp/work/dist/images/basic/crystal_ball.png
2023/08/01 15:45:04 Optimizing /tmp/work/dist/images/basic/crocodile.png
Input size: 6125 (5K)
Result size: 6243 (6K). Percentage of original: 101.927%
Preserving original PNG since it was smaller


2023/08/01 15:45:04 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/crocodile.png.br /tmp/work/dist/images/basic/crocodile.png
2023/08/01 15:45:04 br /tmp/work/dist/images/basic/crocodile.png -> /output/images/basic/crocodile.png.br
2023/08/01 15:45:04 gz /tmp/work/dist/images/basic/crocodile.png -> /output/images/basic/crocodile.png.gz
2023/08/01 15:45:04 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/cupid.png /tmp/work/dist/images/basic/cupid.png
2023/08/01 15:45:04 Optimizing /tmp/work/dist/images/basic/crescent_moon.png
Input size: 3541 (3K)
Result size: 3543 (3K). Percentage of original: 100.056%
Preserving original PNG since it was smaller


2023/08/01 15:45:04 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/crescent_moon.png.br /tmp/work/dist/images/basic/crescent_moon.png
2023/08/01 15:45:05 Optimizing /tmp/work/dist/images/basic/credit_card.png
Input size: 2648 (2K)
Result size: 2529 (2K). Percentage of original: 95.506%
Result is smaller


2023/08/01 15:45:05 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/credit_card.png.br /tmp/work/dist/images/basic/credit_card.png
2023/08/01 15:45:05 br /tmp/work/dist/images/basic/crescent_moon.png -> /output/images/basic/crescent_moon.png.br
2023/08/01 15:45:05 gz /tmp/work/dist/images/basic/crescent_moon.png -> /output/images/basic/crescent_moon.png.gz
2023/08/01 15:45:05 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/curly_loop.png /tmp/work/dist/images/basic/curly_loop.png
2023/08/01 15:45:05 br /tmp/work/dist/images/basic/credit_card.png -> /output/images/basic/credit_card.png.br
2023/08/01 15:45:05 gz /tmp/work/dist/images/basic/credit_card.png -> /output/images/basic/credit_card.png.gz
2023/08/01 15:45:05 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/currency_exchange.png /tmp/work/dist/images/basic/currency_exchange.png
2023/08/01 15:45:10 Optimizing /tmp/work/dist/images/basic/crystal_ball.png
Input size: 6236 (6K)
Result size: 6199 (6K). Percentage of original: 99.407%
Result is smaller


2023/08/01 15:45:10 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/crystal_ball.png.br /tmp/work/dist/images/basic/crystal_ball.png
2023/08/01 15:45:10 br /tmp/work/dist/images/basic/crystal_ball.png -> /output/images/basic/crystal_ball.png.br
2023/08/01 15:45:10 gz /tmp/work/dist/images/basic/crystal_ball.png -> /output/images/basic/crystal_ball.png.gz
2023/08/01 15:45:10 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/curry.png /tmp/work/dist/images/basic/curry.png
2023/08/01 15:45:10 Optimizing /tmp/work/dist/images/basic/crying_cat_face.png
Input size: 6682 (6K)
Result size: 6741 (6K). Percentage of original: 100.883%
Preserving original PNG since it was smaller


2023/08/01 15:45:10 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/crying_cat_face.png.br /tmp/work/dist/images/basic/crying_cat_face.png
2023/08/01 15:45:10 br /tmp/work/dist/images/basic/crying_cat_face.png -> /output/images/basic/crying_cat_face.png.br
2023/08/01 15:45:10 gz /tmp/work/dist/images/basic/crying_cat_face.png -> /output/images/basic/crying_cat_face.png.gz
2023/08/01 15:45:10 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/custard.png /tmp/work/dist/images/basic/custard.png
2023/08/01 15:45:11 Optimizing /tmp/work/dist/images/basic/currency_exchange.png
Input size: 1959 (1K)
Result size: 2012 (1K). Percentage of original: 102.705%
Preserving original PNG since it was smaller


2023/08/01 15:45:11 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/currency_exchange.png.br /tmp/work/dist/images/basic/currency_exchange.png
2023/08/01 15:45:11 br /tmp/work/dist/images/basic/currency_exchange.png -> /output/images/basic/currency_exchange.png.br
2023/08/01 15:45:11 gz /tmp/work/dist/images/basic/currency_exchange.png -> /output/images/basic/currency_exchange.png.gz
2023/08/01 15:45:11 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/customs.png /tmp/work/dist/images/basic/customs.png
2023/08/01 15:45:13 Optimizing /tmp/work/dist/images/basic/cry.png
Input size: 5699 (5K)
Result size: 5404 (5K). Percentage of original: 94.824%
Result is smaller


2023/08/01 15:45:13 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/cry.png.br /tmp/work/dist/images/basic/cry.png
2023/08/01 15:45:13 Optimizing /tmp/work/dist/images/basic/crown.png
Input size: 5655 (5K)
Result size: 5699 (5K). Percentage of original: 100.778%
Preserving original PNG since it was smaller


2023/08/01 15:45:13 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/crown.png.br /tmp/work/dist/images/basic/crown.png
2023/08/01 15:45:13 br /tmp/work/dist/images/basic/cry.png -> /output/images/basic/cry.png.br
2023/08/01 15:45:13 gz /tmp/work/dist/images/basic/cry.png -> /output/images/basic/cry.png.gz
2023/08/01 15:45:13 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/cyclone.png /tmp/work/dist/images/basic/cyclone.png
2023/08/01 15:45:13 br /tmp/work/dist/images/basic/crown.png -> /output/images/basic/crown.png.br
2023/08/01 15:45:13 gz /tmp/work/dist/images/basic/crown.png -> /output/images/basic/crown.png.gz
2023/08/01 15:45:13 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/dancer.png /tmp/work/dist/images/basic/dancer.png
2023/08/01 15:45:14 Optimizing /tmp/work/dist/images/basic/cupid.png
Input size: 5413 (5K)
Result size: 5452 (5K). Percentage of original: 100.720%
Preserving original PNG since it was smaller


2023/08/01 15:45:14 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/cupid.png.br /tmp/work/dist/images/basic/cupid.png
2023/08/01 15:45:14 br /tmp/work/dist/images/basic/cupid.png -> /output/images/basic/cupid.png.br
2023/08/01 15:45:14 gz /tmp/work/dist/images/basic/cupid.png -> /output/images/basic/cupid.png.gz
2023/08/01 15:45:14 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/dancers.png /tmp/work/dist/images/basic/dancers.png
2023/08/01 15:45:14 Optimizing /tmp/work/dist/images/basic/curly_loop.png
Input size: 1129 (1K)
Result size: 1155 (1K). Percentage of original: 102.303%
Preserving original PNG since it was smaller


2023/08/01 15:45:14 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/curly_loop.png.br /tmp/work/dist/images/basic/curly_loop.png
2023/08/01 15:45:14 br /tmp/work/dist/images/basic/curly_loop.png -> /output/images/basic/curly_loop.png.br
2023/08/01 15:45:14 gz /tmp/work/dist/images/basic/curly_loop.png -> /output/images/basic/curly_loop.png.gz
2023/08/01 15:45:14 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/dango.png /tmp/work/dist/images/basic/dango.png
2023/08/01 15:45:15 Optimizing /tmp/work/dist/images/basic/crossed_flags.png
Input size: 4015 (3K)
Result size: 4065 (3K). Percentage of original: 101.245%
Preserving original PNG since it was smaller


2023/08/01 15:45:15 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/crossed_flags.png.br /tmp/work/dist/images/basic/crossed_flags.png
2023/08/01 15:45:15 br /tmp/work/dist/images/basic/crossed_flags.png -> /output/images/basic/crossed_flags.png.br
2023/08/01 15:45:15 gz /tmp/work/dist/images/basic/crossed_flags.png -> /output/images/basic/crossed_flags.png.gz
2023/08/01 15:45:15 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/dart.png /tmp/work/dist/images/basic/dart.png
2023/08/01 15:45:21 Optimizing /tmp/work/dist/images/basic/custard.png
Input size: 5810 (5K)
Result size: 5681 (5K). Percentage of original: 97.780%
Result is smaller


2023/08/01 15:45:21 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/custard.png.br /tmp/work/dist/images/basic/custard.png
2023/08/01 15:45:21 br /tmp/work/dist/images/basic/custard.png -> /output/images/basic/custard.png.br
2023/08/01 15:45:21 gz /tmp/work/dist/images/basic/custard.png -> /output/images/basic/custard.png.gz
2023/08/01 15:45:21 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/dash.png /tmp/work/dist/images/basic/dash.png
2023/08/01 15:45:22 Optimizing /tmp/work/dist/images/basic/curry.png
Input size: 5336 (5K)
Result size: 5218 (5K). Percentage of original: 97.789%
Result is smaller


2023/08/01 15:45:22 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/curry.png.br /tmp/work/dist/images/basic/curry.png
2023/08/01 15:45:22 br /tmp/work/dist/images/basic/curry.png -> /output/images/basic/curry.png.br
2023/08/01 15:45:22 gz /tmp/work/dist/images/basic/curry.png -> /output/images/basic/curry.png.gz
2023/08/01 15:45:22 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/date.png /tmp/work/dist/images/basic/date.png
2023/08/01 15:45:22 Optimizing /tmp/work/dist/images/basic/dango.png
Input size: 4449 (4K)
Result size: 4555 (4K). Percentage of original: 102.383%
Preserving original PNG since it was smaller


2023/08/01 15:45:22 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/dango.png.br /tmp/work/dist/images/basic/dango.png
2023/08/01 15:45:22 br /tmp/work/dist/images/basic/dango.png -> /output/images/basic/dango.png.br
2023/08/01 15:45:22 gz /tmp/work/dist/images/basic/dango.png -> /output/images/basic/dango.png.gz
2023/08/01 15:45:22 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/de.png /tmp/work/dist/images/basic/de.png
2023/08/01 15:45:25 Optimizing /tmp/work/dist/images/basic/customs.png
Input size: 3899 (3K)
Result size: 3960 (3K). Percentage of original: 101.565%
Preserving original PNG since it was smaller


2023/08/01 15:45:25 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/customs.png.br /tmp/work/dist/images/basic/customs.png
2023/08/01 15:45:25 br /tmp/work/dist/images/basic/customs.png -> /output/images/basic/customs.png.br
2023/08/01 15:45:25 gz /tmp/work/dist/images/basic/customs.png -> /output/images/basic/customs.png.gz
2023/08/01 15:45:25 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/deciduous_tree.png /tmp/work/dist/images/basic/deciduous_tree.png
2023/08/01 15:45:25 Optimizing /tmp/work/dist/images/basic/dancer.png
Input size: 3726 (3K)
Result size: 3679 (3K). Percentage of original: 98.739%
Result is smaller


2023/08/01 15:45:25 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/dancer.png.br /tmp/work/dist/images/basic/dancer.png
2023/08/01 15:45:25 br /tmp/work/dist/images/basic/dancer.png -> /output/images/basic/dancer.png.br
2023/08/01 15:45:25 gz /tmp/work/dist/images/basic/dancer.png -> /output/images/basic/dancer.png.gz
2023/08/01 15:45:25 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/department_store.png /tmp/work/dist/images/basic/department_store.png
2023/08/01 15:45:25 Optimizing /tmp/work/dist/images/basic/cyclone.png
Input size: 4890 (4K)
Result size: 5159 (5K). Percentage of original: 105.501%
Preserving original PNG since it was smaller


2023/08/01 15:45:25 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/cyclone.png.br /tmp/work/dist/images/basic/cyclone.png
2023/08/01 15:45:26 br /tmp/work/dist/images/basic/cyclone.png -> /output/images/basic/cyclone.png.br
2023/08/01 15:45:26 gz /tmp/work/dist/images/basic/cyclone.png -> /output/images/basic/cyclone.png.gz
2023/08/01 15:45:26 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/diamond_shape_with_a_dot_inside.png /tmp/work/dist/images/basic/diamond_shape_with_a_dot_inside.png
2023/08/01 15:45:26 Optimizing /tmp/work/dist/images/basic/dart.png
Input size: 5437 (5K)
Result size: 5453 (5K). Percentage of original: 100.294%
Preserving original PNG since it was smaller


2023/08/01 15:45:26 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/dart.png.br /tmp/work/dist/images/basic/dart.png
2023/08/01 15:45:26 br /tmp/work/dist/images/basic/dart.png -> /output/images/basic/dart.png.br
2023/08/01 15:45:26 gz /tmp/work/dist/images/basic/dart.png -> /output/images/basic/dart.png.gz
2023/08/01 15:45:26 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/diamonds.png /tmp/work/dist/images/basic/diamonds.png
2023/08/01 15:45:31 Optimizing /tmp/work/dist/images/basic/dash.png
Input size: 5448 (5K)
Result size: 5404 (5K). Percentage of original: 99.192%
Result is smaller


2023/08/01 15:45:31 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/dash.png.br /tmp/work/dist/images/basic/dash.png
2023/08/01 15:45:31 br /tmp/work/dist/images/basic/dash.png -> /output/images/basic/dash.png.br
2023/08/01 15:45:31 gz /tmp/work/dist/images/basic/dash.png -> /output/images/basic/dash.png.gz
2023/08/01 15:45:31 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/disappointed_relieved.png /tmp/work/dist/images/basic/disappointed_relieved.png
2023/08/01 15:45:33 Optimizing /tmp/work/dist/images/basic/de.png
Input size: 2640 (2K)
Result size: 2550 (2K). Percentage of original: 96.591%
Result is smaller


2023/08/01 15:45:33 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/de.png.br /tmp/work/dist/images/basic/de.png
2023/08/01 15:45:33 Optimizing /tmp/work/dist/images/basic/department_store.png
Input size: 5159 (5K)
Result size: 5206 (5K). Percentage of original: 100.911%
Preserving original PNG since it was smaller


2023/08/01 15:45:33 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/department_store.png.br /tmp/work/dist/images/basic/department_store.png
2023/08/01 15:45:33 br /tmp/work/dist/images/basic/de.png -> /output/images/basic/de.png.br
2023/08/01 15:45:33 gz /tmp/work/dist/images/basic/de.png -> /output/images/basic/de.png.gz
2023/08/01 15:45:33 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/disappointed.png /tmp/work/dist/images/basic/disappointed.png
2023/08/01 15:45:33 br /tmp/work/dist/images/basic/department_store.png -> /output/images/basic/department_store.png.br
2023/08/01 15:45:33 gz /tmp/work/dist/images/basic/department_store.png -> /output/images/basic/department_store.png.gz
2023/08/01 15:45:33 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/dizzy_face.png /tmp/work/dist/images/basic/dizzy_face.png
2023/08/01 15:45:33 Optimizing /tmp/work/dist/images/basic/deciduous_tree.png
Input size: 7263 (7K)
Result size: 7253 (7K). Percentage of original: 99.862%
Result is smaller


2023/08/01 15:45:33 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/deciduous_tree.png.br /tmp/work/dist/images/basic/deciduous_tree.png
2023/08/01 15:45:33 br /tmp/work/dist/images/basic/deciduous_tree.png -> /output/images/basic/deciduous_tree.png.br
2023/08/01 15:45:33 gz /tmp/work/dist/images/basic/deciduous_tree.png -> /output/images/basic/deciduous_tree.png.gz
2023/08/01 15:45:33 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/dizzy.png /tmp/work/dist/images/basic/dizzy.png
2023/08/01 15:45:34 Optimizing /tmp/work/dist/images/basic/dancers.png
Input size: 7918 (7K)
Result size: 7966 (7K). Percentage of original: 100.606%
Preserving original PNG since it was smaller


2023/08/01 15:45:34 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/dancers.png.br /tmp/work/dist/images/basic/dancers.png
2023/08/01 15:45:34 br /tmp/work/dist/images/basic/dancers.png -> /output/images/basic/dancers.png.br
2023/08/01 15:45:34 gz /tmp/work/dist/images/basic/dancers.png -> /output/images/basic/dancers.png.gz
2023/08/01 15:45:34 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/do_not_litter.png /tmp/work/dist/images/basic/do_not_litter.png
2023/08/01 15:45:39 Optimizing /tmp/work/dist/images/basic/diamonds.png
Input size: 2785 (2K)
Result size: 2714 (2K). Percentage of original: 97.451%
Result is smaller


2023/08/01 15:45:39 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/diamonds.png.br /tmp/work/dist/images/basic/diamonds.png
2023/08/01 15:45:39 br /tmp/work/dist/images/basic/diamonds.png -> /output/images/basic/diamonds.png.br
2023/08/01 15:45:39 gz /tmp/work/dist/images/basic/diamonds.png -> /output/images/basic/diamonds.png.gz
2023/08/01 15:45:39 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/dog.png /tmp/work/dist/images/basic/dog.png
2023/08/01 15:45:39 Optimizing /tmp/work/dist/images/basic/diamond_shape_with_a_dot_inside.png
Input size: 5698 (5K)
Result size: 5597 (5K). Percentage of original: 98.227%
Result is smaller


2023/08/01 15:45:39 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/diamond_shape_with_a_dot_inside.png.br /tmp/work/dist/images/basic/diamond_shape_with_a_dot_inside.png
2023/08/01 15:45:39 br /tmp/work/dist/images/basic/diamond_shape_with_a_dot_inside.png -> /output/images/basic/diamond_shape_with_a_dot_inside.png.br
2023/08/01 15:45:39 gz /tmp/work/dist/images/basic/diamond_shape_with_a_dot_inside.png -> /output/images/basic/diamond_shape_with_a_dot_inside.png.gz
2023/08/01 15:45:39 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/dog2.png /tmp/work/dist/images/basic/dog2.png
2023/08/01 15:45:40 Optimizing /tmp/work/dist/images/basic/date.png
Input size: 2977 (2K)
Result size: 2858 (2K). Percentage of original: 96.003%
Result is smaller


2023/08/01 15:45:40 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/date.png.br /tmp/work/dist/images/basic/date.png
2023/08/01 15:45:40 br /tmp/work/dist/images/basic/date.png -> /output/images/basic/date.png.br
2023/08/01 15:45:40 gz /tmp/work/dist/images/basic/date.png -> /output/images/basic/date.png.gz
2023/08/01 15:45:40 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/dollar.png /tmp/work/dist/images/basic/dollar.png
2023/08/01 15:45:42 Optimizing /tmp/work/dist/images/basic/dizzy.png
Input size: 2990 (2K)
Result size: 3178 (3K). Percentage of original: 106.288%
Preserving original PNG since it was smaller


2023/08/01 15:45:42 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/dizzy.png.br /tmp/work/dist/images/basic/dizzy.png
2023/08/01 15:45:42 br /tmp/work/dist/images/basic/dizzy.png -> /output/images/basic/dizzy.png.br
2023/08/01 15:45:42 gz /tmp/work/dist/images/basic/dizzy.png -> /output/images/basic/dizzy.png.gz
2023/08/01 15:45:42 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/dolls.png /tmp/work/dist/images/basic/dolls.png
2023/08/01 15:45:43 Optimizing /tmp/work/dist/images/basic/disappointed_relieved.png
Input size: 5648 (5K)
Result size: 5412 (5K). Percentage of original: 95.822%
Result is smaller


2023/08/01 15:45:43 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/disappointed_relieved.png.br /tmp/work/dist/images/basic/disappointed_relieved.png
2023/08/01 15:45:43 br /tmp/work/dist/images/basic/disappointed_relieved.png -> /output/images/basic/disappointed_relieved.png.br
2023/08/01 15:45:43 gz /tmp/work/dist/images/basic/disappointed_relieved.png -> /output/images/basic/disappointed_relieved.png.gz
2023/08/01 15:45:43 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/dolphin.png /tmp/work/dist/images/basic/dolphin.png
2023/08/01 15:45:44 Optimizing /tmp/work/dist/images/basic/do_not_litter.png
Input size: 5277 (5K)
Result size: 5310 (5K). Percentage of original: 100.625%
Preserving original PNG since it was smaller


2023/08/01 15:45:44 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/do_not_litter.png.br /tmp/work/dist/images/basic/do_not_litter.png
2023/08/01 15:45:44 br /tmp/work/dist/images/basic/do_not_litter.png -> /output/images/basic/do_not_litter.png.br
2023/08/01 15:45:44 gz /tmp/work/dist/images/basic/do_not_litter.png -> /output/images/basic/do_not_litter.png.gz
2023/08/01 15:45:44 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/donut.png /tmp/work/dist/images/basic/donut.png
2023/08/01 15:45:44 Optimizing /tmp/work/dist/images/basic/dizzy_face.png
Input size: 6278 (6K)
Result size: 6037 (5K). Percentage of original: 96.161%
Result is smaller


2023/08/01 15:45:44 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/dizzy_face.png.br /tmp/work/dist/images/basic/dizzy_face.png
2023/08/01 15:45:44 br /tmp/work/dist/images/basic/dizzy_face.png -> /output/images/basic/dizzy_face.png.br
2023/08/01 15:45:44 gz /tmp/work/dist/images/basic/dizzy_face.png -> /output/images/basic/dizzy_face.png.gz
2023/08/01 15:45:44 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/door.png /tmp/work/dist/images/basic/door.png
2023/08/01 15:45:46 Optimizing /tmp/work/dist/images/basic/dog2.png
Input size: 5931 (5K)
Result size: 5969 (5K). Percentage of original: 100.641%
Preserving original PNG since it was smaller


2023/08/01 15:45:46 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/dog2.png.br /tmp/work/dist/images/basic/dog2.png
2023/08/01 15:45:46 br /tmp/work/dist/images/basic/dog2.png -> /output/images/basic/dog2.png.br
2023/08/01 15:45:46 gz /tmp/work/dist/images/basic/dog2.png -> /output/images/basic/dog2.png.gz
2023/08/01 15:45:46 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/doughnut.png /tmp/work/dist/images/basic/doughnut.png
2023/08/01 15:45:47 Optimizing /tmp/work/dist/images/basic/disappointed.png
Input size: 4764 (4K)
Result size: 4554 (4K). Percentage of original: 95.592%
Result is smaller


2023/08/01 15:45:47 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/disappointed.png.br /tmp/work/dist/images/basic/disappointed.png
2023/08/01 15:45:47 br /tmp/work/dist/images/basic/disappointed.png -> /output/images/basic/disappointed.png.br
2023/08/01 15:45:47 gz /tmp/work/dist/images/basic/disappointed.png -> /output/images/basic/disappointed.png.gz
2023/08/01 15:45:47 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/dragon_face.png /tmp/work/dist/images/basic/dragon_face.png
2023/08/01 15:45:49 Optimizing /tmp/work/dist/images/basic/dollar.png
Input size: 4622 (4K)
Result size: 4553 (4K). Percentage of original: 98.507%
Result is smaller


2023/08/01 15:45:49 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/dollar.png.br /tmp/work/dist/images/basic/dollar.png
2023/08/01 15:45:49 br /tmp/work/dist/images/basic/dollar.png -> /output/images/basic/dollar.png.br
2023/08/01 15:45:49 gz /tmp/work/dist/images/basic/dollar.png -> /output/images/basic/dollar.png.gz
2023/08/01 15:45:49 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/dragon.png /tmp/work/dist/images/basic/dragon.png
2023/08/01 15:45:50 Optimizing /tmp/work/dist/images/basic/dog.png
Input size: 5945 (5K)
Result size: 6015 (5K). Percentage of original: 101.177%
Preserving original PNG since it was smaller


2023/08/01 15:45:50 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/dog.png.br /tmp/work/dist/images/basic/dog.png
2023/08/01 15:45:50 br /tmp/work/dist/images/basic/dog.png -> /output/images/basic/dog.png.br
2023/08/01 15:45:50 gz /tmp/work/dist/images/basic/dog.png -> /output/images/basic/dog.png.gz
2023/08/01 15:45:50 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/dress.png /tmp/work/dist/images/basic/dress.png
2023/08/01 15:45:51 Optimizing /tmp/work/dist/images/basic/dolls.png
Input size: 7138 (6K)
Result size: 7119 (6K). Percentage of original: 99.734%
Result is smaller


2023/08/01 15:45:51 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/dolls.png.br /tmp/work/dist/images/basic/dolls.png
2023/08/01 15:45:51 br /tmp/work/dist/images/basic/dolls.png -> /output/images/basic/dolls.png.br
2023/08/01 15:45:51 gz /tmp/work/dist/images/basic/dolls.png -> /output/images/basic/dolls.png.gz
2023/08/01 15:45:51 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/dromedary_camel.png /tmp/work/dist/images/basic/dromedary_camel.png
2023/08/01 15:45:51 Optimizing /tmp/work/dist/images/basic/donut.png
Input size: 5209 (5K)
Result size: 5120 (5K). Percentage of original: 98.291%
Result is smaller


2023/08/01 15:45:51 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/donut.png.br /tmp/work/dist/images/basic/donut.png
2023/08/01 15:45:52 br /tmp/work/dist/images/basic/donut.png -> /output/images/basic/donut.png.br
2023/08/01 15:45:52 gz /tmp/work/dist/images/basic/donut.png -> /output/images/basic/donut.png.gz
2023/08/01 15:45:52 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/droplet.png /tmp/work/dist/images/basic/droplet.png
2023/08/01 15:45:53 Optimizing /tmp/work/dist/images/basic/dolphin.png
Input size: 4343 (4K)
Result size: 4378 (4K). Percentage of original: 100.806%
Preserving original PNG since it was smaller


2023/08/01 15:45:53 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/dolphin.png.br /tmp/work/dist/images/basic/dolphin.png
2023/08/01 15:45:53 br /tmp/work/dist/images/basic/dolphin.png -> /output/images/basic/dolphin.png.br
2023/08/01 15:45:53 gz /tmp/work/dist/images/basic/dolphin.png -> /output/images/basic/dolphin.png.gz
2023/08/01 15:45:53 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/dvd.png /tmp/work/dist/images/basic/dvd.png
2023/08/01 15:45:55 Optimizing /tmp/work/dist/images/basic/door.png
Input size: 3310 (3K)
Result size: 3321 (3K). Percentage of original: 100.332%
Preserving original PNG since it was smaller


2023/08/01 15:45:55 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/door.png.br /tmp/work/dist/images/basic/door.png
2023/08/01 15:45:55 br /tmp/work/dist/images/basic/door.png -> /output/images/basic/door.png.br
2023/08/01 15:45:55 gz /tmp/work/dist/images/basic/door.png -> /output/images/basic/door.png.gz
2023/08/01 15:45:55 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/e-mail.png /tmp/work/dist/images/basic/e-mail.png
2023/08/01 15:45:55 Optimizing /tmp/work/dist/images/basic/dragon_face.png
Input size: 6737 (6K)
Result size: 6771 (6K). Percentage of original: 100.505%
Preserving original PNG since it was smaller


2023/08/01 15:45:55 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/dragon_face.png.br /tmp/work/dist/images/basic/dragon_face.png
2023/08/01 15:45:55 br /tmp/work/dist/images/basic/dragon_face.png -> /output/images/basic/dragon_face.png.br
2023/08/01 15:45:55 gz /tmp/work/dist/images/basic/dragon_face.png -> /output/images/basic/dragon_face.png.gz
2023/08/01 15:45:55 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/ear_of_rice.png /tmp/work/dist/images/basic/ear_of_rice.png
2023/08/01 15:45:55 Optimizing /tmp/work/dist/images/basic/doughnut.png
Input size: 5209 (5K)
Result size: 5120 (5K). Percentage of original: 98.291%
Result is smaller


2023/08/01 15:45:55 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/doughnut.png.br /tmp/work/dist/images/basic/doughnut.png
2023/08/01 15:45:55 br /tmp/work/dist/images/basic/doughnut.png -> /output/images/basic/doughnut.png.br
2023/08/01 15:45:55 gz /tmp/work/dist/images/basic/doughnut.png -> /output/images/basic/doughnut.png.gz
2023/08/01 15:45:55 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/ear.png /tmp/work/dist/images/basic/ear.png
2023/08/01 15:45:57 Optimizing /tmp/work/dist/images/basic/dragon.png
Input size: 7749 (7K)
Result size: 7868 (7K). Percentage of original: 101.536%
Preserving original PNG since it was smaller


2023/08/01 15:45:57 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/dragon.png.br /tmp/work/dist/images/basic/dragon.png
2023/08/01 15:45:57 br /tmp/work/dist/images/basic/dragon.png -> /output/images/basic/dragon.png.br
2023/08/01 15:45:57 gz /tmp/work/dist/images/basic/dragon.png -> /output/images/basic/dragon.png.gz
2023/08/01 15:45:57 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/earth_africa.png /tmp/work/dist/images/basic/earth_africa.png
2023/08/01 15:46:01 Optimizing /tmp/work/dist/images/basic/dress.png
Input size: 3631 (3K)
Result size: 3748 (3K). Percentage of original: 103.222%
Preserving original PNG since it was smaller


2023/08/01 15:46:01 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/dress.png.br /tmp/work/dist/images/basic/dress.png
2023/08/01 15:46:01 br /tmp/work/dist/images/basic/dress.png -> /output/images/basic/dress.png.br
2023/08/01 15:46:01 gz /tmp/work/dist/images/basic/dress.png -> /output/images/basic/dress.png.gz
2023/08/01 15:46:01 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/earth_americas.png /tmp/work/dist/images/basic/earth_americas.png
2023/08/01 15:46:01 Optimizing /tmp/work/dist/images/basic/dromedary_camel.png
Input size: 5139 (5K)
Result size: 5306 (5K). Percentage of original: 103.250%
Preserving original PNG since it was smaller


2023/08/01 15:46:01 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/dromedary_camel.png.br /tmp/work/dist/images/basic/dromedary_camel.png
2023/08/01 15:46:01 br /tmp/work/dist/images/basic/dromedary_camel.png -> /output/images/basic/dromedary_camel.png.br
2023/08/01 15:46:01 gz /tmp/work/dist/images/basic/dromedary_camel.png -> /output/images/basic/dromedary_camel.png.gz
2023/08/01 15:46:01 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/earth_asia.png /tmp/work/dist/images/basic/earth_asia.png
2023/08/01 15:46:02 Optimizing /tmp/work/dist/images/basic/dvd.png
Input size: 6993 (6K)
Result size: 6844 (6K). Percentage of original: 97.869%
Result is smaller


2023/08/01 15:46:02 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/dvd.png.br /tmp/work/dist/images/basic/dvd.png
2023/08/01 15:46:02 br /tmp/work/dist/images/basic/dvd.png -> /output/images/basic/dvd.png.br
2023/08/01 15:46:02 gz /tmp/work/dist/images/basic/dvd.png -> /output/images/basic/dvd.png.gz
2023/08/01 15:46:02 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/egg.png /tmp/work/dist/images/basic/egg.png
2023/08/01 15:46:04 Optimizing /tmp/work/dist/images/basic/e-mail.png
Input size: 2128 (2K)
Result size: 2090 (2K). Percentage of original: 98.214%
Result is smaller


2023/08/01 15:46:04 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/e-mail.png.br /tmp/work/dist/images/basic/e-mail.png
2023/08/01 15:46:04 Optimizing /tmp/work/dist/images/basic/droplet.png
Input size: 3139 (3K)
Result size: 3284 (3K). Percentage of original: 104.619%
Preserving original PNG since it was smaller


2023/08/01 15:46:04 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/droplet.png.br /tmp/work/dist/images/basic/droplet.png
2023/08/01 15:46:04 br /tmp/work/dist/images/basic/e-mail.png -> /output/images/basic/e-mail.png.br
2023/08/01 15:46:04 gz /tmp/work/dist/images/basic/e-mail.png -> /output/images/basic/e-mail.png.gz
2023/08/01 15:46:04 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/eggplant.png /tmp/work/dist/images/basic/eggplant.png
2023/08/01 15:46:04 br /tmp/work/dist/images/basic/droplet.png -> /output/images/basic/droplet.png.br
2023/08/01 15:46:04 gz /tmp/work/dist/images/basic/droplet.png -> /output/images/basic/droplet.png.gz
2023/08/01 15:46:04 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/eight_pointed_black_star.png /tmp/work/dist/images/basic/eight_pointed_black_star.png
2023/08/01 15:46:05 Optimizing /tmp/work/dist/images/basic/ear_of_rice.png
Input size: 4758 (4K)
Result size: 5018 (4K). Percentage of original: 105.464%
Preserving original PNG since it was smaller


2023/08/01 15:46:05 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/ear_of_rice.png.br /tmp/work/dist/images/basic/ear_of_rice.png
2023/08/01 15:46:05 br /tmp/work/dist/images/basic/ear_of_rice.png -> /output/images/basic/ear_of_rice.png.br
2023/08/01 15:46:05 gz /tmp/work/dist/images/basic/ear_of_rice.png -> /output/images/basic/ear_of_rice.png.gz
2023/08/01 15:46:05 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/eight_spoked_asterisk.png /tmp/work/dist/images/basic/eight_spoked_asterisk.png
2023/08/01 15:46:07 Optimizing /tmp/work/dist/images/basic/earth_africa.png
Input size: 7164 (6K)
Result size: 7209 (7K). Percentage of original: 100.628%
Preserving original PNG since it was smaller


2023/08/01 15:46:07 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/earth_africa.png.br /tmp/work/dist/images/basic/earth_africa.png
2023/08/01 15:46:07 br /tmp/work/dist/images/basic/earth_africa.png -> /output/images/basic/earth_africa.png.br
2023/08/01 15:46:07 gz /tmp/work/dist/images/basic/earth_africa.png -> /output/images/basic/earth_africa.png.gz
2023/08/01 15:46:07 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/eight.png /tmp/work/dist/images/basic/eight.png
2023/08/01 15:46:08 Optimizing /tmp/work/dist/images/basic/ear.png
Input size: 4335 (4K)
Result size: 4335 (4K). Percentage of original: 100.000%
Result has exact same size


2023/08/01 15:46:08 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/ear.png.br /tmp/work/dist/images/basic/ear.png
2023/08/01 15:46:08 br /tmp/work/dist/images/basic/ear.png -> /output/images/basic/ear.png.br
2023/08/01 15:46:08 gz /tmp/work/dist/images/basic/ear.png -> /output/images/basic/ear.png.gz
2023/08/01 15:46:08 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/electric_plug.png /tmp/work/dist/images/basic/electric_plug.png
2023/08/01 15:46:10 Optimizing /tmp/work/dist/images/basic/earth_asia.png
Input size: 7303 (7K)
Result size: 7389 (7K). Percentage of original: 101.178%
Preserving original PNG since it was smaller


2023/08/01 15:46:10 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/earth_asia.png.br /tmp/work/dist/images/basic/earth_asia.png
2023/08/01 15:46:11 br /tmp/work/dist/images/basic/earth_asia.png -> /output/images/basic/earth_asia.png.br
2023/08/01 15:46:11 gz /tmp/work/dist/images/basic/earth_asia.png -> /output/images/basic/earth_asia.png.gz
2023/08/01 15:46:11 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/elephant.png /tmp/work/dist/images/basic/elephant.png
2023/08/01 15:46:11 Optimizing /tmp/work/dist/images/basic/earth_americas.png
Input size: 7039 (6K)
Result size: 7098 (6K). Percentage of original: 100.838%
Preserving original PNG since it was smaller


2023/08/01 15:46:11 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/earth_americas.png.br /tmp/work/dist/images/basic/earth_americas.png
2023/08/01 15:46:11 br /tmp/work/dist/images/basic/earth_americas.png -> /output/images/basic/earth_americas.png.br
2023/08/01 15:46:11 gz /tmp/work/dist/images/basic/earth_americas.png -> /output/images/basic/earth_americas.png.gz
2023/08/01 15:46:11 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/email.png /tmp/work/dist/images/basic/email.png
2023/08/01 15:46:13 Optimizing /tmp/work/dist/images/basic/egg.png
Input size: 5211 (5K)
Result size: 5293 (5K). Percentage of original: 101.574%
Preserving original PNG since it was smaller


2023/08/01 15:46:13 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/egg.png.br /tmp/work/dist/images/basic/egg.png
2023/08/01 15:46:13 br /tmp/work/dist/images/basic/egg.png -> /output/images/basic/egg.png.br
2023/08/01 15:46:13 gz /tmp/work/dist/images/basic/egg.png -> /output/images/basic/egg.png.gz
2023/08/01 15:46:13 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/end.png /tmp/work/dist/images/basic/end.png
2023/08/01 15:46:15 Optimizing /tmp/work/dist/images/basic/eggplant.png
Input size: 4672 (4K)
Result size: 4879 (4K). Percentage of original: 104.431%
Preserving original PNG since it was smaller


2023/08/01 15:46:15 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/eggplant.png.br /tmp/work/dist/images/basic/eggplant.png
2023/08/01 15:46:15 br /tmp/work/dist/images/basic/eggplant.png -> /output/images/basic/eggplant.png.br
2023/08/01 15:46:15 gz /tmp/work/dist/images/basic/eggplant.png -> /output/images/basic/eggplant.png.gz
2023/08/01 15:46:15 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/envelope.png /tmp/work/dist/images/basic/envelope.png
2023/08/01 15:46:16 Optimizing /tmp/work/dist/images/basic/eight_spoked_asterisk.png
Input size: 4012 (3K)
Result size: 4065 (3K). Percentage of original: 101.321%
Preserving original PNG since it was smaller


2023/08/01 15:46:16 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/eight_spoked_asterisk.png.br /tmp/work/dist/images/basic/eight_spoked_asterisk.png
2023/08/01 15:46:16 br /tmp/work/dist/images/basic/eight_spoked_asterisk.png -> /output/images/basic/eight_spoked_asterisk.png.br
2023/08/01 15:46:16 gz /tmp/work/dist/images/basic/eight_spoked_asterisk.png -> /output/images/basic/eight_spoked_asterisk.png.gz
2023/08/01 15:46:16 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/es.png /tmp/work/dist/images/basic/es.png
2023/08/01 15:46:17 Optimizing /tmp/work/dist/images/basic/electric_plug.png
Input size: 2758 (2K)
Result size: 2917 (2K). Percentage of original: 105.765%
Preserving original PNG since it was smaller


2023/08/01 15:46:17 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/electric_plug.png.br /tmp/work/dist/images/basic/electric_plug.png
2023/08/01 15:46:17 br /tmp/work/dist/images/basic/electric_plug.png -> /output/images/basic/electric_plug.png.br
2023/08/01 15:46:17 gz /tmp/work/dist/images/basic/electric_plug.png -> /output/images/basic/electric_plug.png.gz
2023/08/01 15:46:17 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/euro.png /tmp/work/dist/images/basic/euro.png
2023/08/01 15:46:19 Optimizing /tmp/work/dist/images/basic/eight.png
Input size: 3844 (3K)
Result size: 3771 (3K). Percentage of original: 98.101%
Result is smaller


2023/08/01 15:46:19 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/eight.png.br /tmp/work/dist/images/basic/eight.png
2023/08/01 15:46:19 br /tmp/work/dist/images/basic/eight.png -> /output/images/basic/eight.png.br
2023/08/01 15:46:19 gz /tmp/work/dist/images/basic/eight.png -> /output/images/basic/eight.png.gz
2023/08/01 15:46:19 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/european_castle.png /tmp/work/dist/images/basic/european_castle.png
2023/08/01 15:46:20 Optimizing /tmp/work/dist/images/basic/eight_pointed_black_star.png
Input size: 3271 (3K)
Result size: 3098 (3K). Percentage of original: 94.711%
Result is smaller


2023/08/01 15:46:20 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/eight_pointed_black_star.png.br /tmp/work/dist/images/basic/eight_pointed_black_star.png
2023/08/01 15:46:20 br /tmp/work/dist/images/basic/eight_pointed_black_star.png -> /output/images/basic/eight_pointed_black_star.png.br
2023/08/01 15:46:20 gz /tmp/work/dist/images/basic/eight_pointed_black_star.png -> /output/images/basic/eight_pointed_black_star.png.gz
2023/08/01 15:46:20 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/european_post_office.png /tmp/work/dist/images/basic/european_post_office.png
2023/08/01 15:46:21 Optimizing /tmp/work/dist/images/basic/elephant.png
Input size: 5086 (4K)
Result size: 5154 (5K). Percentage of original: 101.337%
Preserving original PNG since it was smaller


2023/08/01 15:46:21 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/elephant.png.br /tmp/work/dist/images/basic/elephant.png
2023/08/01 15:46:21 br /tmp/work/dist/images/basic/elephant.png -> /output/images/basic/elephant.png.br
2023/08/01 15:46:21 gz /tmp/work/dist/images/basic/elephant.png -> /output/images/basic/elephant.png.gz
2023/08/01 15:46:21 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/evergreen_tree.png /tmp/work/dist/images/basic/evergreen_tree.png
2023/08/01 15:46:25 Optimizing /tmp/work/dist/images/basic/es.png
Input size: 4302 (4K)
Result size: 4230 (4K). Percentage of original: 98.326%
Result is smaller


2023/08/01 15:46:25 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/es.png.br /tmp/work/dist/images/basic/es.png
2023/08/01 15:46:25 br /tmp/work/dist/images/basic/es.png -> /output/images/basic/es.png.br
2023/08/01 15:46:25 gz /tmp/work/dist/images/basic/es.png -> /output/images/basic/es.png.gz
2023/08/01 15:46:25 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/exclamation.png /tmp/work/dist/images/basic/exclamation.png
2023/08/01 15:46:26 Optimizing /tmp/work/dist/images/basic/euro.png
Input size: 3942 (3K)
Result size: 3876 (3K). Percentage of original: 98.326%
Result is smaller


2023/08/01 15:46:26 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/euro.png.br /tmp/work/dist/images/basic/euro.png
2023/08/01 15:46:26 br /tmp/work/dist/images/basic/euro.png -> /output/images/basic/euro.png.br
2023/08/01 15:46:26 gz /tmp/work/dist/images/basic/euro.png -> /output/images/basic/euro.png.gz
2023/08/01 15:46:26 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/expressionless.png /tmp/work/dist/images/basic/expressionless.png
2023/08/01 15:46:28 Optimizing /tmp/work/dist/images/basic/evergreen_tree.png
Input size: 4924 (4K)
Result size: 4999 (4K). Percentage of original: 101.523%
Preserving original PNG since it was smaller


2023/08/01 15:46:28 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/evergreen_tree.png.br /tmp/work/dist/images/basic/evergreen_tree.png
2023/08/01 15:46:28 br /tmp/work/dist/images/basic/evergreen_tree.png -> /output/images/basic/evergreen_tree.png.br
2023/08/01 15:46:28 gz /tmp/work/dist/images/basic/evergreen_tree.png -> /output/images/basic/evergreen_tree.png.gz
2023/08/01 15:46:28 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/eyeglasses.png /tmp/work/dist/images/basic/eyeglasses.png
2023/08/01 15:46:32 Optimizing /tmp/work/dist/images/basic/european_post_office.png
Input size: 4816 (4K)
Result size: 4884 (4K). Percentage of original: 101.412%
Preserving original PNG since it was smaller


2023/08/01 15:46:32 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/european_post_office.png.br /tmp/work/dist/images/basic/european_post_office.png
2023/08/01 15:46:32 br /tmp/work/dist/images/basic/european_post_office.png -> /output/images/basic/european_post_office.png.br
2023/08/01 15:46:32 gz /tmp/work/dist/images/basic/european_post_office.png -> /output/images/basic/european_post_office.png.gz
2023/08/01 15:46:32 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/eyes.png /tmp/work/dist/images/basic/eyes.png
2023/08/01 15:46:33 Optimizing /tmp/work/dist/images/basic/european_castle.png
Input size: 5427 (5K)
Result size: 5301 (5K). Percentage of original: 97.678%
Result is smaller


2023/08/01 15:46:33 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/european_castle.png.br /tmp/work/dist/images/basic/european_castle.png
2023/08/01 15:46:33 br /tmp/work/dist/images/basic/european_castle.png -> /output/images/basic/european_castle.png.br
2023/08/01 15:46:33 gz /tmp/work/dist/images/basic/european_castle.png -> /output/images/basic/european_castle.png.gz
2023/08/01 15:46:33 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/facepunch.png /tmp/work/dist/images/basic/facepunch.png
2023/08/01 15:46:36 Optimizing /tmp/work/dist/images/basic/email.png
Input size: 2697 (2K)
Result size: 2618 (2K). Percentage of original: 97.071%
Result is smaller


2023/08/01 15:46:36 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/email.png.br /tmp/work/dist/images/basic/email.png
2023/08/01 15:46:36 br /tmp/work/dist/images/basic/email.png -> /output/images/basic/email.png.br
2023/08/01 15:46:36 gz /tmp/work/dist/images/basic/email.png -> /output/images/basic/email.png.gz
2023/08/01 15:46:36 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/factory.png /tmp/work/dist/images/basic/factory.png
2023/08/01 15:46:36 Optimizing /tmp/work/dist/images/basic/expressionless.png
Input size: 4022 (3K)
Result size: 3967 (3K). Percentage of original: 98.633%
Result is smaller


2023/08/01 15:46:36 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/expressionless.png.br /tmp/work/dist/images/basic/expressionless.png
2023/08/01 15:46:36 br /tmp/work/dist/images/basic/expressionless.png -> /output/images/basic/expressionless.png.br
2023/08/01 15:46:36 gz /tmp/work/dist/images/basic/expressionless.png -> /output/images/basic/expressionless.png.gz
2023/08/01 15:46:36 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/fallen_leaf.png /tmp/work/dist/images/basic/fallen_leaf.png
2023/08/01 15:46:41 Optimizing /tmp/work/dist/images/basic/eyeglasses.png
Input size: 4929 (4K)
Result size: 4953 (4K). Percentage of original: 100.487%
Preserving original PNG since it was smaller


2023/08/01 15:46:41 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/eyeglasses.png.br /tmp/work/dist/images/basic/eyeglasses.png
2023/08/01 15:46:41 br /tmp/work/dist/images/basic/eyeglasses.png -> /output/images/basic/eyeglasses.png.br
2023/08/01 15:46:41 gz /tmp/work/dist/images/basic/eyeglasses.png -> /output/images/basic/eyeglasses.png.gz
2023/08/01 15:46:41 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/family.png /tmp/work/dist/images/basic/family.png
2023/08/01 15:46:43 Optimizing /tmp/work/dist/images/basic/facepunch.png
Input size: 4833 (4K)
Result size: 4840 (4K). Percentage of original: 100.145%
Preserving original PNG since it was smaller


2023/08/01 15:46:43 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/facepunch.png.br /tmp/work/dist/images/basic/facepunch.png
2023/08/01 15:46:43 br /tmp/work/dist/images/basic/facepunch.png -> /output/images/basic/facepunch.png.br
2023/08/01 15:46:43 gz /tmp/work/dist/images/basic/facepunch.png -> /output/images/basic/facepunch.png.gz
2023/08/01 15:46:43 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/fast_forward.png /tmp/work/dist/images/basic/fast_forward.png
2023/08/01 15:46:45 Optimizing /tmp/work/dist/images/basic/fallen_leaf.png
Input size: 4890 (4K)
Result size: 5030 (4K). Percentage of original: 102.863%
Preserving original PNG since it was smaller


2023/08/01 15:46:45 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/fallen_leaf.png.br /tmp/work/dist/images/basic/fallen_leaf.png
2023/08/01 15:46:45 br /tmp/work/dist/images/basic/fallen_leaf.png -> /output/images/basic/fallen_leaf.png.br
2023/08/01 15:46:45 gz /tmp/work/dist/images/basic/fallen_leaf.png -> /output/images/basic/fallen_leaf.png.gz
2023/08/01 15:46:45 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/fax.png /tmp/work/dist/images/basic/fax.png
2023/08/01 15:46:49 Optimizing /tmp/work/dist/images/basic/exclamation.png
Input size: 1175 (1K)
Result size: 1108 (1K). Percentage of original: 94.298%
Result is smaller


2023/08/01 15:46:49 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/exclamation.png.br /tmp/work/dist/images/basic/exclamation.png
2023/08/01 15:46:49 br /tmp/work/dist/images/basic/exclamation.png -> /output/images/basic/exclamation.png.br
2023/08/01 15:46:49 gz /tmp/work/dist/images/basic/exclamation.png -> /output/images/basic/exclamation.png.gz
2023/08/01 15:46:49 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/fearful.png /tmp/work/dist/images/basic/fearful.png
2023/08/01 15:46:53 Optimizing /tmp/work/dist/images/basic/family.png
Input size: 7211 (7K)
Result size: 7178 (7K). Percentage of original: 99.542%
Result is smaller


2023/08/01 15:46:53 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/family.png.br /tmp/work/dist/images/basic/family.png
2023/08/01 15:46:53 br /tmp/work/dist/images/basic/family.png -> /output/images/basic/family.png.br
2023/08/01 15:46:54 gz /tmp/work/dist/images/basic/family.png -> /output/images/basic/family.png.gz
2023/08/01 15:46:54 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/feelsgood.png /tmp/work/dist/images/basic/feelsgood.png
2023/08/01 15:46:58 Optimizing /tmp/work/dist/images/basic/eyes.png
Input size: 4367 (4K)
Result size: 4317 (4K). Percentage of original: 98.855%
Result is smaller


2023/08/01 15:46:58 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/eyes.png.br /tmp/work/dist/images/basic/eyes.png
2023/08/01 15:46:59 br /tmp/work/dist/images/basic/eyes.png -> /output/images/basic/eyes.png.br
2023/08/01 15:46:59 gz /tmp/work/dist/images/basic/eyes.png -> /output/images/basic/eyes.png.gz
2023/08/01 15:46:59 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/feet.png /tmp/work/dist/images/basic/feet.png
2023/08/01 15:46:59 Optimizing /tmp/work/dist/images/basic/end.png
Input size: 1134 (1K)
Result size: 1446 (1K). Percentage of original: 127.513%
Preserving original PNG since it was smaller


2023/08/01 15:46:59 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/end.png.br /tmp/work/dist/images/basic/end.png
2023/08/01 15:46:59 br /tmp/work/dist/images/basic/end.png -> /output/images/basic/end.png.br
2023/08/01 15:46:59 gz /tmp/work/dist/images/basic/end.png -> /output/images/basic/end.png.gz
2023/08/01 15:46:59 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/ferris_wheel.png /tmp/work/dist/images/basic/ferris_wheel.png
2023/08/01 15:46:59 Optimizing /tmp/work/dist/images/basic/factory.png
Input size: 5558 (5K)
Result size: 5443 (5K). Percentage of original: 97.931%
Result is smaller


2023/08/01 15:46:59 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/factory.png.br /tmp/work/dist/images/basic/factory.png
2023/08/01 15:46:59 br /tmp/work/dist/images/basic/factory.png -> /output/images/basic/factory.png.br
2023/08/01 15:46:59 gz /tmp/work/dist/images/basic/factory.png -> /output/images/basic/factory.png.gz
2023/08/01 15:46:59 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/file_folder.png /tmp/work/dist/images/basic/file_folder.png
2023/08/01 15:47:01 Optimizing /tmp/work/dist/images/basic/fearful.png
Input size: 5600 (5K)
Result size: 5379 (5K). Percentage of original: 96.054%
Result is smaller


2023/08/01 15:47:01 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/fearful.png.br /tmp/work/dist/images/basic/fearful.png
2023/08/01 15:47:01 br /tmp/work/dist/images/basic/fearful.png -> /output/images/basic/fearful.png.br
2023/08/01 15:47:01 gz /tmp/work/dist/images/basic/fearful.png -> /output/images/basic/fearful.png.gz
2023/08/01 15:47:01 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/finnadie.png /tmp/work/dist/images/basic/finnadie.png
2023/08/01 15:47:03 Optimizing /tmp/work/dist/images/basic/fast_forward.png
Input size: 3105 (3K)
Result size: 2972 (2K). Percentage of original: 95.717%
Result is smaller


2023/08/01 15:47:03 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/fast_forward.png.br /tmp/work/dist/images/basic/fast_forward.png
2023/08/01 15:47:03 br /tmp/work/dist/images/basic/fast_forward.png -> /output/images/basic/fast_forward.png.br
2023/08/01 15:47:03 gz /tmp/work/dist/images/basic/fast_forward.png -> /output/images/basic/fast_forward.png.gz
2023/08/01 15:47:03 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/fire_engine.png /tmp/work/dist/images/basic/fire_engine.png
2023/08/01 15:47:05 Optimizing /tmp/work/dist/images/basic/envelope.png
Input size: 1655 (1K)
Result size: 1771 (1K). Percentage of original: 107.009%
Preserving original PNG since it was smaller


2023/08/01 15:47:05 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/envelope.png.br /tmp/work/dist/images/basic/envelope.png
2023/08/01 15:47:05 br /tmp/work/dist/images/basic/envelope.png -> /output/images/basic/envelope.png.br
2023/08/01 15:47:05 gz /tmp/work/dist/images/basic/envelope.png -> /output/images/basic/envelope.png.gz
2023/08/01 15:47:05 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/fire.png /tmp/work/dist/images/basic/fire.png
2023/08/01 15:47:05 Optimizing /tmp/work/dist/images/basic/fax.png
Input size: 4650 (4K)
Result size: 4693 (4K). Percentage of original: 100.925%
Preserving original PNG since it was smaller


2023/08/01 15:47:05 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/fax.png.br /tmp/work/dist/images/basic/fax.png
2023/08/01 15:47:05 br /tmp/work/dist/images/basic/fax.png -> /output/images/basic/fax.png.br
2023/08/01 15:47:05 gz /tmp/work/dist/images/basic/fax.png -> /output/images/basic/fax.png.gz
2023/08/01 15:47:05 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/fireworks.png /tmp/work/dist/images/basic/fireworks.png
2023/08/01 15:47:08 Optimizing /tmp/work/dist/images/basic/feet.png
Input size: 1529 (1K)
Result size: 1652 (1K). Percentage of original: 108.044%
Preserving original PNG since it was smaller


2023/08/01 15:47:08 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/feet.png.br /tmp/work/dist/images/basic/feet.png
2023/08/01 15:47:08 br /tmp/work/dist/images/basic/feet.png -> /output/images/basic/feet.png.br
2023/08/01 15:47:08 gz /tmp/work/dist/images/basic/feet.png -> /output/images/basic/feet.png.gz
2023/08/01 15:47:08 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/first_quarter_moon_with_face.png /tmp/work/dist/images/basic/first_quarter_moon_with_face.png
2023/08/01 15:47:11 Optimizing /tmp/work/dist/images/basic/ferris_wheel.png
Input size: 6213 (6K)
Result size: 6119 (5K). Percentage of original: 98.487%
Result is smaller


2023/08/01 15:47:11 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/ferris_wheel.png.br /tmp/work/dist/images/basic/ferris_wheel.png
2023/08/01 15:47:11 br /tmp/work/dist/images/basic/ferris_wheel.png -> /output/images/basic/ferris_wheel.png.br
2023/08/01 15:47:11 gz /tmp/work/dist/images/basic/ferris_wheel.png -> /output/images/basic/ferris_wheel.png.gz
2023/08/01 15:47:11 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/first_quarter_moon.png /tmp/work/dist/images/basic/first_quarter_moon.png
2023/08/01 15:47:12 Optimizing /tmp/work/dist/images/basic/fire_engine.png
Input size: 4862 (4K)
Result size: 4763 (4K). Percentage of original: 97.964%
Result is smaller


2023/08/01 15:47:12 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/fire_engine.png.br /tmp/work/dist/images/basic/fire_engine.png
2023/08/01 15:47:12 br /tmp/work/dist/images/basic/fire_engine.png -> /output/images/basic/fire_engine.png.br
2023/08/01 15:47:12 gz /tmp/work/dist/images/basic/fire_engine.png -> /output/images/basic/fire_engine.png.gz
2023/08/01 15:47:12 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/fish_cake.png /tmp/work/dist/images/basic/fish_cake.png
2023/08/01 15:47:15 Optimizing /tmp/work/dist/images/basic/fireworks.png
Input size: 6269 (6K)
Result size: 6238 (6K). Percentage of original: 99.506%
Result is smaller


2023/08/01 15:47:15 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/fireworks.png.br /tmp/work/dist/images/basic/fireworks.png
2023/08/01 15:47:15 br /tmp/work/dist/images/basic/fireworks.png -> /output/images/basic/fireworks.png.br
2023/08/01 15:47:15 gz /tmp/work/dist/images/basic/fireworks.png -> /output/images/basic/fireworks.png.gz
2023/08/01 15:47:15 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/fish.png /tmp/work/dist/images/basic/fish.png
2023/08/01 15:47:17 Optimizing /tmp/work/dist/images/basic/first_quarter_moon_with_face.png
Input size: 4280 (4K)
Result size: 4392 (4K). Percentage of original: 102.617%
Preserving original PNG since it was smaller


2023/08/01 15:47:17 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/first_quarter_moon_with_face.png.br /tmp/work/dist/images/basic/first_quarter_moon_with_face.png
2023/08/01 15:47:17 br /tmp/work/dist/images/basic/first_quarter_moon_with_face.png -> /output/images/basic/first_quarter_moon_with_face.png.br
2023/08/01 15:47:17 gz /tmp/work/dist/images/basic/first_quarter_moon_with_face.png -> /output/images/basic/first_quarter_moon_with_face.png.gz
2023/08/01 15:47:17 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/fishing_pole_and_fish.png /tmp/work/dist/images/basic/fishing_pole_and_fish.png
2023/08/01 15:47:19 Optimizing /tmp/work/dist/images/basic/fire.png
Input size: 3886 (3K)
Result size: 3958 (3K). Percentage of original: 101.853%
Preserving original PNG since it was smaller


2023/08/01 15:47:19 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/fire.png.br /tmp/work/dist/images/basic/fire.png
2023/08/01 15:47:19 br /tmp/work/dist/images/basic/fire.png -> /output/images/basic/fire.png.br
2023/08/01 15:47:19 gz /tmp/work/dist/images/basic/fire.png -> /output/images/basic/fire.png.gz
2023/08/01 15:47:19 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/fist.png /tmp/work/dist/images/basic/fist.png
2023/08/01 15:47:20 Optimizing /tmp/work/dist/images/basic/fish_cake.png
Input size: 5818 (5K)
Result size: 5964 (5K). Percentage of original: 102.509%
Preserving original PNG since it was smaller


2023/08/01 15:47:20 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/fish_cake.png.br /tmp/work/dist/images/basic/fish_cake.png
2023/08/01 15:47:20 br /tmp/work/dist/images/basic/fish_cake.png -> /output/images/basic/fish_cake.png.br
2023/08/01 15:47:20 gz /tmp/work/dist/images/basic/fish_cake.png -> /output/images/basic/fish_cake.png.gz
2023/08/01 15:47:20 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/five.png /tmp/work/dist/images/basic/five.png
2023/08/01 15:47:21 Optimizing /tmp/work/dist/images/basic/feelsgood.png
Input size: 1150 (1K)
Result size: 1214 (1K). Percentage of original: 105.565%
Preserving original PNG since it was smaller


2023/08/01 15:47:21 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/feelsgood.png.br /tmp/work/dist/images/basic/feelsgood.png
2023/08/01 15:47:21 br /tmp/work/dist/images/basic/feelsgood.png -> /output/images/basic/feelsgood.png.br
2023/08/01 15:47:21 gz /tmp/work/dist/images/basic/feelsgood.png -> /output/images/basic/feelsgood.png.gz
2023/08/01 15:47:21 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/flags.png /tmp/work/dist/images/basic/flags.png
2023/08/01 15:47:24 Optimizing /tmp/work/dist/images/basic/finnadie.png
Input size: 1186 (1K)
Result size: 1178 (1K). Percentage of original: 99.325%
Result is smaller


2023/08/01 15:47:24 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/finnadie.png.br /tmp/work/dist/images/basic/finnadie.png
2023/08/01 15:47:24 br /tmp/work/dist/images/basic/finnadie.png -> /output/images/basic/finnadie.png.br
2023/08/01 15:47:24 gz /tmp/work/dist/images/basic/finnadie.png -> /output/images/basic/finnadie.png.gz
2023/08/01 15:47:24 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/flashlight.png /tmp/work/dist/images/basic/flashlight.png
2023/08/01 15:47:24 Optimizing /tmp/work/dist/images/basic/file_folder.png
Input size: 4013 (3K)
Result size: 4010 (3K). Percentage of original: 99.925%
Result is smaller


2023/08/01 15:47:24 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/file_folder.png.br /tmp/work/dist/images/basic/file_folder.png
2023/08/01 15:47:25 br /tmp/work/dist/images/basic/file_folder.png -> /output/images/basic/file_folder.png.br
2023/08/01 15:47:25 gz /tmp/work/dist/images/basic/file_folder.png -> /output/images/basic/file_folder.png.gz
2023/08/01 15:47:25 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/floppy_disk.png /tmp/work/dist/images/basic/floppy_disk.png
2023/08/01 15:47:27 Optimizing /tmp/work/dist/images/basic/fishing_pole_and_fish.png
Input size: 4470 (4K)
Result size: 4561 (4K). Percentage of original: 102.036%
Preserving original PNG since it was smaller


2023/08/01 15:47:27 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/fishing_pole_and_fish.png.br /tmp/work/dist/images/basic/fishing_pole_and_fish.png
2023/08/01 15:47:27 br /tmp/work/dist/images/basic/fishing_pole_and_fish.png -> /output/images/basic/fishing_pole_and_fish.png.br
2023/08/01 15:47:27 gz /tmp/work/dist/images/basic/fishing_pole_and_fish.png -> /output/images/basic/fishing_pole_and_fish.png.gz
2023/08/01 15:47:27 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/flower_playing_cards.png /tmp/work/dist/images/basic/flower_playing_cards.png
2023/08/01 15:47:27 Optimizing /tmp/work/dist/images/basic/fish.png
Input size: 4721 (4K)
Result size: 4683 (4K). Percentage of original: 99.195%
Result is smaller


2023/08/01 15:47:27 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/fish.png.br /tmp/work/dist/images/basic/fish.png
2023/08/01 15:47:27 br /tmp/work/dist/images/basic/fish.png -> /output/images/basic/fish.png.br
2023/08/01 15:47:27 gz /tmp/work/dist/images/basic/fish.png -> /output/images/basic/fish.png.gz
2023/08/01 15:47:27 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/flushed.png /tmp/work/dist/images/basic/flushed.png
2023/08/01 15:47:29 Optimizing /tmp/work/dist/images/basic/first_quarter_moon.png
Input size: 5967 (5K)
Result size: 6037 (5K). Percentage of original: 101.173%
Preserving original PNG since it was smaller


2023/08/01 15:47:29 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/first_quarter_moon.png.br /tmp/work/dist/images/basic/first_quarter_moon.png
2023/08/01 15:47:29 br /tmp/work/dist/images/basic/first_quarter_moon.png -> /output/images/basic/first_quarter_moon.png.br
2023/08/01 15:47:29 gz /tmp/work/dist/images/basic/first_quarter_moon.png -> /output/images/basic/first_quarter_moon.png.gz
2023/08/01 15:47:29 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/foggy.png /tmp/work/dist/images/basic/foggy.png
2023/08/01 15:47:31 Optimizing /tmp/work/dist/images/basic/flags.png
Input size: 6124 (5K)
Result size: 6347 (6K). Percentage of original: 103.641%
Preserving original PNG since it was smaller


2023/08/01 15:47:31 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/flags.png.br /tmp/work/dist/images/basic/flags.png
2023/08/01 15:47:31 br /tmp/work/dist/images/basic/flags.png -> /output/images/basic/flags.png.br
2023/08/01 15:47:31 gz /tmp/work/dist/images/basic/flags.png -> /output/images/basic/flags.png.gz
2023/08/01 15:47:31 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/football.png /tmp/work/dist/images/basic/football.png
2023/08/01 15:47:33 Optimizing /tmp/work/dist/images/basic/five.png
Input size: 3593 (3K)
Result size: 3574 (3K). Percentage of original: 99.471%
Result is smaller


2023/08/01 15:47:33 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/five.png.br /tmp/work/dist/images/basic/five.png
2023/08/01 15:47:33 br /tmp/work/dist/images/basic/five.png -> /output/images/basic/five.png.br
2023/08/01 15:47:33 gz /tmp/work/dist/images/basic/five.png -> /output/images/basic/five.png.gz
2023/08/01 15:47:33 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/fork_and_knife.png /tmp/work/dist/images/basic/fork_and_knife.png
2023/08/01 15:47:36 Optimizing /tmp/work/dist/images/basic/fist.png
Input size: 5880 (5K)
Result size: 5747 (5K). Percentage of original: 97.738%
Result is smaller


2023/08/01 15:47:36 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/fist.png.br /tmp/work/dist/images/basic/fist.png
2023/08/01 15:47:36 br /tmp/work/dist/images/basic/fist.png -> /output/images/basic/fist.png.br
2023/08/01 15:47:36 gz /tmp/work/dist/images/basic/fist.png -> /output/images/basic/fist.png.gz
2023/08/01 15:47:36 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/fountain.png /tmp/work/dist/images/basic/fountain.png
2023/08/01 15:47:36 Optimizing /tmp/work/dist/images/basic/flashlight.png
Input size: 5024 (4K)
Result size: 4967 (4K). Percentage of original: 98.865%
Result is smaller


2023/08/01 15:47:36 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/flashlight.png.br /tmp/work/dist/images/basic/flashlight.png
2023/08/01 15:47:36 br /tmp/work/dist/images/basic/flashlight.png -> /output/images/basic/flashlight.png.br
2023/08/01 15:47:36 gz /tmp/work/dist/images/basic/flashlight.png -> /output/images/basic/flashlight.png.gz
2023/08/01 15:47:36 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/four_leaf_clover.png /tmp/work/dist/images/basic/four_leaf_clover.png
2023/08/01 15:47:38 Optimizing /tmp/work/dist/images/basic/floppy_disk.png
Input size: 3215 (3K)
Result size: 3176 (3K). Percentage of original: 98.787%
Result is smaller


2023/08/01 15:47:38 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/floppy_disk.png.br /tmp/work/dist/images/basic/floppy_disk.png
2023/08/01 15:47:38 br /tmp/work/dist/images/basic/floppy_disk.png -> /output/images/basic/floppy_disk.png.br
2023/08/01 15:47:38 gz /tmp/work/dist/images/basic/floppy_disk.png -> /output/images/basic/floppy_disk.png.gz
2023/08/01 15:47:38 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/four.png /tmp/work/dist/images/basic/four.png
2023/08/01 15:47:40 Optimizing /tmp/work/dist/images/basic/flushed.png
Input size: 5845 (5K)
Result size: 5542 (5K). Percentage of original: 94.816%
Result is smaller


2023/08/01 15:47:40 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/flushed.png.br /tmp/work/dist/images/basic/flushed.png
2023/08/01 15:47:40 br /tmp/work/dist/images/basic/flushed.png -> /output/images/basic/flushed.png.br
2023/08/01 15:47:40 gz /tmp/work/dist/images/basic/flushed.png -> /output/images/basic/flushed.png.gz
2023/08/01 15:47:40 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/fr.png /tmp/work/dist/images/basic/fr.png
2023/08/01 15:47:42 Optimizing /tmp/work/dist/images/basic/flower_playing_cards.png
Input size: 3434 (3K)
Result size: 3322 (3K). Percentage of original: 96.738%
Result is smaller


2023/08/01 15:47:42 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/flower_playing_cards.png.br /tmp/work/dist/images/basic/flower_playing_cards.png
2023/08/01 15:47:42 br /tmp/work/dist/images/basic/flower_playing_cards.png -> /output/images/basic/flower_playing_cards.png.br
2023/08/01 15:47:42 gz /tmp/work/dist/images/basic/flower_playing_cards.png -> /output/images/basic/flower_playing_cards.png.gz
2023/08/01 15:47:42 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/free.png /tmp/work/dist/images/basic/free.png
2023/08/01 15:47:44 Optimizing /tmp/work/dist/images/basic/fork_and_knife.png
Input size: 3608 (3K)
Result size: 3689 (3K). Percentage of original: 102.245%
Preserving original PNG since it was smaller


2023/08/01 15:47:44 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/fork_and_knife.png.br /tmp/work/dist/images/basic/fork_and_knife.png
2023/08/01 15:47:45 br /tmp/work/dist/images/basic/fork_and_knife.png -> /output/images/basic/fork_and_knife.png.br
2023/08/01 15:47:45 gz /tmp/work/dist/images/basic/fork_and_knife.png -> /output/images/basic/fork_and_knife.png.gz
2023/08/01 15:47:45 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/fried_shrimp.png /tmp/work/dist/images/basic/fried_shrimp.png
2023/08/01 15:47:46 Optimizing /tmp/work/dist/images/basic/four_leaf_clover.png
Input size: 5995 (5K)
Result size: 6032 (5K). Percentage of original: 100.617%
Preserving original PNG since it was smaller


2023/08/01 15:47:46 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/four_leaf_clover.png.br /tmp/work/dist/images/basic/four_leaf_clover.png
2023/08/01 15:47:46 br /tmp/work/dist/images/basic/four_leaf_clover.png -> /output/images/basic/four_leaf_clover.png.br
2023/08/01 15:47:46 gz /tmp/work/dist/images/basic/four_leaf_clover.png -> /output/images/basic/four_leaf_clover.png.gz
2023/08/01 15:47:46 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/fries.png /tmp/work/dist/images/basic/fries.png
2023/08/01 15:47:46 Optimizing /tmp/work/dist/images/basic/foggy.png
Input size: 4623 (4K)
Result size: 4482 (4K). Percentage of original: 96.950%
Result is smaller


2023/08/01 15:47:46 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/foggy.png.br /tmp/work/dist/images/basic/foggy.png
2023/08/01 15:47:46 br /tmp/work/dist/images/basic/foggy.png -> /output/images/basic/foggy.png.br
2023/08/01 15:47:46 gz /tmp/work/dist/images/basic/foggy.png -> /output/images/basic/foggy.png.gz
2023/08/01 15:47:46 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/frog.png /tmp/work/dist/images/basic/frog.png
2023/08/01 15:47:47 Optimizing /tmp/work/dist/images/basic/football.png
Input size: 6712 (6K)
Result size: 6828 (6K). Percentage of original: 101.728%
Preserving original PNG since it was smaller


2023/08/01 15:47:47 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/football.png.br /tmp/work/dist/images/basic/football.png
2023/08/01 15:47:47 br /tmp/work/dist/images/basic/football.png -> /output/images/basic/football.png.br
2023/08/01 15:47:47 gz /tmp/work/dist/images/basic/football.png -> /output/images/basic/football.png.gz
2023/08/01 15:47:47 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/frowning.png /tmp/work/dist/images/basic/frowning.png
2023/08/01 15:47:48 Optimizing /tmp/work/dist/images/basic/fountain.png
Input size: 5087 (4K)
Result size: 5031 (4K). Percentage of original: 98.899%
Result is smaller


2023/08/01 15:47:48 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/fountain.png.br /tmp/work/dist/images/basic/fountain.png
2023/08/01 15:47:48 br /tmp/work/dist/images/basic/fountain.png -> /output/images/basic/fountain.png.br
2023/08/01 15:47:48 gz /tmp/work/dist/images/basic/fountain.png -> /output/images/basic/fountain.png.gz
2023/08/01 15:47:48 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/fu.png /tmp/work/dist/images/basic/fu.png
2023/08/01 15:47:53 Optimizing /tmp/work/dist/images/basic/free.png
Input size: 3605 (3K)
Result size: 3629 (3K). Percentage of original: 100.666%
Preserving original PNG since it was smaller


2023/08/01 15:47:53 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/free.png.br /tmp/work/dist/images/basic/free.png
2023/08/01 15:47:53 br /tmp/work/dist/images/basic/free.png -> /output/images/basic/free.png.br
2023/08/01 15:47:53 gz /tmp/work/dist/images/basic/free.png -> /output/images/basic/free.png.gz
2023/08/01 15:47:53 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/fuelpump.png /tmp/work/dist/images/basic/fuelpump.png
2023/08/01 15:47:56 Optimizing /tmp/work/dist/images/basic/frowning.png
Input size: 4733 (4K)
Result size: 4664 (4K). Percentage of original: 98.542%
Result is smaller


2023/08/01 15:47:56 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/frowning.png.br /tmp/work/dist/images/basic/frowning.png
2023/08/01 15:47:56 br /tmp/work/dist/images/basic/frowning.png -> /output/images/basic/frowning.png.br
2023/08/01 15:47:56 Optimizing /tmp/work/dist/images/basic/four.png
Input size: 3176 (3K)
Result size: 3097 (3K). Percentage of original: 97.513%
Result is smaller


2023/08/01 15:47:56 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/four.png.br /tmp/work/dist/images/basic/four.png
2023/08/01 15:47:56 gz /tmp/work/dist/images/basic/frowning.png -> /output/images/basic/frowning.png.gz
2023/08/01 15:47:56 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/full_moon_with_face.png /tmp/work/dist/images/basic/full_moon_with_face.png
2023/08/01 15:47:57 br /tmp/work/dist/images/basic/four.png -> /output/images/basic/four.png.br
2023/08/01 15:47:57 gz /tmp/work/dist/images/basic/four.png -> /output/images/basic/four.png.gz
2023/08/01 15:47:57 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/full_moon.png /tmp/work/dist/images/basic/full_moon.png
2023/08/01 15:47:57 Optimizing /tmp/work/dist/images/basic/fried_shrimp.png
Input size: 7550 (7K)
Result size: 7614 (7K). Percentage of original: 100.848%
Preserving original PNG since it was smaller


2023/08/01 15:47:57 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/fried_shrimp.png.br /tmp/work/dist/images/basic/fried_shrimp.png
2023/08/01 15:47:57 Optimizing /tmp/work/dist/images/basic/fries.png
Input size: 6405 (6K)
Result size: 6437 (6K). Percentage of original: 100.500%
Preserving original PNG since it was smaller


2023/08/01 15:47:57 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/fries.png.br /tmp/work/dist/images/basic/fries.png
2023/08/01 15:47:57 br /tmp/work/dist/images/basic/fried_shrimp.png -> /output/images/basic/fried_shrimp.png.br
2023/08/01 15:47:57 gz /tmp/work/dist/images/basic/fried_shrimp.png -> /output/images/basic/fried_shrimp.png.gz
2023/08/01 15:47:57 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/game_die.png /tmp/work/dist/images/basic/game_die.png
2023/08/01 15:47:57 br /tmp/work/dist/images/basic/fries.png -> /output/images/basic/fries.png.br
2023/08/01 15:47:57 gz /tmp/work/dist/images/basic/fries.png -> /output/images/basic/fries.png.gz
2023/08/01 15:47:57 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/gb.png /tmp/work/dist/images/basic/gb.png
2023/08/01 15:48:00 Optimizing /tmp/work/dist/images/basic/frog.png
Input size: 4823 (4K)
Result size: 4847 (4K). Percentage of original: 100.498%
Preserving original PNG since it was smaller


2023/08/01 15:48:00 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/frog.png.br /tmp/work/dist/images/basic/frog.png
2023/08/01 15:48:00 br /tmp/work/dist/images/basic/frog.png -> /output/images/basic/frog.png.br
2023/08/01 15:48:00 gz /tmp/work/dist/images/basic/frog.png -> /output/images/basic/frog.png.gz
2023/08/01 15:48:00 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/gem.png /tmp/work/dist/images/basic/gem.png
2023/08/01 15:48:03 Optimizing /tmp/work/dist/images/basic/fuelpump.png
Input size: 4296 (4K)
Result size: 4438 (4K). Percentage of original: 103.305%
Preserving original PNG since it was smaller


2023/08/01 15:48:03 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/fuelpump.png.br /tmp/work/dist/images/basic/fuelpump.png
2023/08/01 15:48:03 br /tmp/work/dist/images/basic/fuelpump.png -> /output/images/basic/fuelpump.png.br
2023/08/01 15:48:03 gz /tmp/work/dist/images/basic/fuelpump.png -> /output/images/basic/fuelpump.png.gz
2023/08/01 15:48:03 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/gemini.png /tmp/work/dist/images/basic/gemini.png
2023/08/01 15:48:03 Optimizing /tmp/work/dist/images/basic/fu.png
Input size: 4687 (4K)
Result size: 4095 (3K). Percentage of original: 87.369%
Result is smaller


2023/08/01 15:48:03 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/fu.png.br /tmp/work/dist/images/basic/fu.png
2023/08/01 15:48:03 br /tmp/work/dist/images/basic/fu.png -> /output/images/basic/fu.png.br
2023/08/01 15:48:03 gz /tmp/work/dist/images/basic/fu.png -> /output/images/basic/fu.png.gz
2023/08/01 15:48:03 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/ghost.png /tmp/work/dist/images/basic/ghost.png
2023/08/01 15:48:04 Optimizing /tmp/work/dist/images/basic/full_moon_with_face.png
Input size: 7165 (6K)
Result size: 7233 (7K). Percentage of original: 100.949%
Preserving original PNG since it was smaller


2023/08/01 15:48:04 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/full_moon_with_face.png.br /tmp/work/dist/images/basic/full_moon_with_face.png
2023/08/01 15:48:05 br /tmp/work/dist/images/basic/full_moon_with_face.png -> /output/images/basic/full_moon_with_face.png.br
2023/08/01 15:48:05 gz /tmp/work/dist/images/basic/full_moon_with_face.png -> /output/images/basic/full_moon_with_face.png.gz
2023/08/01 15:48:05 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/gift_heart.png /tmp/work/dist/images/basic/gift_heart.png
2023/08/01 15:48:08 Optimizing /tmp/work/dist/images/basic/fr.png
Input size: 3398 (3K)
Result size: 3203 (3K). Percentage of original: 94.261%
Result is smaller


2023/08/01 15:48:08 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/fr.png.br /tmp/work/dist/images/basic/fr.png
2023/08/01 15:48:08 br /tmp/work/dist/images/basic/fr.png -> /output/images/basic/fr.png.br
2023/08/01 15:48:08 gz /tmp/work/dist/images/basic/fr.png -> /output/images/basic/fr.png.gz
2023/08/01 15:48:08 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/gift.png /tmp/work/dist/images/basic/gift.png
2023/08/01 15:48:09 Optimizing /tmp/work/dist/images/basic/full_moon.png
Input size: 6458 (6K)
Result size: 6518 (6K). Percentage of original: 100.929%
Preserving original PNG since it was smaller


2023/08/01 15:48:09 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/full_moon.png.br /tmp/work/dist/images/basic/full_moon.png
2023/08/01 15:48:09 br /tmp/work/dist/images/basic/full_moon.png -> /output/images/basic/full_moon.png.br
2023/08/01 15:48:09 gz /tmp/work/dist/images/basic/full_moon.png -> /output/images/basic/full_moon.png.gz
2023/08/01 15:48:09 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/girl.png /tmp/work/dist/images/basic/girl.png
2023/08/01 15:48:10 Optimizing /tmp/work/dist/images/basic/game_die.png
Input size: 2956 (2K)
Result size: 2964 (2K). Percentage of original: 100.271%
Preserving original PNG since it was smaller


2023/08/01 15:48:10 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/game_die.png.br /tmp/work/dist/images/basic/game_die.png
2023/08/01 15:48:10 br /tmp/work/dist/images/basic/game_die.png -> /output/images/basic/game_die.png.br
2023/08/01 15:48:10 gz /tmp/work/dist/images/basic/game_die.png -> /output/images/basic/game_die.png.gz
2023/08/01 15:48:10 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/globe_with_meridians.png /tmp/work/dist/images/basic/globe_with_meridians.png
2023/08/01 15:48:13 Optimizing /tmp/work/dist/images/basic/gb.png
Input size: 5894 (5K)
Result size: 5849 (5K). Percentage of original: 99.237%
Result is smaller


2023/08/01 15:48:13 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/gb.png.br /tmp/work/dist/images/basic/gb.png
2023/08/01 15:48:13 br /tmp/work/dist/images/basic/gb.png -> /output/images/basic/gb.png.br
2023/08/01 15:48:13 gz /tmp/work/dist/images/basic/gb.png -> /output/images/basic/gb.png.gz
2023/08/01 15:48:13 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/goat.png /tmp/work/dist/images/basic/goat.png
2023/08/01 15:48:14 Optimizing /tmp/work/dist/images/basic/gemini.png
Input size: 4296 (4K)
Result size: 4167 (4K). Percentage of original: 96.997%
Result is smaller


2023/08/01 15:48:14 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/gemini.png.br /tmp/work/dist/images/basic/gemini.png
2023/08/01 15:48:14 br /tmp/work/dist/images/basic/gemini.png -> /output/images/basic/gemini.png.br
2023/08/01 15:48:14 gz /tmp/work/dist/images/basic/gemini.png -> /output/images/basic/gemini.png.gz
2023/08/01 15:48:14 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/goberserk.png /tmp/work/dist/images/basic/goberserk.png
2023/08/01 15:48:15 Optimizing /tmp/work/dist/images/basic/gem.png
Input size: 4855 (4K)
Result size: 4810 (4K). Percentage of original: 99.073%
Result is smaller


2023/08/01 15:48:15 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/gem.png.br /tmp/work/dist/images/basic/gem.png
2023/08/01 15:48:15 br /tmp/work/dist/images/basic/gem.png -> /output/images/basic/gem.png.br
2023/08/01 15:48:15 gz /tmp/work/dist/images/basic/gem.png -> /output/images/basic/gem.png.gz
2023/08/01 15:48:15 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/godmode.png /tmp/work/dist/images/basic/godmode.png
2023/08/01 15:48:16 Optimizing /tmp/work/dist/images/basic/gift_heart.png
Input size: 6013 (5K)
Result size: 6015 (5K). Percentage of original: 100.033%
Preserving original PNG since it was smaller


2023/08/01 15:48:16 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/gift_heart.png.br /tmp/work/dist/images/basic/gift_heart.png
2023/08/01 15:48:16 br /tmp/work/dist/images/basic/gift_heart.png -> /output/images/basic/gift_heart.png.br
2023/08/01 15:48:16 gz /tmp/work/dist/images/basic/gift_heart.png -> /output/images/basic/gift_heart.png.gz
2023/08/01 15:48:16 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/golf.png /tmp/work/dist/images/basic/golf.png
2023/08/01 15:48:17 Optimizing /tmp/work/dist/images/basic/gift.png
Input size: 6712 (6K)
Result size: 6818 (6K). Percentage of original: 101.579%
Preserving original PNG since it was smaller


2023/08/01 15:48:17 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/gift.png.br /tmp/work/dist/images/basic/gift.png
2023/08/01 15:48:18 br /tmp/work/dist/images/basic/gift.png -> /output/images/basic/gift.png.br
2023/08/01 15:48:18 gz /tmp/work/dist/images/basic/gift.png -> /output/images/basic/gift.png.gz
2023/08/01 15:48:18 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/grapes.png /tmp/work/dist/images/basic/grapes.png
2023/08/01 15:48:20 Optimizing /tmp/work/dist/images/basic/globe_with_meridians.png
Input size: 5837 (5K)
Result size: 5928 (5K). Percentage of original: 101.559%
Preserving original PNG since it was smaller


2023/08/01 15:48:20 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/globe_with_meridians.png.br /tmp/work/dist/images/basic/globe_with_meridians.png
2023/08/01 15:48:20 br /tmp/work/dist/images/basic/globe_with_meridians.png -> /output/images/basic/globe_with_meridians.png.br
2023/08/01 15:48:20 gz /tmp/work/dist/images/basic/globe_with_meridians.png -> /output/images/basic/globe_with_meridians.png.gz
2023/08/01 15:48:20 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/green_apple.png /tmp/work/dist/images/basic/green_apple.png
2023/08/01 15:48:21 Optimizing /tmp/work/dist/images/basic/ghost.png
Input size: 4513 (4K)
Result size: 4582 (4K). Percentage of original: 101.529%
Preserving original PNG since it was smaller


2023/08/01 15:48:21 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/ghost.png.br /tmp/work/dist/images/basic/ghost.png
2023/08/01 15:48:21 br /tmp/work/dist/images/basic/ghost.png -> /output/images/basic/ghost.png.br
2023/08/01 15:48:21 gz /tmp/work/dist/images/basic/ghost.png -> /output/images/basic/ghost.png.gz
2023/08/01 15:48:21 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/green_book.png /tmp/work/dist/images/basic/green_book.png
2023/08/01 15:48:21 Optimizing /tmp/work/dist/images/basic/goat.png
Input size: 4889 (4K)
Result size: 4917 (4K). Percentage of original: 100.573%
Preserving original PNG since it was smaller


2023/08/01 15:48:21 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/goat.png.br /tmp/work/dist/images/basic/goat.png
2023/08/01 15:48:21 br /tmp/work/dist/images/basic/goat.png -> /output/images/basic/goat.png.br
2023/08/01 15:48:21 gz /tmp/work/dist/images/basic/goat.png -> /output/images/basic/goat.png.gz
2023/08/01 15:48:21 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/green_heart.png /tmp/work/dist/images/basic/green_heart.png
2023/08/01 15:48:22 Optimizing /tmp/work/dist/images/basic/girl.png
Input size: 6314 (6K)
Result size: 6206 (6K). Percentage of original: 98.290%
Result is smaller


2023/08/01 15:48:22 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/girl.png.br /tmp/work/dist/images/basic/girl.png
2023/08/01 15:48:22 br /tmp/work/dist/images/basic/girl.png -> /output/images/basic/girl.png.br
2023/08/01 15:48:22 gz /tmp/work/dist/images/basic/girl.png -> /output/images/basic/girl.png.gz
2023/08/01 15:48:22 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/grey_exclamation.png /tmp/work/dist/images/basic/grey_exclamation.png
2023/08/01 15:48:27 Optimizing /tmp/work/dist/images/basic/grapes.png
Input size: 5423 (5K)
Result size: 5525 (5K). Percentage of original: 101.881%
Preserving original PNG since it was smaller


2023/08/01 15:48:27 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/grapes.png.br /tmp/work/dist/images/basic/grapes.png
2023/08/01 15:48:27 Optimizing /tmp/work/dist/images/basic/golf.png
Input size: 3548 (3K)
Result size: 3535 (3K). Percentage of original: 99.634%
Result is smaller


2023/08/01 15:48:27 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/golf.png.br /tmp/work/dist/images/basic/golf.png
2023/08/01 15:48:27 br /tmp/work/dist/images/basic/grapes.png -> /output/images/basic/grapes.png.br
2023/08/01 15:48:27 br /tmp/work/dist/images/basic/golf.png -> /output/images/basic/golf.png.br
2023/08/01 15:48:27 gz /tmp/work/dist/images/basic/grapes.png -> /output/images/basic/grapes.png.gz
2023/08/01 15:48:27 gz /tmp/work/dist/images/basic/golf.png -> /output/images/basic/golf.png.gz
2023/08/01 15:48:27 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/grimacing.png /tmp/work/dist/images/basic/grimacing.png
2023/08/01 15:48:27 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/grey_question.png /tmp/work/dist/images/basic/grey_question.png
2023/08/01 15:48:30 Optimizing /tmp/work/dist/images/basic/green_apple.png
Input size: 6205 (6K)
Result size: 6169 (6K). Percentage of original: 99.420%
Result is smaller


2023/08/01 15:48:30 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/green_apple.png.br /tmp/work/dist/images/basic/green_apple.png
2023/08/01 15:48:30 br /tmp/work/dist/images/basic/green_apple.png -> /output/images/basic/green_apple.png.br
2023/08/01 15:48:30 gz /tmp/work/dist/images/basic/green_apple.png -> /output/images/basic/green_apple.png.gz
2023/08/01 15:48:30 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/grin.png /tmp/work/dist/images/basic/grin.png
2023/08/01 15:48:35 Optimizing /tmp/work/dist/images/basic/green_heart.png
Input size: 4432 (4K)
Result size: 4400 (4K). Percentage of original: 99.278%
Result is smaller


2023/08/01 15:48:35 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/green_heart.png.br /tmp/work/dist/images/basic/green_heart.png
2023/08/01 15:48:35 br /tmp/work/dist/images/basic/green_heart.png -> /output/images/basic/green_heart.png.br
2023/08/01 15:48:35 gz /tmp/work/dist/images/basic/green_heart.png -> /output/images/basic/green_heart.png.gz
2023/08/01 15:48:35 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/grinning.png /tmp/work/dist/images/basic/grinning.png
2023/08/01 15:48:36 Optimizing /tmp/work/dist/images/basic/grimacing.png
Input size: 5327 (5K)
Result size: 5260 (5K). Percentage of original: 98.742%
Result is smaller


2023/08/01 15:48:36 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/grimacing.png.br /tmp/work/dist/images/basic/grimacing.png
2023/08/01 15:48:36 br /tmp/work/dist/images/basic/grimacing.png -> /output/images/basic/grimacing.png.br
2023/08/01 15:48:36 gz /tmp/work/dist/images/basic/grimacing.png -> /output/images/basic/grimacing.png.gz
2023/08/01 15:48:36 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/guardsman.png /tmp/work/dist/images/basic/guardsman.png
2023/08/01 15:48:43 Optimizing /tmp/work/dist/images/basic/green_book.png
Input size: 5090 (4K)
Result size: 5007 (4K). Percentage of original: 98.369%
Result is smaller


2023/08/01 15:48:43 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/green_book.png.br /tmp/work/dist/images/basic/green_book.png
2023/08/01 15:48:43 br /tmp/work/dist/images/basic/green_book.png -> /output/images/basic/green_book.png.br
2023/08/01 15:48:43 gz /tmp/work/dist/images/basic/green_book.png -> /output/images/basic/green_book.png.gz
2023/08/01 15:48:43 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/guitar.png /tmp/work/dist/images/basic/guitar.png
2023/08/01 15:48:44 Optimizing /tmp/work/dist/images/basic/goberserk.png
Input size: 1334 (1K)
Result size: 1375 (1K). Percentage of original: 103.073%
Preserving original PNG since it was smaller


2023/08/01 15:48:44 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/goberserk.png.br /tmp/work/dist/images/basic/goberserk.png
2023/08/01 15:48:44 br /tmp/work/dist/images/basic/goberserk.png -> /output/images/basic/goberserk.png.br
2023/08/01 15:48:44 gz /tmp/work/dist/images/basic/goberserk.png -> /output/images/basic/goberserk.png.gz
2023/08/01 15:48:44 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/gun.png /tmp/work/dist/images/basic/gun.png
2023/08/01 15:48:44 Optimizing /tmp/work/dist/images/basic/grinning.png
Input size: 5550 (5K)
Result size: 5535 (5K). Percentage of original: 99.730%
Result is smaller


2023/08/01 15:48:44 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/grinning.png.br /tmp/work/dist/images/basic/grinning.png
2023/08/01 15:48:44 br /tmp/work/dist/images/basic/grinning.png -> /output/images/basic/grinning.png.br
2023/08/01 15:48:44 gz /tmp/work/dist/images/basic/grinning.png -> /output/images/basic/grinning.png.gz
2023/08/01 15:48:44 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/haircut.png /tmp/work/dist/images/basic/haircut.png
2023/08/01 15:48:46 Optimizing /tmp/work/dist/images/basic/godmode.png
Input size: 1042 (1K)
Result size: 1089 (1K). Percentage of original: 104.511%
Preserving original PNG since it was smaller


2023/08/01 15:48:46 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/godmode.png.br /tmp/work/dist/images/basic/godmode.png
2023/08/01 15:48:46 Optimizing /tmp/work/dist/images/basic/grey_question.png
Input size: 1057 (1K)
Result size: 1159 (1K). Percentage of original: 109.650%
Preserving original PNG since it was smaller


2023/08/01 15:48:46 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/grey_question.png.br /tmp/work/dist/images/basic/grey_question.png
2023/08/01 15:48:46 br /tmp/work/dist/images/basic/godmode.png -> /output/images/basic/godmode.png.br
2023/08/01 15:48:46 gz /tmp/work/dist/images/basic/godmode.png -> /output/images/basic/godmode.png.gz
2023/08/01 15:48:46 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/hamburger.png /tmp/work/dist/images/basic/hamburger.png
2023/08/01 15:48:46 br /tmp/work/dist/images/basic/grey_question.png -> /output/images/basic/grey_question.png.br
2023/08/01 15:48:46 gz /tmp/work/dist/images/basic/grey_question.png -> /output/images/basic/grey_question.png.gz
2023/08/01 15:48:46 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/hammer.png /tmp/work/dist/images/basic/hammer.png
2023/08/01 15:48:50 Optimizing /tmp/work/dist/images/basic/grey_exclamation.png
Input size: 790 (0K)
Result size: 1100 (1K). Percentage of original: 139.241%
Preserving original PNG since it was smaller


2023/08/01 15:48:50 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/grey_exclamation.png.br /tmp/work/dist/images/basic/grey_exclamation.png
2023/08/01 15:48:51 br /tmp/work/dist/images/basic/grey_exclamation.png -> /output/images/basic/grey_exclamation.png.br
2023/08/01 15:48:51 gz /tmp/work/dist/images/basic/grey_exclamation.png -> /output/images/basic/grey_exclamation.png.gz
2023/08/01 15:48:51 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/hamster.png /tmp/work/dist/images/basic/hamster.png
2023/08/01 15:48:52 Optimizing /tmp/work/dist/images/basic/grin.png
Input size: 5721 (5K)
Result size: 5678 (5K). Percentage of original: 99.248%
Result is smaller


2023/08/01 15:48:52 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/grin.png.br /tmp/work/dist/images/basic/grin.png
2023/08/01 15:48:52 br /tmp/work/dist/images/basic/grin.png -> /output/images/basic/grin.png.br
2023/08/01 15:48:52 gz /tmp/work/dist/images/basic/grin.png -> /output/images/basic/grin.png.gz
2023/08/01 15:48:52 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/hand.png /tmp/work/dist/images/basic/hand.png
2023/08/01 15:48:53 Optimizing /tmp/work/dist/images/basic/haircut.png
Input size: 7100 (6K)
Result size: 7041 (6K). Percentage of original: 99.169%
Result is smaller


2023/08/01 15:48:53 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/haircut.png.br /tmp/work/dist/images/basic/haircut.png
2023/08/01 15:48:53 Optimizing /tmp/work/dist/images/basic/guardsman.png
Input size: 3587 (3K)
Result size: 3482 (3K). Percentage of original: 97.073%
Result is smaller


2023/08/01 15:48:53 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/guardsman.png.br /tmp/work/dist/images/basic/guardsman.png
2023/08/01 15:48:53 br /tmp/work/dist/images/basic/guardsman.png -> /output/images/basic/guardsman.png.br
2023/08/01 15:48:53 gz /tmp/work/dist/images/basic/guardsman.png -> /output/images/basic/guardsman.png.gz
2023/08/01 15:48:53 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/handbag.png /tmp/work/dist/images/basic/handbag.png
2023/08/01 15:48:53 br /tmp/work/dist/images/basic/haircut.png -> /output/images/basic/haircut.png.br
2023/08/01 15:48:53 gz /tmp/work/dist/images/basic/haircut.png -> /output/images/basic/haircut.png.gz
2023/08/01 15:48:53 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/hankey.png /tmp/work/dist/images/basic/hankey.png
2023/08/01 15:48:53 Optimizing /tmp/work/dist/images/basic/guitar.png
Input size: 4382 (4K)
Result size: 4372 (4K). Percentage of original: 99.772%
Result is smaller


2023/08/01 15:48:53 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/guitar.png.br /tmp/work/dist/images/basic/guitar.png
2023/08/01 15:48:53 br /tmp/work/dist/images/basic/guitar.png -> /output/images/basic/guitar.png.br
2023/08/01 15:48:53 gz /tmp/work/dist/images/basic/guitar.png -> /output/images/basic/guitar.png.gz
2023/08/01 15:48:53 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/hash.png /tmp/work/dist/images/basic/hash.png
2023/08/01 15:48:54 Optimizing /tmp/work/dist/images/basic/hamburger.png
Input size: 5706 (5K)
Result size: 5663 (5K). Percentage of original: 99.246%
Result is smaller


2023/08/01 15:48:54 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/hamburger.png.br /tmp/work/dist/images/basic/hamburger.png
2023/08/01 15:48:54 br /tmp/work/dist/images/basic/hamburger.png -> /output/images/basic/hamburger.png.br
2023/08/01 15:48:54 gz /tmp/work/dist/images/basic/hamburger.png -> /output/images/basic/hamburger.png.gz
2023/08/01 15:48:54 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/hatched_chick.png /tmp/work/dist/images/basic/hatched_chick.png
2023/08/01 15:48:54 Optimizing /tmp/work/dist/images/basic/gun.png
Input size: 3161 (3K)
Result size: 3134 (3K). Percentage of original: 99.146%
Result is smaller


2023/08/01 15:48:54 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/gun.png.br /tmp/work/dist/images/basic/gun.png
2023/08/01 15:48:54 br /tmp/work/dist/images/basic/gun.png -> /output/images/basic/gun.png.br
2023/08/01 15:48:54 gz /tmp/work/dist/images/basic/gun.png -> /output/images/basic/gun.png.gz
2023/08/01 15:48:54 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/hatching_chick.png /tmp/work/dist/images/basic/hatching_chick.png
2023/08/01 15:49:01 Optimizing /tmp/work/dist/images/basic/hamster.png
Input size: 7221 (7K)
Result size: 7251 (7K). Percentage of original: 100.415%
Preserving original PNG since it was smaller


2023/08/01 15:49:01 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/hamster.png.br /tmp/work/dist/images/basic/hamster.png
2023/08/01 15:49:01 br /tmp/work/dist/images/basic/hamster.png -> /output/images/basic/hamster.png.br
2023/08/01 15:49:01 gz /tmp/work/dist/images/basic/hamster.png -> /output/images/basic/hamster.png.gz
2023/08/01 15:49:01 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/headphones.png /tmp/work/dist/images/basic/headphones.png
2023/08/01 15:49:04 Optimizing /tmp/work/dist/images/basic/handbag.png
Input size: 5449 (5K)
Result size: 5577 (5K). Percentage of original: 102.349%
Preserving original PNG since it was smaller


2023/08/01 15:49:04 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/handbag.png.br /tmp/work/dist/images/basic/handbag.png
2023/08/01 15:49:04 br /tmp/work/dist/images/basic/handbag.png -> /output/images/basic/handbag.png.br
2023/08/01 15:49:04 gz /tmp/work/dist/images/basic/handbag.png -> /output/images/basic/handbag.png.gz
2023/08/01 15:49:04 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/hear_no_evil.png /tmp/work/dist/images/basic/hear_no_evil.png
2023/08/01 15:49:04 Optimizing /tmp/work/dist/images/basic/hammer.png
Input size: 3670 (3K)
Result size: 3732 (3K). Percentage of original: 101.689%
Preserving original PNG since it was smaller


2023/08/01 15:49:04 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/hammer.png.br /tmp/work/dist/images/basic/hammer.png
2023/08/01 15:49:04 br /tmp/work/dist/images/basic/hammer.png -> /output/images/basic/hammer.png.br
2023/08/01 15:49:04 gz /tmp/work/dist/images/basic/hammer.png -> /output/images/basic/hammer.png.gz
2023/08/01 15:49:04 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/heart_decoration.png /tmp/work/dist/images/basic/heart_decoration.png
2023/08/01 15:49:05 Optimizing /tmp/work/dist/images/basic/hankey.png
Input size: 4754 (4K)
Result size: 4859 (4K). Percentage of original: 102.209%
Preserving original PNG since it was smaller


2023/08/01 15:49:05 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/hankey.png.br /tmp/work/dist/images/basic/hankey.png
2023/08/01 15:49:05 br /tmp/work/dist/images/basic/hankey.png -> /output/images/basic/hankey.png.br
2023/08/01 15:49:05 gz /tmp/work/dist/images/basic/hankey.png -> /output/images/basic/hankey.png.gz
2023/08/01 15:49:05 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/heart_eyes_cat.png /tmp/work/dist/images/basic/heart_eyes_cat.png
2023/08/01 15:49:05 Optimizing /tmp/work/dist/images/basic/hatching_chick.png
Input size: 5928 (5K)
Result size: 5863 (5K). Percentage of original: 98.904%
Result is smaller


2023/08/01 15:49:05 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/hatching_chick.png.br /tmp/work/dist/images/basic/hatching_chick.png
2023/08/01 15:49:06 br /tmp/work/dist/images/basic/hatching_chick.png -> /output/images/basic/hatching_chick.png.br
2023/08/01 15:49:06 gz /tmp/work/dist/images/basic/hatching_chick.png -> /output/images/basic/hatching_chick.png.gz
2023/08/01 15:49:06 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/heart_eyes.png /tmp/work/dist/images/basic/heart_eyes.png
2023/08/01 15:49:06 Optimizing /tmp/work/dist/images/basic/hand.png
Input size: 4161 (4K)
Result size: 4097 (4K). Percentage of original: 98.462%
Result is smaller


2023/08/01 15:49:06 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/hand.png.br /tmp/work/dist/images/basic/hand.png
2023/08/01 15:49:06 br /tmp/work/dist/images/basic/hand.png -> /output/images/basic/hand.png.br
2023/08/01 15:49:06 gz /tmp/work/dist/images/basic/hand.png -> /output/images/basic/hand.png.gz
2023/08/01 15:49:06 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/heart.png /tmp/work/dist/images/basic/heart.png
2023/08/01 15:49:06 Optimizing /tmp/work/dist/images/basic/hatched_chick.png
Input size: 5646 (5K)
Result size: 5677 (5K). Percentage of original: 100.549%
Preserving original PNG since it was smaller


2023/08/01 15:49:06 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/hatched_chick.png.br /tmp/work/dist/images/basic/hatched_chick.png
2023/08/01 15:49:07 br /tmp/work/dist/images/basic/hatched_chick.png -> /output/images/basic/hatched_chick.png.br
2023/08/01 15:49:07 gz /tmp/work/dist/images/basic/hatched_chick.png -> /output/images/basic/hatched_chick.png.gz
2023/08/01 15:49:07 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/heartbeat.png /tmp/work/dist/images/basic/heartbeat.png
2023/08/01 15:49:09 Optimizing /tmp/work/dist/images/basic/headphones.png
Input size: 1910 (1K)
Result size: 1892 (1K). Percentage of original: 99.058%
Result is smaller


2023/08/01 15:49:09 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/headphones.png.br /tmp/work/dist/images/basic/headphones.png
2023/08/01 15:49:09 br /tmp/work/dist/images/basic/headphones.png -> /output/images/basic/headphones.png.br
2023/08/01 15:49:09 gz /tmp/work/dist/images/basic/headphones.png -> /output/images/basic/headphones.png.gz
2023/08/01 15:49:09 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/heartpulse.png /tmp/work/dist/images/basic/heartpulse.png
2023/08/01 15:49:13 Optimizing /tmp/work/dist/images/basic/hash.png
Input size: 3742 (3K)
Result size: 3753 (3K). Percentage of original: 100.294%
Preserving original PNG since it was smaller


2023/08/01 15:49:13 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/hash.png.br /tmp/work/dist/images/basic/hash.png
2023/08/01 15:49:13 br /tmp/work/dist/images/basic/hash.png -> /output/images/basic/hash.png.br
2023/08/01 15:49:13 gz /tmp/work/dist/images/basic/hash.png -> /output/images/basic/hash.png.gz
2023/08/01 15:49:13 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/hearts.png /tmp/work/dist/images/basic/hearts.png
2023/08/01 15:49:15 Optimizing /tmp/work/dist/images/basic/hear_no_evil.png
Input size: 6550 (6K)
Result size: 6617 (6K). Percentage of original: 101.023%
Preserving original PNG since it was smaller


2023/08/01 15:49:15 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/hear_no_evil.png.br /tmp/work/dist/images/basic/hear_no_evil.png
2023/08/01 15:49:15 br /tmp/work/dist/images/basic/hear_no_evil.png -> /output/images/basic/hear_no_evil.png.br
2023/08/01 15:49:15 gz /tmp/work/dist/images/basic/hear_no_evil.png -> /output/images/basic/hear_no_evil.png.gz
2023/08/01 15:49:15 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/heavy_check_mark.png /tmp/work/dist/images/basic/heavy_check_mark.png
2023/08/01 15:49:16 Optimizing /tmp/work/dist/images/basic/heart_eyes_cat.png
Input size: 6176 (6K)
Result size: 6244 (6K). Percentage of original: 101.101%
Preserving original PNG since it was smaller


2023/08/01 15:49:16 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/heart_eyes_cat.png.br /tmp/work/dist/images/basic/heart_eyes_cat.png
2023/08/01 15:49:16 br /tmp/work/dist/images/basic/heart_eyes_cat.png -> /output/images/basic/heart_eyes_cat.png.br
2023/08/01 15:49:16 gz /tmp/work/dist/images/basic/heart_eyes_cat.png -> /output/images/basic/heart_eyes_cat.png.gz
2023/08/01 15:49:16 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/heavy_division_sign.png /tmp/work/dist/images/basic/heavy_division_sign.png
2023/08/01 15:49:17 Optimizing /tmp/work/dist/images/basic/heart_eyes.png
Input size: 5758 (5K)
Result size: 5457 (5K). Percentage of original: 94.772%
Result is smaller


2023/08/01 15:49:17 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/heart_eyes.png.br /tmp/work/dist/images/basic/heart_eyes.png
2023/08/01 15:49:18 br /tmp/work/dist/images/basic/heart_eyes.png -> /output/images/basic/heart_eyes.png.br
2023/08/01 15:49:18 gz /tmp/work/dist/images/basic/heart_eyes.png -> /output/images/basic/heart_eyes.png.gz
2023/08/01 15:49:18 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/heavy_dollar_sign.png /tmp/work/dist/images/basic/heavy_dollar_sign.png
2023/08/01 15:49:18 Optimizing /tmp/work/dist/images/basic/heart_decoration.png
Input size: 3507 (3K)
Result size: 3414 (3K). Percentage of original: 97.348%
Result is smaller


2023/08/01 15:49:18 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/heart_decoration.png.br /tmp/work/dist/images/basic/heart_decoration.png
2023/08/01 15:49:18 br /tmp/work/dist/images/basic/heart_decoration.png -> /output/images/basic/heart_decoration.png.br
2023/08/01 15:49:18 gz /tmp/work/dist/images/basic/heart_decoration.png -> /output/images/basic/heart_decoration.png.gz
2023/08/01 15:49:18 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/heavy_exclamation_mark.png /tmp/work/dist/images/basic/heavy_exclamation_mark.png
2023/08/01 15:49:18 Optimizing /tmp/work/dist/images/basic/heartbeat.png
Input size: 4052 (3K)
Result size: 4014 (3K). Percentage of original: 99.062%
Result is smaller


2023/08/01 15:49:18 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/heartbeat.png.br /tmp/work/dist/images/basic/heartbeat.png
2023/08/01 15:49:18 br /tmp/work/dist/images/basic/heartbeat.png -> /output/images/basic/heartbeat.png.br
2023/08/01 15:49:18 gz /tmp/work/dist/images/basic/heartbeat.png -> /output/images/basic/heartbeat.png.gz
2023/08/01 15:49:18 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/heavy_minus_sign.png /tmp/work/dist/images/basic/heavy_minus_sign.png
2023/08/01 15:49:20 Optimizing /tmp/work/dist/images/basic/heartpulse.png
Input size: 6269 (6K)
Result size: 6228 (6K). Percentage of original: 99.346%
Result is smaller


2023/08/01 15:49:20 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/heartpulse.png.br /tmp/work/dist/images/basic/heartpulse.png
2023/08/01 15:49:20 br /tmp/work/dist/images/basic/heartpulse.png -> /output/images/basic/heartpulse.png.br
2023/08/01 15:49:20 gz /tmp/work/dist/images/basic/heartpulse.png -> /output/images/basic/heartpulse.png.gz
2023/08/01 15:49:20 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/heavy_multiplication_x.png /tmp/work/dist/images/basic/heavy_multiplication_x.png
2023/08/01 15:49:22 Optimizing /tmp/work/dist/images/basic/heart.png
Input size: 3302 (3K)
Result size: 3272 (3K). Percentage of original: 99.091%
Result is smaller


2023/08/01 15:49:22 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/heart.png.br /tmp/work/dist/images/basic/heart.png
2023/08/01 15:49:22 br /tmp/work/dist/images/basic/heart.png -> /output/images/basic/heart.png.br
2023/08/01 15:49:22 gz /tmp/work/dist/images/basic/heart.png -> /output/images/basic/heart.png.gz
2023/08/01 15:49:22 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/heavy_plus_sign.png /tmp/work/dist/images/basic/heavy_plus_sign.png
2023/08/01 15:49:26 Optimizing /tmp/work/dist/images/basic/hearts.png
Input size: 2925 (2K)
Result size: 2892 (2K). Percentage of original: 98.872%
Result is smaller


2023/08/01 15:49:26 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/hearts.png.br /tmp/work/dist/images/basic/hearts.png
2023/08/01 15:49:27 br /tmp/work/dist/images/basic/hearts.png -> /output/images/basic/hearts.png.br
2023/08/01 15:49:27 gz /tmp/work/dist/images/basic/hearts.png -> /output/images/basic/hearts.png.gz
2023/08/01 15:49:27 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/helicopter.png /tmp/work/dist/images/basic/helicopter.png
2023/08/01 15:49:27 Optimizing /tmp/work/dist/images/basic/heavy_exclamation_mark.png
Input size: 1315 (1K)
Result size: 1515 (1K). Percentage of original: 115.209%
Preserving original PNG since it was smaller


2023/08/01 15:49:27 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/heavy_exclamation_mark.png.br /tmp/work/dist/images/basic/heavy_exclamation_mark.png
2023/08/01 15:49:27 br /tmp/work/dist/images/basic/heavy_exclamation_mark.png -> /output/images/basic/heavy_exclamation_mark.png.br
2023/08/01 15:49:27 gz /tmp/work/dist/images/basic/heavy_exclamation_mark.png -> /output/images/basic/heavy_exclamation_mark.png.gz
2023/08/01 15:49:27 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/herb.png /tmp/work/dist/images/basic/herb.png
2023/08/01 15:49:29 Optimizing /tmp/work/dist/images/basic/heavy_minus_sign.png
Input size: 176 (0K)
Result size: 172 (0K). Percentage of original: 97.727%
Result is smaller


2023/08/01 15:49:29 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/heavy_minus_sign.png.br /tmp/work/dist/images/basic/heavy_minus_sign.png
2023/08/01 15:49:29 br /tmp/work/dist/images/basic/heavy_minus_sign.png -> /output/images/basic/heavy_minus_sign.png.br
2023/08/01 15:49:29 gz /tmp/work/dist/images/basic/heavy_minus_sign.png -> /output/images/basic/heavy_minus_sign.png.gz
2023/08/01 15:49:29 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/hibiscus.png /tmp/work/dist/images/basic/hibiscus.png
2023/08/01 15:49:35 Optimizing /tmp/work/dist/images/basic/helicopter.png
Input size: 4100 (4K)
Result size: 4064 (3K). Percentage of original: 99.122%
Result is smaller


2023/08/01 15:49:35 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/helicopter.png.br /tmp/work/dist/images/basic/helicopter.png
2023/08/01 15:49:35 Optimizing /tmp/work/dist/images/basic/heavy_check_mark.png
Input size: 924 (0K)
Result size: 1017 (0K). Percentage of original: 110.065%
Preserving original PNG since it was smaller


2023/08/01 15:49:35 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/heavy_check_mark.png.br /tmp/work/dist/images/basic/heavy_check_mark.png
2023/08/01 15:49:35 br /tmp/work/dist/images/basic/helicopter.png -> /output/images/basic/helicopter.png.br
2023/08/01 15:49:35 gz /tmp/work/dist/images/basic/helicopter.png -> /output/images/basic/helicopter.png.gz
2023/08/01 15:49:35 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/high_brightness.png /tmp/work/dist/images/basic/high_brightness.png
2023/08/01 15:49:35 br /tmp/work/dist/images/basic/heavy_check_mark.png -> /output/images/basic/heavy_check_mark.png.br
2023/08/01 15:49:35 gz /tmp/work/dist/images/basic/heavy_check_mark.png -> /output/images/basic/heavy_check_mark.png.gz
2023/08/01 15:49:35 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/high_heel.png /tmp/work/dist/images/basic/high_heel.png
2023/08/01 15:49:36 Optimizing /tmp/work/dist/images/basic/herb.png
Input size: 5889 (5K)
Result size: 6042 (5K). Percentage of original: 102.598%
Preserving original PNG since it was smaller


2023/08/01 15:49:36 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/herb.png.br /tmp/work/dist/images/basic/herb.png
2023/08/01 15:49:36 br /tmp/work/dist/images/basic/herb.png -> /output/images/basic/herb.png.br
2023/08/01 15:49:36 gz /tmp/work/dist/images/basic/herb.png -> /output/images/basic/herb.png.gz
2023/08/01 15:49:36 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/hocho.png /tmp/work/dist/images/basic/hocho.png
2023/08/01 15:49:38 Optimizing /tmp/work/dist/images/basic/hibiscus.png
Input size: 8322 (8K)
Result size: 8366 (8K). Percentage of original: 100.529%
Preserving original PNG since it was smaller


2023/08/01 15:49:38 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/hibiscus.png.br /tmp/work/dist/images/basic/hibiscus.png
2023/08/01 15:49:38 br /tmp/work/dist/images/basic/hibiscus.png -> /output/images/basic/hibiscus.png.br
2023/08/01 15:49:38 gz /tmp/work/dist/images/basic/hibiscus.png -> /output/images/basic/hibiscus.png.gz
2023/08/01 15:49:38 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/honey_pot.png /tmp/work/dist/images/basic/honey_pot.png
2023/08/01 15:49:40 Optimizing /tmp/work/dist/images/basic/high_brightness.png
Input size: 4060 (3K)
Result size: 4226 (4K). Percentage of original: 104.089%
Preserving original PNG since it was smaller


2023/08/01 15:49:40 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/high_brightness.png.br /tmp/work/dist/images/basic/high_brightness.png
2023/08/01 15:49:40 br /tmp/work/dist/images/basic/high_brightness.png -> /output/images/basic/high_brightness.png.br
2023/08/01 15:49:40 gz /tmp/work/dist/images/basic/high_brightness.png -> /output/images/basic/high_brightness.png.gz
2023/08/01 15:49:40 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/honeybee.png /tmp/work/dist/images/basic/honeybee.png
2023/08/01 15:49:43 Optimizing /tmp/work/dist/images/basic/heavy_division_sign.png
Input size: 264 (0K)
Result size: 320 (0K). Percentage of original: 121.212%
Preserving original PNG since it was smaller


2023/08/01 15:49:43 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/heavy_division_sign.png.br /tmp/work/dist/images/basic/heavy_division_sign.png
2023/08/01 15:49:43 br /tmp/work/dist/images/basic/heavy_division_sign.png -> /output/images/basic/heavy_division_sign.png.br
2023/08/01 15:49:43 gz /tmp/work/dist/images/basic/heavy_division_sign.png -> /output/images/basic/heavy_division_sign.png.gz
2023/08/01 15:49:43 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/horse_racing.png /tmp/work/dist/images/basic/horse_racing.png
2023/08/01 15:49:44 Optimizing /tmp/work/dist/images/basic/high_heel.png
Input size: 4557 (4K)
Result size: 4517 (4K). Percentage of original: 99.122%
Result is smaller


2023/08/01 15:49:44 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/high_heel.png.br /tmp/work/dist/images/basic/high_heel.png
2023/08/01 15:49:44 br /tmp/work/dist/images/basic/high_heel.png -> /output/images/basic/high_heel.png.br
2023/08/01 15:49:44 gz /tmp/work/dist/images/basic/high_heel.png -> /output/images/basic/high_heel.png.gz
2023/08/01 15:49:44 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/horse.png /tmp/work/dist/images/basic/horse.png
2023/08/01 15:49:47 Optimizing /tmp/work/dist/images/basic/heavy_multiplication_x.png
Input size: 591 (0K)
Result size: 626 (0K). Percentage of original: 105.922%
Preserving original PNG since it was smaller


2023/08/01 15:49:47 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/heavy_multiplication_x.png.br /tmp/work/dist/images/basic/heavy_multiplication_x.png
2023/08/01 15:49:47 br /tmp/work/dist/images/basic/heavy_multiplication_x.png -> /output/images/basic/heavy_multiplication_x.png.br
2023/08/01 15:49:47 gz /tmp/work/dist/images/basic/heavy_multiplication_x.png -> /output/images/basic/heavy_multiplication_x.png.gz
2023/08/01 15:49:47 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/hospital.png /tmp/work/dist/images/basic/hospital.png
2023/08/01 15:49:49 Optimizing /tmp/work/dist/images/basic/honey_pot.png
Input size: 5830 (5K)
Result size: 5936 (5K). Percentage of original: 101.818%
Preserving original PNG since it was smaller


2023/08/01 15:49:49 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/honey_pot.png.br /tmp/work/dist/images/basic/honey_pot.png
2023/08/01 15:49:49 br /tmp/work/dist/images/basic/honey_pot.png -> /output/images/basic/honey_pot.png.br
2023/08/01 15:49:49 gz /tmp/work/dist/images/basic/honey_pot.png -> /output/images/basic/honey_pot.png.gz
2023/08/01 15:49:49 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/hotel.png /tmp/work/dist/images/basic/hotel.png
2023/08/01 15:49:50 Optimizing /tmp/work/dist/images/basic/horse.png
Input size: 4582 (4K)
Result size: 4663 (4K). Percentage of original: 101.768%
Preserving original PNG since it was smaller


2023/08/01 15:49:50 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/horse.png.br /tmp/work/dist/images/basic/horse.png
2023/08/01 15:49:50 br /tmp/work/dist/images/basic/horse.png -> /output/images/basic/horse.png.br
2023/08/01 15:49:50 gz /tmp/work/dist/images/basic/horse.png -> /output/images/basic/horse.png.gz
2023/08/01 15:49:50 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/hotsprings.png /tmp/work/dist/images/basic/hotsprings.png
2023/08/01 15:49:50 Optimizing /tmp/work/dist/images/basic/honeybee.png
Input size: 5851 (5K)
Result size: 5806 (5K). Percentage of original: 99.231%
Result is smaller


2023/08/01 15:49:50 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/honeybee.png.br /tmp/work/dist/images/basic/honeybee.png
2023/08/01 15:49:50 br /tmp/work/dist/images/basic/honeybee.png -> /output/images/basic/honeybee.png.br
2023/08/01 15:49:50 gz /tmp/work/dist/images/basic/honeybee.png -> /output/images/basic/honeybee.png.gz
2023/08/01 15:49:50 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/hourglass_flowing_sand.png /tmp/work/dist/images/basic/hourglass_flowing_sand.png
2023/08/01 15:49:53 Optimizing /tmp/work/dist/images/basic/horse_racing.png
Input size: 5905 (5K)
Result size: 5865 (5K). Percentage of original: 99.323%
Result is smaller


2023/08/01 15:49:53 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/horse_racing.png.br /tmp/work/dist/images/basic/horse_racing.png
2023/08/01 15:49:53 Optimizing /tmp/work/dist/images/basic/hocho.png
Input size: 2455 (2K)
Result size: 2583 (2K). Percentage of original: 105.214%
Preserving original PNG since it was smaller


2023/08/01 15:49:53 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/hocho.png.br /tmp/work/dist/images/basic/hocho.png
2023/08/01 15:49:53 br /tmp/work/dist/images/basic/horse_racing.png -> /output/images/basic/horse_racing.png.br
2023/08/01 15:49:53 gz /tmp/work/dist/images/basic/horse_racing.png -> /output/images/basic/horse_racing.png.gz
2023/08/01 15:49:53 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/hourglass.png /tmp/work/dist/images/basic/hourglass.png
2023/08/01 15:49:53 br /tmp/work/dist/images/basic/hocho.png -> /output/images/basic/hocho.png.br
2023/08/01 15:49:53 gz /tmp/work/dist/images/basic/hocho.png -> /output/images/basic/hocho.png.gz
2023/08/01 15:49:53 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/house_with_garden.png /tmp/work/dist/images/basic/house_with_garden.png
2023/08/01 15:49:55 Optimizing /tmp/work/dist/images/basic/heavy_plus_sign.png
Input size: 264 (0K)
Result size: 312 (0K). Percentage of original: 118.182%
Preserving original PNG since it was smaller


2023/08/01 15:49:55 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/heavy_plus_sign.png.br /tmp/work/dist/images/basic/heavy_plus_sign.png
2023/08/01 15:49:55 br /tmp/work/dist/images/basic/heavy_plus_sign.png -> /output/images/basic/heavy_plus_sign.png.br
2023/08/01 15:49:55 gz /tmp/work/dist/images/basic/heavy_plus_sign.png -> /output/images/basic/heavy_plus_sign.png.gz
2023/08/01 15:49:55 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/house.png /tmp/work/dist/images/basic/house.png
2023/08/01 15:49:57 Optimizing /tmp/work/dist/images/basic/hospital.png
Input size: 4887 (4K)
Result size: 4912 (4K). Percentage of original: 100.512%
Preserving original PNG since it was smaller


2023/08/01 15:49:57 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/hospital.png.br /tmp/work/dist/images/basic/hospital.png
2023/08/01 15:49:57 br /tmp/work/dist/images/basic/hospital.png -> /output/images/basic/hospital.png.br
2023/08/01 15:49:57 gz /tmp/work/dist/images/basic/hospital.png -> /output/images/basic/hospital.png.gz
2023/08/01 15:49:57 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/hurtrealbad.png /tmp/work/dist/images/basic/hurtrealbad.png
2023/08/01 15:49:57 Optimizing /tmp/work/dist/images/basic/hourglass_flowing_sand.png
Input size: 4291 (4K)
Result size: 4349 (4K). Percentage of original: 101.352%
Preserving original PNG since it was smaller


2023/08/01 15:49:57 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/hourglass_flowing_sand.png.br /tmp/work/dist/images/basic/hourglass_flowing_sand.png
2023/08/01 15:49:57 br /tmp/work/dist/images/basic/hourglass_flowing_sand.png -> /output/images/basic/hourglass_flowing_sand.png.br
2023/08/01 15:49:57 gz /tmp/work/dist/images/basic/hourglass_flowing_sand.png -> /output/images/basic/hourglass_flowing_sand.png.gz
2023/08/01 15:49:57 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/hushed.png /tmp/work/dist/images/basic/hushed.png
2023/08/01 15:49:59 Optimizing /tmp/work/dist/images/basic/hotel.png
Input size: 5123 (5K)
Result size: 5148 (5K). Percentage of original: 100.488%
Preserving original PNG since it was smaller


2023/08/01 15:49:59 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/hotel.png.br /tmp/work/dist/images/basic/hotel.png
2023/08/01 15:49:59 br /tmp/work/dist/images/basic/hotel.png -> /output/images/basic/hotel.png.br
2023/08/01 15:49:59 gz /tmp/work/dist/images/basic/hotel.png -> /output/images/basic/hotel.png.gz
2023/08/01 15:49:59 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/ice_cream.png /tmp/work/dist/images/basic/ice_cream.png
2023/08/01 15:50:01 Optimizing /tmp/work/dist/images/basic/hotsprings.png
Input size: 3538 (3K)
Result size: 3689 (3K). Percentage of original: 104.268%
Preserving original PNG since it was smaller


2023/08/01 15:50:01 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/hotsprings.png.br /tmp/work/dist/images/basic/hotsprings.png
2023/08/01 15:50:01 br /tmp/work/dist/images/basic/hotsprings.png -> /output/images/basic/hotsprings.png.br
2023/08/01 15:50:01 gz /tmp/work/dist/images/basic/hotsprings.png -> /output/images/basic/hotsprings.png.gz
2023/08/01 15:50:01 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/icecream.png /tmp/work/dist/images/basic/icecream.png
2023/08/01 15:50:05 Optimizing /tmp/work/dist/images/basic/hourglass.png
Input size: 4492 (4K)
Result size: 4513 (4K). Percentage of original: 100.467%
Preserving original PNG since it was smaller


2023/08/01 15:50:05 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/hourglass.png.br /tmp/work/dist/images/basic/hourglass.png
2023/08/01 15:50:05 br /tmp/work/dist/images/basic/hourglass.png -> /output/images/basic/hourglass.png.br
2023/08/01 15:50:05 gz /tmp/work/dist/images/basic/hourglass.png -> /output/images/basic/hourglass.png.gz
2023/08/01 15:50:05 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/id.png /tmp/work/dist/images/basic/id.png
2023/08/01 15:50:05 Optimizing /tmp/work/dist/images/basic/house_with_garden.png
Input size: 6089 (5K)
Result size: 6186 (6K). Percentage of original: 101.593%
Preserving original PNG since it was smaller


2023/08/01 15:50:05 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/house_with_garden.png.br /tmp/work/dist/images/basic/house_with_garden.png
2023/08/01 15:50:05 br /tmp/work/dist/images/basic/house_with_garden.png -> /output/images/basic/house_with_garden.png.br
2023/08/01 15:50:05 gz /tmp/work/dist/images/basic/house_with_garden.png -> /output/images/basic/house_with_garden.png.gz
2023/08/01 15:50:05 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/ideograph_advantage.png /tmp/work/dist/images/basic/ideograph_advantage.png
2023/08/01 15:50:08 Optimizing /tmp/work/dist/images/basic/heavy_dollar_sign.png
Input size: 1150 (1K)
Result size: 1410 (1K). Percentage of original: 122.609%
Preserving original PNG since it was smaller


2023/08/01 15:50:08 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/heavy_dollar_sign.png.br /tmp/work/dist/images/basic/heavy_dollar_sign.png
2023/08/01 15:50:08 br /tmp/work/dist/images/basic/heavy_dollar_sign.png -> /output/images/basic/heavy_dollar_sign.png.br
2023/08/01 15:50:08 gz /tmp/work/dist/images/basic/heavy_dollar_sign.png -> /output/images/basic/heavy_dollar_sign.png.gz
2023/08/01 15:50:08 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/imp.png /tmp/work/dist/images/basic/imp.png
2023/08/01 15:50:08 Optimizing /tmp/work/dist/images/basic/hushed.png
Input size: 4941 (4K)
Result size: 4871 (4K). Percentage of original: 98.583%
Result is smaller


2023/08/01 15:50:08 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/hushed.png.br /tmp/work/dist/images/basic/hushed.png
2023/08/01 15:50:08 br /tmp/work/dist/images/basic/hushed.png -> /output/images/basic/hushed.png.br
2023/08/01 15:50:08 gz /tmp/work/dist/images/basic/hushed.png -> /output/images/basic/hushed.png.gz
2023/08/01 15:50:08 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/inbox_tray.png /tmp/work/dist/images/basic/inbox_tray.png
2023/08/01 15:50:10 Optimizing /tmp/work/dist/images/basic/ice_cream.png
Input size: 5469 (5K)
Result size: 5457 (5K). Percentage of original: 99.781%
Result is smaller


2023/08/01 15:50:10 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/ice_cream.png.br /tmp/work/dist/images/basic/ice_cream.png
2023/08/01 15:50:10 br /tmp/work/dist/images/basic/ice_cream.png -> /output/images/basic/ice_cream.png.br
2023/08/01 15:50:10 gz /tmp/work/dist/images/basic/ice_cream.png -> /output/images/basic/ice_cream.png.gz
2023/08/01 15:50:10 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/incoming_envelope.png /tmp/work/dist/images/basic/incoming_envelope.png
2023/08/01 15:50:10 Optimizing /tmp/work/dist/images/basic/icecream.png
Input size: 4603 (4K)
Result size: 4659 (4K). Percentage of original: 101.217%
Preserving original PNG since it was smaller


2023/08/01 15:50:10 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/icecream.png.br /tmp/work/dist/images/basic/icecream.png
2023/08/01 15:50:10 br /tmp/work/dist/images/basic/icecream.png -> /output/images/basic/icecream.png.br
2023/08/01 15:50:10 gz /tmp/work/dist/images/basic/icecream.png -> /output/images/basic/icecream.png.gz
2023/08/01 15:50:10 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/information_desk_person.png /tmp/work/dist/images/basic/information_desk_person.png
2023/08/01 15:50:11 Optimizing /tmp/work/dist/images/basic/house.png
Input size: 3510 (3K)
Result size: 3575 (3K). Percentage of original: 101.852%
Preserving original PNG since it was smaller


2023/08/01 15:50:11 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/house.png.br /tmp/work/dist/images/basic/house.png
2023/08/01 15:50:11 br /tmp/work/dist/images/basic/house.png -> /output/images/basic/house.png.br
2023/08/01 15:50:11 gz /tmp/work/dist/images/basic/house.png -> /output/images/basic/house.png.gz
2023/08/01 15:50:11 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/information_source.png /tmp/work/dist/images/basic/information_source.png
2023/08/01 15:50:11 Optimizing /tmp/work/dist/images/basic/ideograph_advantage.png
Input size: 3088 (3K)
Result size: 3174 (3K). Percentage of original: 102.785%
Preserving original PNG since it was smaller


2023/08/01 15:50:11 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/ideograph_advantage.png.br /tmp/work/dist/images/basic/ideograph_advantage.png
2023/08/01 15:50:11 br /tmp/work/dist/images/basic/ideograph_advantage.png -> /output/images/basic/ideograph_advantage.png.br
2023/08/01 15:50:11 gz /tmp/work/dist/images/basic/ideograph_advantage.png -> /output/images/basic/ideograph_advantage.png.gz
2023/08/01 15:50:11 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/innocent.png /tmp/work/dist/images/basic/innocent.png
2023/08/01 15:50:17 Optimizing /tmp/work/dist/images/basic/id.png
Input size: 3905 (3K)
Result size: 3915 (3K). Percentage of original: 100.256%
Preserving original PNG since it was smaller


2023/08/01 15:50:17 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/id.png.br /tmp/work/dist/images/basic/id.png
2023/08/01 15:50:17 br /tmp/work/dist/images/basic/id.png -> /output/images/basic/id.png.br
2023/08/01 15:50:17 gz /tmp/work/dist/images/basic/id.png -> /output/images/basic/id.png.gz
2023/08/01 15:50:17 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/interrobang.png /tmp/work/dist/images/basic/interrobang.png
2023/08/01 15:50:18 Optimizing /tmp/work/dist/images/basic/imp.png
Input size: 6621 (6K)
Result size: 6201 (6K). Percentage of original: 93.657%
Result is smaller


2023/08/01 15:50:18 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/imp.png.br /tmp/work/dist/images/basic/imp.png
2023/08/01 15:50:18 Optimizing /tmp/work/dist/images/basic/inbox_tray.png
Input size: 3700 (3K)
Result size: 3679 (3K). Percentage of original: 99.432%
Result is smaller


2023/08/01 15:50:18 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/inbox_tray.png.br /tmp/work/dist/images/basic/inbox_tray.png
2023/08/01 15:50:18 br /tmp/work/dist/images/basic/imp.png -> /output/images/basic/imp.png.br
2023/08/01 15:50:18 gz /tmp/work/dist/images/basic/imp.png -> /output/images/basic/imp.png.gz
2023/08/01 15:50:18 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/iphone.png /tmp/work/dist/images/basic/iphone.png
2023/08/01 15:50:18 br /tmp/work/dist/images/basic/inbox_tray.png -> /output/images/basic/inbox_tray.png.br
2023/08/01 15:50:18 gz /tmp/work/dist/images/basic/inbox_tray.png -> /output/images/basic/inbox_tray.png.gz
2023/08/01 15:50:18 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/it.png /tmp/work/dist/images/basic/it.png
2023/08/01 15:50:20 Optimizing /tmp/work/dist/images/basic/information_source.png
Input size: 3670 (3K)
Result size: 3716 (3K). Percentage of original: 101.253%
Preserving original PNG since it was smaller


2023/08/01 15:50:20 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/information_source.png.br /tmp/work/dist/images/basic/information_source.png
2023/08/01 15:50:21 br /tmp/work/dist/images/basic/information_source.png -> /output/images/basic/information_source.png.br
2023/08/01 15:50:21 gz /tmp/work/dist/images/basic/information_source.png -> /output/images/basic/information_source.png.gz
2023/08/01 15:50:21 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/izakaya_lantern.png /tmp/work/dist/images/basic/izakaya_lantern.png
2023/08/01 15:50:22 Optimizing /tmp/work/dist/images/basic/innocent.png
Input size: 7000 (6K)
Result size: 6953 (6K). Percentage of original: 99.329%
Result is smaller


2023/08/01 15:50:22 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/innocent.png.br /tmp/work/dist/images/basic/innocent.png
2023/08/01 15:50:22 br /tmp/work/dist/images/basic/innocent.png -> /output/images/basic/innocent.png.br
2023/08/01 15:50:22 gz /tmp/work/dist/images/basic/innocent.png -> /output/images/basic/innocent.png.gz
2023/08/01 15:50:22 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/jack_o_lantern.png /tmp/work/dist/images/basic/jack_o_lantern.png
2023/08/01 15:50:23 Optimizing /tmp/work/dist/images/basic/information_desk_person.png
Input size: 6605 (6K)
Result size: 6702 (6K). Percentage of original: 101.469%
Preserving original PNG since it was smaller


2023/08/01 15:50:23 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/information_desk_person.png.br /tmp/work/dist/images/basic/information_desk_person.png
2023/08/01 15:50:23 br /tmp/work/dist/images/basic/information_desk_person.png -> /output/images/basic/information_desk_person.png.br
2023/08/01 15:50:23 gz /tmp/work/dist/images/basic/information_desk_person.png -> /output/images/basic/information_desk_person.png.gz
2023/08/01 15:50:23 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/japan.png /tmp/work/dist/images/basic/japan.png
2023/08/01 15:50:29 Optimizing /tmp/work/dist/images/basic/interrobang.png
Input size: 2875 (2K)
Result size: 2982 (2K). Percentage of original: 103.722%
Preserving original PNG since it was smaller


2023/08/01 15:50:29 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/interrobang.png.br /tmp/work/dist/images/basic/interrobang.png
2023/08/01 15:50:29 br /tmp/work/dist/images/basic/interrobang.png -> /output/images/basic/interrobang.png.br
2023/08/01 15:50:29 gz /tmp/work/dist/images/basic/interrobang.png -> /output/images/basic/interrobang.png.gz
2023/08/01 15:50:29 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/japanese_castle.png /tmp/work/dist/images/basic/japanese_castle.png
2023/08/01 15:50:30 Optimizing /tmp/work/dist/images/basic/izakaya_lantern.png
Input size: 4064 (3K)
Result size: 4152 (4K). Percentage of original: 102.165%
Preserving original PNG since it was smaller


2023/08/01 15:50:30 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/izakaya_lantern.png.br /tmp/work/dist/images/basic/izakaya_lantern.png
2023/08/01 15:50:30 br /tmp/work/dist/images/basic/izakaya_lantern.png -> /output/images/basic/izakaya_lantern.png.br
2023/08/01 15:50:30 gz /tmp/work/dist/images/basic/izakaya_lantern.png -> /output/images/basic/izakaya_lantern.png.gz
2023/08/01 15:50:30 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/japanese_goblin.png /tmp/work/dist/images/basic/japanese_goblin.png
2023/08/01 15:50:31 Optimizing /tmp/work/dist/images/basic/jack_o_lantern.png
Input size: 5633 (5K)
Result size: 5696 (5K). Percentage of original: 101.118%
Preserving original PNG since it was smaller


2023/08/01 15:50:31 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/jack_o_lantern.png.br /tmp/work/dist/images/basic/jack_o_lantern.png
2023/08/01 15:50:32 br /tmp/work/dist/images/basic/jack_o_lantern.png -> /output/images/basic/jack_o_lantern.png.br
2023/08/01 15:50:32 gz /tmp/work/dist/images/basic/jack_o_lantern.png -> /output/images/basic/jack_o_lantern.png.gz
2023/08/01 15:50:32 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/japanese_ogre.png /tmp/work/dist/images/basic/japanese_ogre.png
2023/08/01 15:50:33 Optimizing /tmp/work/dist/images/basic/iphone.png
Input size: 3499 (3K)
Result size: 3429 (3K). Percentage of original: 97.999%
Result is smaller


2023/08/01 15:50:33 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/iphone.png.br /tmp/work/dist/images/basic/iphone.png
2023/08/01 15:50:33 br /tmp/work/dist/images/basic/iphone.png -> /output/images/basic/iphone.png.br
2023/08/01 15:50:33 gz /tmp/work/dist/images/basic/iphone.png -> /output/images/basic/iphone.png.gz
2023/08/01 15:50:33 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/jeans.png /tmp/work/dist/images/basic/jeans.png
2023/08/01 15:50:34 Optimizing /tmp/work/dist/images/basic/hurtrealbad.png
Input size: 1456 (1K)
Result size: 1534 (1K). Percentage of original: 105.357%
Preserving original PNG since it was smaller


2023/08/01 15:50:34 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/hurtrealbad.png.br /tmp/work/dist/images/basic/hurtrealbad.png
2023/08/01 15:50:34 br /tmp/work/dist/images/basic/hurtrealbad.png -> /output/images/basic/hurtrealbad.png.br
2023/08/01 15:50:34 gz /tmp/work/dist/images/basic/hurtrealbad.png -> /output/images/basic/hurtrealbad.png.gz
2023/08/01 15:50:34 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/joy_cat.png /tmp/work/dist/images/basic/joy_cat.png
2023/08/01 15:50:36 Optimizing /tmp/work/dist/images/basic/japan.png
Input size: 4085 (3K)
Result size: 3972 (3K). Percentage of original: 97.234%
Result is smaller


2023/08/01 15:50:36 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/japan.png.br /tmp/work/dist/images/basic/japan.png
2023/08/01 15:50:36 br /tmp/work/dist/images/basic/japan.png -> /output/images/basic/japan.png.br
2023/08/01 15:50:36 gz /tmp/work/dist/images/basic/japan.png -> /output/images/basic/japan.png.gz
2023/08/01 15:50:36 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/joy.png /tmp/work/dist/images/basic/joy.png
2023/08/01 15:50:41 Optimizing /tmp/work/dist/images/basic/japanese_goblin.png
Input size: 5159 (5K)
Result size: 5196 (5K). Percentage of original: 100.717%
Preserving original PNG since it was smaller


2023/08/01 15:50:41 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/japanese_goblin.png.br /tmp/work/dist/images/basic/japanese_goblin.png
2023/08/01 15:50:41 br /tmp/work/dist/images/basic/japanese_goblin.png -> /output/images/basic/japanese_goblin.png.br
2023/08/01 15:50:41 gz /tmp/work/dist/images/basic/japanese_goblin.png -> /output/images/basic/japanese_goblin.png.gz
2023/08/01 15:50:41 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/jp.png /tmp/work/dist/images/basic/jp.png
2023/08/01 15:50:42 Optimizing /tmp/work/dist/images/basic/japanese_castle.png
Input size: 4939 (4K)
Result size: 4906 (4K). Percentage of original: 99.332%
Result is smaller


2023/08/01 15:50:42 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/japanese_castle.png.br /tmp/work/dist/images/basic/japanese_castle.png
2023/08/01 15:50:42 br /tmp/work/dist/images/basic/japanese_castle.png -> /output/images/basic/japanese_castle.png.br
2023/08/01 15:50:42 gz /tmp/work/dist/images/basic/japanese_castle.png -> /output/images/basic/japanese_castle.png.gz
2023/08/01 15:50:42 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/key.png /tmp/work/dist/images/basic/key.png
2023/08/01 15:50:42 Optimizing /tmp/work/dist/images/basic/japanese_ogre.png
Input size: 7147 (6K)
Result size: 7217 (7K). Percentage of original: 100.979%
Preserving original PNG since it was smaller


2023/08/01 15:50:42 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/japanese_ogre.png.br /tmp/work/dist/images/basic/japanese_ogre.png
2023/08/01 15:50:42 br /tmp/work/dist/images/basic/japanese_ogre.png -> /output/images/basic/japanese_ogre.png.br
2023/08/01 15:50:42 gz /tmp/work/dist/images/basic/japanese_ogre.png -> /output/images/basic/japanese_ogre.png.gz
2023/08/01 15:50:42 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/keycap_ten.png /tmp/work/dist/images/basic/keycap_ten.png
2023/08/01 15:50:43 Optimizing /tmp/work/dist/images/basic/it.png
Input size: 3495 (3K)
Result size: 3278 (3K). Percentage of original: 93.791%
Result is smaller


2023/08/01 15:50:43 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/it.png.br /tmp/work/dist/images/basic/it.png
2023/08/01 15:50:43 br /tmp/work/dist/images/basic/it.png -> /output/images/basic/it.png.br
2023/08/01 15:50:43 gz /tmp/work/dist/images/basic/it.png -> /output/images/basic/it.png.gz
2023/08/01 15:50:43 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/kimono.png /tmp/work/dist/images/basic/kimono.png
2023/08/01 15:50:43 Optimizing /tmp/work/dist/images/basic/jeans.png
Input size: 3470 (3K)
Result size: 3646 (3K). Percentage of original: 105.072%
Preserving original PNG since it was smaller


2023/08/01 15:50:43 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/jeans.png.br /tmp/work/dist/images/basic/jeans.png
2023/08/01 15:50:43 br /tmp/work/dist/images/basic/jeans.png -> /output/images/basic/jeans.png.br
2023/08/01 15:50:43 gz /tmp/work/dist/images/basic/jeans.png -> /output/images/basic/jeans.png.gz
2023/08/01 15:50:43 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/kiss.png /tmp/work/dist/images/basic/kiss.png
2023/08/01 15:50:45 Optimizing /tmp/work/dist/images/basic/joy_cat.png
Input size: 7190 (7K)
Result size: 7280 (7K). Percentage of original: 101.252%
Preserving original PNG since it was smaller


2023/08/01 15:50:45 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/joy_cat.png.br /tmp/work/dist/images/basic/joy_cat.png
2023/08/01 15:50:45 br /tmp/work/dist/images/basic/joy_cat.png -> /output/images/basic/joy_cat.png.br
2023/08/01 15:50:45 gz /tmp/work/dist/images/basic/joy_cat.png -> /output/images/basic/joy_cat.png.gz
2023/08/01 15:50:45 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/kissing_cat.png /tmp/work/dist/images/basic/kissing_cat.png
2023/08/01 15:50:47 Optimizing /tmp/work/dist/images/basic/joy.png
Input size: 6339 (6K)
Result size: 6269 (6K). Percentage of original: 98.896%
Result is smaller


2023/08/01 15:50:47 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/joy.png.br /tmp/work/dist/images/basic/joy.png
2023/08/01 15:50:47 br /tmp/work/dist/images/basic/joy.png -> /output/images/basic/joy.png.br
2023/08/01 15:50:47 gz /tmp/work/dist/images/basic/joy.png -> /output/images/basic/joy.png.gz
2023/08/01 15:50:47 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/kissing_closed_eyes.png /tmp/work/dist/images/basic/kissing_closed_eyes.png
2023/08/01 15:50:48 Optimizing /tmp/work/dist/images/basic/incoming_envelope.png
Input size: 2206 (2K)
Result size: 2320 (2K). Percentage of original: 105.168%
Preserving original PNG since it was smaller


2023/08/01 15:50:48 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/incoming_envelope.png.br /tmp/work/dist/images/basic/incoming_envelope.png
2023/08/01 15:50:48 br /tmp/work/dist/images/basic/incoming_envelope.png -> /output/images/basic/incoming_envelope.png.br
2023/08/01 15:50:48 gz /tmp/work/dist/images/basic/incoming_envelope.png -> /output/images/basic/incoming_envelope.png.gz
2023/08/01 15:50:48 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/kissing_face.png /tmp/work/dist/images/basic/kissing_face.png
2023/08/01 15:50:51 Optimizing /tmp/work/dist/images/basic/kiss.png
Input size: 6276 (6K)
Result size: 6303 (6K). Percentage of original: 100.430%
Preserving original PNG since it was smaller


2023/08/01 15:50:51 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/kiss.png.br /tmp/work/dist/images/basic/kiss.png
2023/08/01 15:50:51 br /tmp/work/dist/images/basic/kiss.png -> /output/images/basic/kiss.png.br
2023/08/01 15:50:51 gz /tmp/work/dist/images/basic/kiss.png -> /output/images/basic/kiss.png.gz
2023/08/01 15:50:51 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/kissing_heart.png /tmp/work/dist/images/basic/kissing_heart.png
2023/08/01 15:50:52 Optimizing /tmp/work/dist/images/basic/key.png
Input size: 3452 (3K)
Result size: 3566 (3K). Percentage of original: 103.302%
Preserving original PNG since it was smaller


2023/08/01 15:50:52 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/key.png.br /tmp/work/dist/images/basic/key.png
2023/08/01 15:50:52 br /tmp/work/dist/images/basic/key.png -> /output/images/basic/key.png.br
2023/08/01 15:50:52 gz /tmp/work/dist/images/basic/key.png -> /output/images/basic/key.png.gz
2023/08/01 15:50:52 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/kissing_smiling_eyes.png /tmp/work/dist/images/basic/kissing_smiling_eyes.png
2023/08/01 15:50:54 Optimizing /tmp/work/dist/images/basic/kimono.png
Input size: 4938 (4K)
Result size: 5025 (4K). Percentage of original: 101.762%
Preserving original PNG since it was smaller


2023/08/01 15:50:54 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/kimono.png.br /tmp/work/dist/images/basic/kimono.png
2023/08/01 15:50:54 br /tmp/work/dist/images/basic/kimono.png -> /output/images/basic/kimono.png.br
2023/08/01 15:50:54 gz /tmp/work/dist/images/basic/kimono.png -> /output/images/basic/kimono.png.gz
2023/08/01 15:50:54 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/kissing.png /tmp/work/dist/images/basic/kissing.png
2023/08/01 15:50:55 Optimizing /tmp/work/dist/images/basic/keycap_ten.png
Input size: 4095 (3K)
Result size: 4061 (3K). Percentage of original: 99.170%
Result is smaller


2023/08/01 15:50:55 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/keycap_ten.png.br /tmp/work/dist/images/basic/keycap_ten.png
2023/08/01 15:50:55 Optimizing /tmp/work/dist/images/basic/kissing_cat.png
Input size: 6801 (6K)
Result size: 6830 (6K). Percentage of original: 100.426%
Preserving original PNG since it was smaller


2023/08/01 15:50:55 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/kissing_cat.png.br /tmp/work/dist/images/basic/kissing_cat.png
2023/08/01 15:50:55 br /tmp/work/dist/images/basic/keycap_ten.png -> /output/images/basic/keycap_ten.png.br
2023/08/01 15:50:55 gz /tmp/work/dist/images/basic/keycap_ten.png -> /output/images/basic/keycap_ten.png.gz
2023/08/01 15:50:55 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/koala.png /tmp/work/dist/images/basic/koala.png
2023/08/01 15:50:55 br /tmp/work/dist/images/basic/kissing_cat.png -> /output/images/basic/kissing_cat.png.br
2023/08/01 15:50:55 gz /tmp/work/dist/images/basic/kissing_cat.png -> /output/images/basic/kissing_cat.png.gz
2023/08/01 15:50:55 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/koko.png /tmp/work/dist/images/basic/koko.png
2023/08/01 15:50:56 Optimizing /tmp/work/dist/images/basic/jp.png
Input size: 2827 (2K)
Result size: 2720 (2K). Percentage of original: 96.215%
Result is smaller


2023/08/01 15:50:56 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/jp.png.br /tmp/work/dist/images/basic/jp.png
2023/08/01 15:50:56 br /tmp/work/dist/images/basic/jp.png -> /output/images/basic/jp.png.br
2023/08/01 15:50:56 gz /tmp/work/dist/images/basic/jp.png -> /output/images/basic/jp.png.gz
2023/08/01 15:50:56 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/kr.png /tmp/work/dist/images/basic/kr.png
2023/08/01 15:51:00 Optimizing /tmp/work/dist/images/basic/kissing_closed_eyes.png
Input size: 5563 (5K)
Result size: 5366 (5K). Percentage of original: 96.459%
Result is smaller


2023/08/01 15:51:00 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/kissing_closed_eyes.png.br /tmp/work/dist/images/basic/kissing_closed_eyes.png
2023/08/01 15:51:00 br /tmp/work/dist/images/basic/kissing_closed_eyes.png -> /output/images/basic/kissing_closed_eyes.png.br
2023/08/01 15:51:00 gz /tmp/work/dist/images/basic/kissing_closed_eyes.png -> /output/images/basic/kissing_closed_eyes.png.gz
2023/08/01 15:51:00 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/large_blue_circle.png /tmp/work/dist/images/basic/large_blue_circle.png
2023/08/01 15:51:00 Optimizing /tmp/work/dist/images/basic/kissing_face.png
Input size: 5563 (5K)
Result size: 5366 (5K). Percentage of original: 96.459%
Result is smaller


2023/08/01 15:51:00 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/kissing_face.png.br /tmp/work/dist/images/basic/kissing_face.png
2023/08/01 15:51:01 br /tmp/work/dist/images/basic/kissing_face.png -> /output/images/basic/kissing_face.png.br
2023/08/01 15:51:01 gz /tmp/work/dist/images/basic/kissing_face.png -> /output/images/basic/kissing_face.png.gz
2023/08/01 15:51:01 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/large_blue_diamond.png /tmp/work/dist/images/basic/large_blue_diamond.png
2023/08/01 15:51:03 Optimizing /tmp/work/dist/images/basic/kissing_heart.png
Input size: 5767 (5K)
Result size: 5642 (5K). Percentage of original: 97.832%
Result is smaller


2023/08/01 15:51:03 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/kissing_heart.png.br /tmp/work/dist/images/basic/kissing_heart.png
2023/08/01 15:51:03 br /tmp/work/dist/images/basic/kissing_heart.png -> /output/images/basic/kissing_heart.png.br
2023/08/01 15:51:03 gz /tmp/work/dist/images/basic/kissing_heart.png -> /output/images/basic/kissing_heart.png.gz
2023/08/01 15:51:03 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/large_orange_diamond.png /tmp/work/dist/images/basic/large_orange_diamond.png
2023/08/01 15:51:04 Optimizing /tmp/work/dist/images/basic/kissing_smiling_eyes.png
Input size: 4999 (4K)
Result size: 4941 (4K). Percentage of original: 98.840%
Result is smaller


2023/08/01 15:51:04 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/kissing_smiling_eyes.png.br /tmp/work/dist/images/basic/kissing_smiling_eyes.png
2023/08/01 15:51:04 br /tmp/work/dist/images/basic/kissing_smiling_eyes.png -> /output/images/basic/kissing_smiling_eyes.png.br
2023/08/01 15:51:04 gz /tmp/work/dist/images/basic/kissing_smiling_eyes.png -> /output/images/basic/kissing_smiling_eyes.png.gz
2023/08/01 15:51:04 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/last_quarter_moon_with_face.png /tmp/work/dist/images/basic/last_quarter_moon_with_face.png
2023/08/01 15:51:05 Optimizing /tmp/work/dist/images/basic/kissing.png
Input size: 4790 (4K)
Result size: 4775 (4K). Percentage of original: 99.687%
Result is smaller


2023/08/01 15:51:05 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/kissing.png.br /tmp/work/dist/images/basic/kissing.png
2023/08/01 15:51:05 br /tmp/work/dist/images/basic/kissing.png -> /output/images/basic/kissing.png.br
2023/08/01 15:51:05 gz /tmp/work/dist/images/basic/kissing.png -> /output/images/basic/kissing.png.gz
2023/08/01 15:51:05 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/last_quarter_moon.png /tmp/work/dist/images/basic/last_quarter_moon.png
2023/08/01 15:51:06 Optimizing /tmp/work/dist/images/basic/koala.png
Input size: 5687 (5K)
Result size: 5663 (5K). Percentage of original: 99.578%
Result is smaller


2023/08/01 15:51:06 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/koala.png.br /tmp/work/dist/images/basic/koala.png
2023/08/01 15:51:06 br /tmp/work/dist/images/basic/koala.png -> /output/images/basic/koala.png.br
2023/08/01 15:51:06 gz /tmp/work/dist/images/basic/koala.png -> /output/images/basic/koala.png.gz
2023/08/01 15:51:06 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/laughing.png /tmp/work/dist/images/basic/laughing.png
2023/08/01 15:51:09 Optimizing /tmp/work/dist/images/basic/kr.png
Input size: 5105 (4K)
Result size: 4987 (4K). Percentage of original: 97.689%
Result is smaller


2023/08/01 15:51:09 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/kr.png.br /tmp/work/dist/images/basic/kr.png
2023/08/01 15:51:09 br /tmp/work/dist/images/basic/kr.png -> /output/images/basic/kr.png.br
2023/08/01 15:51:09 gz /tmp/work/dist/images/basic/kr.png -> /output/images/basic/kr.png.gz
2023/08/01 15:51:09 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/leaves.png /tmp/work/dist/images/basic/leaves.png
2023/08/01 15:51:11 Optimizing /tmp/work/dist/images/basic/last_quarter_moon_with_face.png
Input size: 4328 (4K)
Result size: 4445 (4K). Percentage of original: 102.703%
Preserving original PNG since it was smaller


2023/08/01 15:51:11 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/last_quarter_moon_with_face.png.br /tmp/work/dist/images/basic/last_quarter_moon_with_face.png
2023/08/01 15:51:11 br /tmp/work/dist/images/basic/last_quarter_moon_with_face.png -> /output/images/basic/last_quarter_moon_with_face.png.br
2023/08/01 15:51:11 gz /tmp/work/dist/images/basic/last_quarter_moon_with_face.png -> /output/images/basic/last_quarter_moon_with_face.png.gz
2023/08/01 15:51:11 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/ledger.png /tmp/work/dist/images/basic/ledger.png
2023/08/01 15:51:14 Optimizing /tmp/work/dist/images/basic/large_blue_diamond.png
Input size: 3790 (3K)
Result size: 3710 (3K). Percentage of original: 97.889%
Result is smaller


2023/08/01 15:51:14 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/large_blue_diamond.png.br /tmp/work/dist/images/basic/large_blue_diamond.png
2023/08/01 15:51:14 br /tmp/work/dist/images/basic/large_blue_diamond.png -> /output/images/basic/large_blue_diamond.png.br
2023/08/01 15:51:14 gz /tmp/work/dist/images/basic/large_blue_diamond.png -> /output/images/basic/large_blue_diamond.png.gz
2023/08/01 15:51:14 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/left_luggage.png /tmp/work/dist/images/basic/left_luggage.png
2023/08/01 15:51:15 Optimizing /tmp/work/dist/images/basic/laughing.png
Input size: 6347 (6K)
Result size: 6342 (6K). Percentage of original: 99.921%
Result is smaller


2023/08/01 15:51:15 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/laughing.png.br /tmp/work/dist/images/basic/laughing.png
2023/08/01 15:51:15 Optimizing /tmp/work/dist/images/basic/koko.png
Input size: 2854 (2K)
Result size: 2788 (2K). Percentage of original: 97.687%
Result is smaller


2023/08/01 15:51:15 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/koko.png.br /tmp/work/dist/images/basic/koko.png
2023/08/01 15:51:15 br /tmp/work/dist/images/basic/laughing.png -> /output/images/basic/laughing.png.br
2023/08/01 15:51:15 gz /tmp/work/dist/images/basic/laughing.png -> /output/images/basic/laughing.png.gz
2023/08/01 15:51:15 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/left_right_arrow.png /tmp/work/dist/images/basic/left_right_arrow.png
2023/08/01 15:51:15 br /tmp/work/dist/images/basic/koko.png -> /output/images/basic/koko.png.br
2023/08/01 15:51:15 gz /tmp/work/dist/images/basic/koko.png -> /output/images/basic/koko.png.gz
2023/08/01 15:51:15 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/leftwards_arrow_with_hook.png /tmp/work/dist/images/basic/leftwards_arrow_with_hook.png
2023/08/01 15:51:16 Optimizing /tmp/work/dist/images/basic/last_quarter_moon.png
Input size: 6149 (6K)
Result size: 6161 (6K). Percentage of original: 100.195%
Preserving original PNG since it was smaller


2023/08/01 15:51:16 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/last_quarter_moon.png.br /tmp/work/dist/images/basic/last_quarter_moon.png
2023/08/01 15:51:16 Optimizing /tmp/work/dist/images/basic/large_blue_circle.png
Input size: 4637 (4K)
Result size: 4535 (4K). Percentage of original: 97.800%
Result is smaller


2023/08/01 15:51:16 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/large_blue_circle.png.br /tmp/work/dist/images/basic/large_blue_circle.png
2023/08/01 15:51:16 br /tmp/work/dist/images/basic/last_quarter_moon.png -> /output/images/basic/last_quarter_moon.png.br
2023/08/01 15:51:16 gz /tmp/work/dist/images/basic/last_quarter_moon.png -> /output/images/basic/last_quarter_moon.png.gz
2023/08/01 15:51:16 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/lemon.png /tmp/work/dist/images/basic/lemon.png
2023/08/01 15:51:16 br /tmp/work/dist/images/basic/large_blue_circle.png -> /output/images/basic/large_blue_circle.png.br
2023/08/01 15:51:16 gz /tmp/work/dist/images/basic/large_blue_circle.png -> /output/images/basic/large_blue_circle.png.gz
2023/08/01 15:51:16 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/leo.png /tmp/work/dist/images/basic/leo.png
2023/08/01 15:51:18 Optimizing /tmp/work/dist/images/basic/leaves.png
Input size: 5571 (5K)
Result size: 5637 (5K). Percentage of original: 101.185%
Preserving original PNG since it was smaller


2023/08/01 15:51:18 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/leaves.png.br /tmp/work/dist/images/basic/leaves.png
2023/08/01 15:51:18 br /tmp/work/dist/images/basic/leaves.png -> /output/images/basic/leaves.png.br
2023/08/01 15:51:19 gz /tmp/work/dist/images/basic/leaves.png -> /output/images/basic/leaves.png.gz
2023/08/01 15:51:19 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/leopard.png /tmp/work/dist/images/basic/leopard.png
2023/08/01 15:51:19 Optimizing /tmp/work/dist/images/basic/large_orange_diamond.png
Input size: 3849 (3K)
Result size: 3769 (3K). Percentage of original: 97.922%
Result is smaller


2023/08/01 15:51:19 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/large_orange_diamond.png.br /tmp/work/dist/images/basic/large_orange_diamond.png
2023/08/01 15:51:19 br /tmp/work/dist/images/basic/large_orange_diamond.png -> /output/images/basic/large_orange_diamond.png.br
2023/08/01 15:51:19 gz /tmp/work/dist/images/basic/large_orange_diamond.png -> /output/images/basic/large_orange_diamond.png.gz
2023/08/01 15:51:19 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/libra.png /tmp/work/dist/images/basic/libra.png
2023/08/01 15:51:23 Optimizing /tmp/work/dist/images/basic/lemon.png
Input size: 6055 (5K)
Result size: 6135 (5K). Percentage of original: 101.321%
Preserving original PNG since it was smaller


2023/08/01 15:51:23 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/lemon.png.br /tmp/work/dist/images/basic/lemon.png
2023/08/01 15:51:23 br /tmp/work/dist/images/basic/lemon.png -> /output/images/basic/lemon.png.br
2023/08/01 15:51:23 gz /tmp/work/dist/images/basic/lemon.png -> /output/images/basic/lemon.png.gz
2023/08/01 15:51:23 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/light_rail.png /tmp/work/dist/images/basic/light_rail.png
2023/08/01 15:51:25 Optimizing /tmp/work/dist/images/basic/leftwards_arrow_with_hook.png
Input size: 3775 (3K)
Result size: 3796 (3K). Percentage of original: 100.556%
Preserving original PNG since it was smaller


2023/08/01 15:51:25 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/leftwards_arrow_with_hook.png.br /tmp/work/dist/images/basic/leftwards_arrow_with_hook.png
2023/08/01 15:51:25 Optimizing /tmp/work/dist/images/basic/ledger.png
Input size: 5921 (5K)
Result size: 5941 (5K). Percentage of original: 100.338%
Preserving original PNG since it was smaller


2023/08/01 15:51:25 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/ledger.png.br /tmp/work/dist/images/basic/ledger.png
2023/08/01 15:51:25 br /tmp/work/dist/images/basic/leftwards_arrow_with_hook.png -> /output/images/basic/leftwards_arrow_with_hook.png.br
2023/08/01 15:51:25 gz /tmp/work/dist/images/basic/leftwards_arrow_with_hook.png -> /output/images/basic/leftwards_arrow_with_hook.png.gz
2023/08/01 15:51:25 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/link.png /tmp/work/dist/images/basic/link.png
2023/08/01 15:51:25 br /tmp/work/dist/images/basic/ledger.png -> /output/images/basic/ledger.png.br
2023/08/01 15:51:25 gz /tmp/work/dist/images/basic/ledger.png -> /output/images/basic/ledger.png.gz
2023/08/01 15:51:25 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/lips.png /tmp/work/dist/images/basic/lips.png
2023/08/01 15:51:25 Optimizing /tmp/work/dist/images/basic/left_luggage.png
Input size: 4025 (3K)
Result size: 4097 (4K). Percentage of original: 101.789%
Preserving original PNG since it was smaller


2023/08/01 15:51:25 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/left_luggage.png.br /tmp/work/dist/images/basic/left_luggage.png
2023/08/01 15:51:26 br /tmp/work/dist/images/basic/left_luggage.png -> /output/images/basic/left_luggage.png.br
2023/08/01 15:51:26 gz /tmp/work/dist/images/basic/left_luggage.png -> /output/images/basic/left_luggage.png.gz
2023/08/01 15:51:26 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/lipstick.png /tmp/work/dist/images/basic/lipstick.png
2023/08/01 15:51:26 Optimizing /tmp/work/dist/images/basic/left_right_arrow.png
Input size: 3413 (3K)
Result size: 3340 (3K). Percentage of original: 97.861%
Result is smaller


2023/08/01 15:51:26 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/left_right_arrow.png.br /tmp/work/dist/images/basic/left_right_arrow.png
2023/08/01 15:51:26 br /tmp/work/dist/images/basic/left_right_arrow.png -> /output/images/basic/left_right_arrow.png.br
2023/08/01 15:51:26 gz /tmp/work/dist/images/basic/left_right_arrow.png -> /output/images/basic/left_right_arrow.png.gz
2023/08/01 15:51:26 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/lock_with_ink_pen.png /tmp/work/dist/images/basic/lock_with_ink_pen.png
2023/08/01 15:51:27 Optimizing /tmp/work/dist/images/basic/leo.png
Input size: 4913 (4K)
Result size: 4834 (4K). Percentage of original: 98.392%
Result is smaller


2023/08/01 15:51:27 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/leo.png.br /tmp/work/dist/images/basic/leo.png
2023/08/01 15:51:27 br /tmp/work/dist/images/basic/leo.png -> /output/images/basic/leo.png.br
2023/08/01 15:51:27 gz /tmp/work/dist/images/basic/leo.png -> /output/images/basic/leo.png.gz
2023/08/01 15:51:27 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/lock.png /tmp/work/dist/images/basic/lock.png
2023/08/01 15:51:27 Optimizing /tmp/work/dist/images/basic/leopard.png
Input size: 5348 (5K)
Result size: 5506 (5K). Percentage of original: 102.954%
Preserving original PNG since it was smaller


2023/08/01 15:51:27 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/leopard.png.br /tmp/work/dist/images/basic/leopard.png
2023/08/01 15:51:27 br /tmp/work/dist/images/basic/leopard.png -> /output/images/basic/leopard.png.br
2023/08/01 15:51:27 gz /tmp/work/dist/images/basic/leopard.png -> /output/images/basic/leopard.png.gz
2023/08/01 15:51:27 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/lollipop.png /tmp/work/dist/images/basic/lollipop.png
2023/08/01 15:51:28 Optimizing /tmp/work/dist/images/basic/libra.png
Input size: 4218 (4K)
Result size: 4108 (4K). Percentage of original: 97.392%
Result is smaller


2023/08/01 15:51:28 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/libra.png.br /tmp/work/dist/images/basic/libra.png
2023/08/01 15:51:28 br /tmp/work/dist/images/basic/libra.png -> /output/images/basic/libra.png.br
2023/08/01 15:51:28 gz /tmp/work/dist/images/basic/libra.png -> /output/images/basic/libra.png.gz
2023/08/01 15:51:28 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/loop.png /tmp/work/dist/images/basic/loop.png
2023/08/01 15:51:29 Optimizing /tmp/work/dist/images/basic/link.png
Input size: 2619 (2K)
Result size: 2748 (2K). Percentage of original: 104.926%
Preserving original PNG since it was smaller


2023/08/01 15:51:29 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/link.png.br /tmp/work/dist/images/basic/link.png
2023/08/01 15:51:29 br /tmp/work/dist/images/basic/link.png -> /output/images/basic/link.png.br
2023/08/01 15:51:29 gz /tmp/work/dist/images/basic/link.png -> /output/images/basic/link.png.gz
2023/08/01 15:51:29 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/loudspeaker.png /tmp/work/dist/images/basic/loudspeaker.png
2023/08/01 15:51:31 Optimizing /tmp/work/dist/images/basic/lips.png
Input size: 3738 (3K)
Result size: 3614 (3K). Percentage of original: 96.683%
Result is smaller


2023/08/01 15:51:31 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/lips.png.br /tmp/work/dist/images/basic/lips.png
2023/08/01 15:51:31 br /tmp/work/dist/images/basic/lips.png -> /output/images/basic/lips.png.br
2023/08/01 15:51:31 gz /tmp/work/dist/images/basic/lips.png -> /output/images/basic/lips.png.gz
2023/08/01 15:51:31 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/love_hotel.png /tmp/work/dist/images/basic/love_hotel.png
2023/08/01 15:51:34 Optimizing /tmp/work/dist/images/basic/light_rail.png
Input size: 3792 (3K)
Result size: 3913 (3K). Percentage of original: 103.191%
Preserving original PNG since it was smaller


2023/08/01 15:51:34 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/light_rail.png.br /tmp/work/dist/images/basic/light_rail.png
2023/08/01 15:51:34 br /tmp/work/dist/images/basic/light_rail.png -> /output/images/basic/light_rail.png.br
2023/08/01 15:51:34 gz /tmp/work/dist/images/basic/light_rail.png -> /output/images/basic/light_rail.png.gz
2023/08/01 15:51:34 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/love_letter.png /tmp/work/dist/images/basic/love_letter.png
2023/08/01 15:51:35 Optimizing /tmp/work/dist/images/basic/loop.png
Input size: 3417 (3K)
Result size: 3434 (3K). Percentage of original: 100.498%
Preserving original PNG since it was smaller


2023/08/01 15:51:35 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/loop.png.br /tmp/work/dist/images/basic/loop.png
2023/08/01 15:51:35 br /tmp/work/dist/images/basic/loop.png -> /output/images/basic/loop.png.br
2023/08/01 15:51:35 gz /tmp/work/dist/images/basic/loop.png -> /output/images/basic/loop.png.gz
2023/08/01 15:51:35 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/low_brightness.png /tmp/work/dist/images/basic/low_brightness.png
2023/08/01 15:51:36 Optimizing /tmp/work/dist/images/basic/lipstick.png
Input size: 3384 (3K)
Result size: 3456 (3K). Percentage of original: 102.128%
Preserving original PNG since it was smaller


2023/08/01 15:51:36 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/lipstick.png.br /tmp/work/dist/images/basic/lipstick.png
2023/08/01 15:51:36 br /tmp/work/dist/images/basic/lipstick.png -> /output/images/basic/lipstick.png.br
2023/08/01 15:51:36 gz /tmp/work/dist/images/basic/lipstick.png -> /output/images/basic/lipstick.png.gz
2023/08/01 15:51:36 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/m.png /tmp/work/dist/images/basic/m.png
2023/08/01 15:51:36 Optimizing /tmp/work/dist/images/basic/lock_with_ink_pen.png
Input size: 4967 (4K)
Result size: 5041 (4K). Percentage of original: 101.490%
Preserving original PNG since it was smaller


2023/08/01 15:51:36 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/lock_with_ink_pen.png.br /tmp/work/dist/images/basic/lock_with_ink_pen.png
2023/08/01 15:51:37 br /tmp/work/dist/images/basic/lock_with_ink_pen.png -> /output/images/basic/lock_with_ink_pen.png.br
2023/08/01 15:51:37 gz /tmp/work/dist/images/basic/lock_with_ink_pen.png -> /output/images/basic/lock_with_ink_pen.png.gz
2023/08/01 15:51:37 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/mag_right.png /tmp/work/dist/images/basic/mag_right.png
2023/08/01 15:51:38 Optimizing /tmp/work/dist/images/basic/lollipop.png
Input size: 5771 (5K)
Result size: 5778 (5K). Percentage of original: 100.121%
Preserving original PNG since it was smaller


2023/08/01 15:51:38 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/lollipop.png.br /tmp/work/dist/images/basic/lollipop.png
2023/08/01 15:51:38 br /tmp/work/dist/images/basic/lollipop.png -> /output/images/basic/lollipop.png.br
2023/08/01 15:51:38 gz /tmp/work/dist/images/basic/lollipop.png -> /output/images/basic/lollipop.png.gz
2023/08/01 15:51:38 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/mag.png /tmp/work/dist/images/basic/mag.png
2023/08/01 15:51:40 Optimizing /tmp/work/dist/images/basic/loudspeaker.png
Input size: 6001 (5K)
Result size: 6029 (5K). Percentage of original: 100.467%
Preserving original PNG since it was smaller


2023/08/01 15:51:40 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/loudspeaker.png.br /tmp/work/dist/images/basic/loudspeaker.png
2023/08/01 15:51:40 br /tmp/work/dist/images/basic/loudspeaker.png -> /output/images/basic/loudspeaker.png.br
2023/08/01 15:51:40 gz /tmp/work/dist/images/basic/loudspeaker.png -> /output/images/basic/loudspeaker.png.gz
2023/08/01 15:51:40 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/mahjong.png /tmp/work/dist/images/basic/mahjong.png
2023/08/01 15:51:41 Optimizing /tmp/work/dist/images/basic/love_hotel.png
Input size: 5941 (5K)
Result size: 5943 (5K). Percentage of original: 100.034%
Preserving original PNG since it was smaller


2023/08/01 15:51:41 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/love_hotel.png.br /tmp/work/dist/images/basic/love_hotel.png
2023/08/01 15:51:41 br /tmp/work/dist/images/basic/love_hotel.png -> /output/images/basic/love_hotel.png.br
2023/08/01 15:51:41 gz /tmp/work/dist/images/basic/love_hotel.png -> /output/images/basic/love_hotel.png.gz
2023/08/01 15:51:41 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/mailbox_closed.png /tmp/work/dist/images/basic/mailbox_closed.png
2023/08/01 15:51:41 Optimizing /tmp/work/dist/images/basic/lock.png
Input size: 3676 (3K)
Result size: 3697 (3K). Percentage of original: 100.571%
Preserving original PNG since it was smaller


2023/08/01 15:51:41 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/lock.png.br /tmp/work/dist/images/basic/lock.png
2023/08/01 15:51:41 br /tmp/work/dist/images/basic/lock.png -> /output/images/basic/lock.png.br
2023/08/01 15:51:41 gz /tmp/work/dist/images/basic/lock.png -> /output/images/basic/lock.png.gz
2023/08/01 15:51:41 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/mailbox_with_mail.png /tmp/work/dist/images/basic/mailbox_with_mail.png
2023/08/01 15:51:42 Optimizing /tmp/work/dist/images/basic/love_letter.png
Input size: 2467 (2K)
Result size: 2366 (2K). Percentage of original: 95.906%
Result is smaller


2023/08/01 15:51:42 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/love_letter.png.br /tmp/work/dist/images/basic/love_letter.png
2023/08/01 15:51:42 br /tmp/work/dist/images/basic/love_letter.png -> /output/images/basic/love_letter.png.br
2023/08/01 15:51:42 gz /tmp/work/dist/images/basic/love_letter.png -> /output/images/basic/love_letter.png.gz
2023/08/01 15:51:42 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/mailbox_with_no_mail.png /tmp/work/dist/images/basic/mailbox_with_no_mail.png
2023/08/01 15:51:43 Optimizing /tmp/work/dist/images/basic/m.png
Input size: 4734 (4K)
Result size: 4777 (4K). Percentage of original: 100.908%
Preserving original PNG since it was smaller


2023/08/01 15:51:43 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/m.png.br /tmp/work/dist/images/basic/m.png
2023/08/01 15:51:43 br /tmp/work/dist/images/basic/m.png -> /output/images/basic/m.png.br
2023/08/01 15:51:43 gz /tmp/work/dist/images/basic/m.png -> /output/images/basic/m.png.gz
2023/08/01 15:51:43 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/mailbox.png /tmp/work/dist/images/basic/mailbox.png
2023/08/01 15:51:43 Optimizing /tmp/work/dist/images/basic/mag.png
Input size: 3040 (2K)
Result size: 3023 (2K). Percentage of original: 99.441%
Result is smaller


2023/08/01 15:51:43 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/mag.png.br /tmp/work/dist/images/basic/mag.png
2023/08/01 15:51:43 br /tmp/work/dist/images/basic/mag.png -> /output/images/basic/mag.png.br
2023/08/01 15:51:43 gz /tmp/work/dist/images/basic/mag.png -> /output/images/basic/mag.png.gz
2023/08/01 15:51:43 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/man_with_gua_pi_mao.png /tmp/work/dist/images/basic/man_with_gua_pi_mao.png
2023/08/01 15:51:48 Optimizing /tmp/work/dist/images/basic/mag_right.png
Input size: 3629 (3K)
Result size: 3681 (3K). Percentage of original: 101.433%
Preserving original PNG since it was smaller


2023/08/01 15:51:48 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/mag_right.png.br /tmp/work/dist/images/basic/mag_right.png
2023/08/01 15:51:48 br /tmp/work/dist/images/basic/mag_right.png -> /output/images/basic/mag_right.png.br
2023/08/01 15:51:48 gz /tmp/work/dist/images/basic/mag_right.png -> /output/images/basic/mag_right.png.gz
2023/08/01 15:51:48 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/man_with_turban.png /tmp/work/dist/images/basic/man_with_turban.png
2023/08/01 15:51:48 Optimizing /tmp/work/dist/images/basic/low_brightness.png
Input size: 2498 (2K)
Result size: 2598 (2K). Percentage of original: 104.003%
Preserving original PNG since it was smaller


2023/08/01 15:51:48 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/low_brightness.png.br /tmp/work/dist/images/basic/low_brightness.png
2023/08/01 15:51:48 br /tmp/work/dist/images/basic/low_brightness.png -> /output/images/basic/low_brightness.png.br
2023/08/01 15:51:48 gz /tmp/work/dist/images/basic/low_brightness.png -> /output/images/basic/low_brightness.png.gz
2023/08/01 15:51:48 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/man.png /tmp/work/dist/images/basic/man.png
2023/08/01 15:51:51 Optimizing /tmp/work/dist/images/basic/mahjong.png
Input size: 3309 (3K)
Result size: 3263 (3K). Percentage of original: 98.610%
Result is smaller


2023/08/01 15:51:51 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/mahjong.png.br /tmp/work/dist/images/basic/mahjong.png
2023/08/01 15:51:51 br /tmp/work/dist/images/basic/mahjong.png -> /output/images/basic/mahjong.png.br
2023/08/01 15:51:51 gz /tmp/work/dist/images/basic/mahjong.png -> /output/images/basic/mahjong.png.gz
2023/08/01 15:51:51 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/mans_shoe.png /tmp/work/dist/images/basic/mans_shoe.png
2023/08/01 15:51:54 Optimizing /tmp/work/dist/images/basic/mailbox_with_no_mail.png
Input size: 3101 (3K)
Result size: 3180 (3K). Percentage of original: 102.548%
Preserving original PNG since it was smaller


2023/08/01 15:51:54 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/mailbox_with_no_mail.png.br /tmp/work/dist/images/basic/mailbox_with_no_mail.png
2023/08/01 15:51:54 br /tmp/work/dist/images/basic/mailbox_with_no_mail.png -> /output/images/basic/mailbox_with_no_mail.png.br
2023/08/01 15:51:54 gz /tmp/work/dist/images/basic/mailbox_with_no_mail.png -> /output/images/basic/mailbox_with_no_mail.png.gz
2023/08/01 15:51:54 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/maple_leaf.png /tmp/work/dist/images/basic/maple_leaf.png
2023/08/01 15:51:56 Optimizing /tmp/work/dist/images/basic/mailbox_closed.png
Input size: 4360 (4K)
Result size: 4275 (4K). Percentage of original: 98.050%
Result is smaller


2023/08/01 15:51:56 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/mailbox_closed.png.br /tmp/work/dist/images/basic/mailbox_closed.png
2023/08/01 15:51:57 br /tmp/work/dist/images/basic/mailbox_closed.png -> /output/images/basic/mailbox_closed.png.br
2023/08/01 15:51:57 gz /tmp/work/dist/images/basic/mailbox_closed.png -> /output/images/basic/mailbox_closed.png.gz
2023/08/01 15:51:57 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/mask.png /tmp/work/dist/images/basic/mask.png
2023/08/01 15:51:57 Optimizing /tmp/work/dist/images/basic/man_with_gua_pi_mao.png
Input size: 5324 (5K)
Result size: 5332 (5K). Percentage of original: 100.150%
Preserving original PNG since it was smaller


2023/08/01 15:51:57 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/man_with_gua_pi_mao.png.br /tmp/work/dist/images/basic/man_with_gua_pi_mao.png
2023/08/01 15:51:57 br /tmp/work/dist/images/basic/man_with_gua_pi_mao.png -> /output/images/basic/man_with_gua_pi_mao.png.br
2023/08/01 15:51:57 gz /tmp/work/dist/images/basic/man_with_gua_pi_mao.png -> /output/images/basic/man_with_gua_pi_mao.png.gz
2023/08/01 15:51:57 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/massage.png /tmp/work/dist/images/basic/massage.png
2023/08/01 15:51:57 Optimizing /tmp/work/dist/images/basic/mailbox_with_mail.png
Input size: 4581 (4K)
Result size: 4611 (4K). Percentage of original: 100.655%
Preserving original PNG since it was smaller


2023/08/01 15:51:57 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/mailbox_with_mail.png.br /tmp/work/dist/images/basic/mailbox_with_mail.png
2023/08/01 15:51:57 br /tmp/work/dist/images/basic/mailbox_with_mail.png -> /output/images/basic/mailbox_with_mail.png.br
2023/08/01 15:51:57 gz /tmp/work/dist/images/basic/mailbox_with_mail.png -> /output/images/basic/mailbox_with_mail.png.gz
2023/08/01 15:51:57 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/meat_on_bone.png /tmp/work/dist/images/basic/meat_on_bone.png
2023/08/01 15:52:01 Optimizing /tmp/work/dist/images/basic/man_with_turban.png
Input size: 6528 (6K)
Result size: 6440 (6K). Percentage of original: 98.652%
Result is smaller


2023/08/01 15:52:01 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/man_with_turban.png.br /tmp/work/dist/images/basic/man_with_turban.png
2023/08/01 15:52:01 br /tmp/work/dist/images/basic/man_with_turban.png -> /output/images/basic/man_with_turban.png.br
2023/08/01 15:52:01 gz /tmp/work/dist/images/basic/man_with_turban.png -> /output/images/basic/man_with_turban.png.gz
2023/08/01 15:52:01 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/mega.png /tmp/work/dist/images/basic/mega.png
2023/08/01 15:52:01 Optimizing /tmp/work/dist/images/basic/mans_shoe.png
Input size: 4749 (4K)
Result size: 4744 (4K). Percentage of original: 99.895%
Result is smaller


2023/08/01 15:52:01 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/mans_shoe.png.br /tmp/work/dist/images/basic/mans_shoe.png
2023/08/01 15:52:01 br /tmp/work/dist/images/basic/mans_shoe.png -> /output/images/basic/mans_shoe.png.br
2023/08/01 15:52:01 gz /tmp/work/dist/images/basic/mans_shoe.png -> /output/images/basic/mans_shoe.png.gz
2023/08/01 15:52:01 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/melon.png /tmp/work/dist/images/basic/melon.png
2023/08/01 15:52:01 Optimizing /tmp/work/dist/images/basic/man.png
Input size: 6023 (5K)
Result size: 5934 (5K). Percentage of original: 98.522%
Result is smaller


2023/08/01 15:52:01 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/man.png.br /tmp/work/dist/images/basic/man.png
2023/08/01 15:52:01 br /tmp/work/dist/images/basic/man.png -> /output/images/basic/man.png.br
2023/08/01 15:52:01 gz /tmp/work/dist/images/basic/man.png -> /output/images/basic/man.png.gz
2023/08/01 15:52:01 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/memo.png /tmp/work/dist/images/basic/memo.png
2023/08/01 15:52:04 Optimizing /tmp/work/dist/images/basic/mailbox.png
Input size: 4196 (4K)
Result size: 4194 (4K). Percentage of original: 99.952%
Result is smaller


2023/08/01 15:52:04 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/mailbox.png.br /tmp/work/dist/images/basic/mailbox.png
2023/08/01 15:52:04 br /tmp/work/dist/images/basic/mailbox.png -> /output/images/basic/mailbox.png.br
2023/08/01 15:52:04 gz /tmp/work/dist/images/basic/mailbox.png -> /output/images/basic/mailbox.png.gz
2023/08/01 15:52:04 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/mens.png /tmp/work/dist/images/basic/mens.png
2023/08/01 15:52:05 Optimizing /tmp/work/dist/images/basic/maple_leaf.png
Input size: 4450 (4K)
Result size: 4517 (4K). Percentage of original: 101.506%
Preserving original PNG since it was smaller


2023/08/01 15:52:05 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/maple_leaf.png.br /tmp/work/dist/images/basic/maple_leaf.png
2023/08/01 15:52:05 br /tmp/work/dist/images/basic/maple_leaf.png -> /output/images/basic/maple_leaf.png.br
2023/08/01 15:52:05 gz /tmp/work/dist/images/basic/maple_leaf.png -> /output/images/basic/maple_leaf.png.gz
2023/08/01 15:52:05 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/metal.png /tmp/work/dist/images/basic/metal.png
2023/08/01 15:52:05 Optimizing /tmp/work/dist/images/basic/meat_on_bone.png
Input size: 5425 (5K)
Result size: 5482 (5K). Percentage of original: 101.051%
Preserving original PNG since it was smaller


2023/08/01 15:52:05 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/meat_on_bone.png.br /tmp/work/dist/images/basic/meat_on_bone.png
2023/08/01 15:52:05 br /tmp/work/dist/images/basic/meat_on_bone.png -> /output/images/basic/meat_on_bone.png.br
2023/08/01 15:52:05 gz /tmp/work/dist/images/basic/meat_on_bone.png -> /output/images/basic/meat_on_bone.png.gz
2023/08/01 15:52:05 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/metro.png /tmp/work/dist/images/basic/metro.png
2023/08/01 15:52:09 Optimizing /tmp/work/dist/images/basic/mask.png
Input size: 5235 (5K)
Result size: 5152 (5K). Percentage of original: 98.415%
Result is smaller


2023/08/01 15:52:09 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/mask.png.br /tmp/work/dist/images/basic/mask.png
2023/08/01 15:52:09 br /tmp/work/dist/images/basic/mask.png -> /output/images/basic/mask.png.br
2023/08/01 15:52:09 gz /tmp/work/dist/images/basic/mask.png -> /output/images/basic/mask.png.gz
2023/08/01 15:52:09 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/microphone.png /tmp/work/dist/images/basic/microphone.png
2023/08/01 15:52:11 Optimizing /tmp/work/dist/images/basic/mega.png
Input size: 4680 (4K)
Result size: 4694 (4K). Percentage of original: 100.299%
Preserving original PNG since it was smaller


2023/08/01 15:52:11 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/mega.png.br /tmp/work/dist/images/basic/mega.png
2023/08/01 15:52:11 br /tmp/work/dist/images/basic/mega.png -> /output/images/basic/mega.png.br
2023/08/01 15:52:11 gz /tmp/work/dist/images/basic/mega.png -> /output/images/basic/mega.png.gz
2023/08/01 15:52:11 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/microscope.png /tmp/work/dist/images/basic/microscope.png
2023/08/01 15:52:11 Optimizing /tmp/work/dist/images/basic/melon.png
Input size: 8233 (8K)
Result size: 8369 (8K). Percentage of original: 101.652%
Preserving original PNG since it was smaller


2023/08/01 15:52:11 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/melon.png.br /tmp/work/dist/images/basic/melon.png
2023/08/01 15:52:12 br /tmp/work/dist/images/basic/melon.png -> /output/images/basic/melon.png.br
2023/08/01 15:52:12 gz /tmp/work/dist/images/basic/melon.png -> /output/images/basic/melon.png.gz
2023/08/01 15:52:12 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/milky_way.png /tmp/work/dist/images/basic/milky_way.png
2023/08/01 15:52:14 Optimizing /tmp/work/dist/images/basic/memo.png
Input size: 4945 (4K)
Result size: 4989 (4K). Percentage of original: 100.890%
Preserving original PNG since it was smaller


2023/08/01 15:52:14 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/memo.png.br /tmp/work/dist/images/basic/memo.png
2023/08/01 15:52:14 br /tmp/work/dist/images/basic/memo.png -> /output/images/basic/memo.png.br
2023/08/01 15:52:14 gz /tmp/work/dist/images/basic/memo.png -> /output/images/basic/memo.png.gz
2023/08/01 15:52:14 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/minibus.png /tmp/work/dist/images/basic/minibus.png
2023/08/01 15:52:14 Optimizing /tmp/work/dist/images/basic/massage.png
Input size: 6036 (5K)
Result size: 6159 (6K). Percentage of original: 102.038%
Preserving original PNG since it was smaller


2023/08/01 15:52:14 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/massage.png.br /tmp/work/dist/images/basic/massage.png
2023/08/01 15:52:15 br /tmp/work/dist/images/basic/massage.png -> /output/images/basic/massage.png.br
2023/08/01 15:52:15 gz /tmp/work/dist/images/basic/massage.png -> /output/images/basic/massage.png.gz
2023/08/01 15:52:15 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/minidisc.png /tmp/work/dist/images/basic/minidisc.png
2023/08/01 15:52:15 Optimizing /tmp/work/dist/images/basic/mens.png
Input size: 3368 (3K)
Result size: 3232 (3K). Percentage of original: 95.962%
Result is smaller


2023/08/01 15:52:15 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/mens.png.br /tmp/work/dist/images/basic/mens.png
2023/08/01 15:52:15 br /tmp/work/dist/images/basic/mens.png -> /output/images/basic/mens.png.br
2023/08/01 15:52:15 gz /tmp/work/dist/images/basic/mens.png -> /output/images/basic/mens.png.gz
2023/08/01 15:52:15 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/mobile_phone_off.png /tmp/work/dist/images/basic/mobile_phone_off.png
2023/08/01 15:52:16 Optimizing /tmp/work/dist/images/basic/metal.png
Input size: 3098 (3K)
Result size: 3205 (3K). Percentage of original: 103.454%
Preserving original PNG since it was smaller


2023/08/01 15:52:16 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/metal.png.br /tmp/work/dist/images/basic/metal.png
2023/08/01 15:52:17 br /tmp/work/dist/images/basic/metal.png -> /output/images/basic/metal.png.br
2023/08/01 15:52:17 gz /tmp/work/dist/images/basic/metal.png -> /output/images/basic/metal.png.gz
2023/08/01 15:52:17 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/money_with_wings.png /tmp/work/dist/images/basic/money_with_wings.png
2023/08/01 15:52:20 Optimizing /tmp/work/dist/images/basic/metro.png
Input size: 3402 (3K)
Result size: 3253 (3K). Percentage of original: 95.620%
Result is smaller


2023/08/01 15:52:20 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/metro.png.br /tmp/work/dist/images/basic/metro.png
2023/08/01 15:52:20 br /tmp/work/dist/images/basic/metro.png -> /output/images/basic/metro.png.br
2023/08/01 15:52:20 gz /tmp/work/dist/images/basic/metro.png -> /output/images/basic/metro.png.gz
2023/08/01 15:52:20 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/moneybag.png /tmp/work/dist/images/basic/moneybag.png
2023/08/01 15:52:21 Optimizing /tmp/work/dist/images/basic/microphone.png
Input size: 3680 (3K)
Result size: 3779 (3K). Percentage of original: 102.690%
Preserving original PNG since it was smaller


2023/08/01 15:52:21 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/microphone.png.br /tmp/work/dist/images/basic/microphone.png
2023/08/01 15:52:21 br /tmp/work/dist/images/basic/microphone.png -> /output/images/basic/microphone.png.br
2023/08/01 15:52:21 gz /tmp/work/dist/images/basic/microphone.png -> /output/images/basic/microphone.png.gz
2023/08/01 15:52:21 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/monkey_face.png /tmp/work/dist/images/basic/monkey_face.png
2023/08/01 15:52:22 Optimizing /tmp/work/dist/images/basic/microscope.png
Input size: 4130 (4K)
Result size: 4180 (4K). Percentage of original: 101.211%
Preserving original PNG since it was smaller


2023/08/01 15:52:22 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/microscope.png.br /tmp/work/dist/images/basic/microscope.png
2023/08/01 15:52:22 br /tmp/work/dist/images/basic/microscope.png -> /output/images/basic/microscope.png.br
2023/08/01 15:52:22 gz /tmp/work/dist/images/basic/microscope.png -> /output/images/basic/microscope.png.gz
2023/08/01 15:52:22 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/monkey.png /tmp/work/dist/images/basic/monkey.png
2023/08/01 15:52:25 Optimizing /tmp/work/dist/images/basic/minidisc.png
Input size: 5594 (5K)
Result size: 5664 (5K). Percentage of original: 101.251%
Preserving original PNG since it was smaller


2023/08/01 15:52:25 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/minidisc.png.br /tmp/work/dist/images/basic/minidisc.png
2023/08/01 15:52:25 br /tmp/work/dist/images/basic/minidisc.png -> /output/images/basic/minidisc.png.br
2023/08/01 15:52:25 gz /tmp/work/dist/images/basic/minidisc.png -> /output/images/basic/minidisc.png.gz
2023/08/01 15:52:25 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/monorail.png /tmp/work/dist/images/basic/monorail.png
2023/08/01 15:52:26 Optimizing /tmp/work/dist/images/basic/money_with_wings.png
Input size: 7584 (7K)
Result size: 7684 (7K). Percentage of original: 101.319%
Preserving original PNG since it was smaller


2023/08/01 15:52:26 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/money_with_wings.png.br /tmp/work/dist/images/basic/money_with_wings.png
2023/08/01 15:52:26 br /tmp/work/dist/images/basic/money_with_wings.png -> /output/images/basic/money_with_wings.png.br
2023/08/01 15:52:26 gz /tmp/work/dist/images/basic/money_with_wings.png -> /output/images/basic/money_with_wings.png.gz
2023/08/01 15:52:26 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/mortar_board.png /tmp/work/dist/images/basic/mortar_board.png
2023/08/01 15:52:27 Optimizing /tmp/work/dist/images/basic/mobile_phone_off.png
Input size: 3521 (3K)
Result size: 3448 (3K). Percentage of original: 97.927%
Result is smaller


2023/08/01 15:52:27 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/mobile_phone_off.png.br /tmp/work/dist/images/basic/mobile_phone_off.png
2023/08/01 15:52:27 br /tmp/work/dist/images/basic/mobile_phone_off.png -> /output/images/basic/mobile_phone_off.png.br
2023/08/01 15:52:27 gz /tmp/work/dist/images/basic/mobile_phone_off.png -> /output/images/basic/mobile_phone_off.png.gz
2023/08/01 15:52:27 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/mount_fuji.png /tmp/work/dist/images/basic/mount_fuji.png
2023/08/01 15:52:29 Optimizing /tmp/work/dist/images/basic/milky_way.png
Input size: 5878 (5K)
Result size: 5848 (5K). Percentage of original: 99.490%
Result is smaller


2023/08/01 15:52:29 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/milky_way.png.br /tmp/work/dist/images/basic/milky_way.png
2023/08/01 15:52:30 br /tmp/work/dist/images/basic/milky_way.png -> /output/images/basic/milky_way.png.br
2023/08/01 15:52:30 gz /tmp/work/dist/images/basic/milky_way.png -> /output/images/basic/milky_way.png.gz
2023/08/01 15:52:30 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/mountain_bicyclist.png /tmp/work/dist/images/basic/mountain_bicyclist.png
2023/08/01 15:52:31 Optimizing /tmp/work/dist/images/basic/monkey.png
Input size: 4973 (4K)
Result size: 5036 (4K). Percentage of original: 101.267%
Preserving original PNG since it was smaller


2023/08/01 15:52:31 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/monkey.png.br /tmp/work/dist/images/basic/monkey.png
2023/08/01 15:52:31 br /tmp/work/dist/images/basic/monkey.png -> /output/images/basic/monkey.png.br
2023/08/01 15:52:31 gz /tmp/work/dist/images/basic/monkey.png -> /output/images/basic/monkey.png.gz
2023/08/01 15:52:31 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/mountain_cableway.png /tmp/work/dist/images/basic/mountain_cableway.png
2023/08/01 15:52:32 Optimizing /tmp/work/dist/images/basic/moneybag.png
Input size: 5500 (5K)
Result size: 5554 (5K). Percentage of original: 100.982%
Preserving original PNG since it was smaller


2023/08/01 15:52:32 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/moneybag.png.br /tmp/work/dist/images/basic/moneybag.png
2023/08/01 15:52:32 br /tmp/work/dist/images/basic/moneybag.png -> /output/images/basic/moneybag.png.br
2023/08/01 15:52:32 gz /tmp/work/dist/images/basic/moneybag.png -> /output/images/basic/moneybag.png.gz
2023/08/01 15:52:32 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/mountain_railway.png /tmp/work/dist/images/basic/mountain_railway.png
2023/08/01 15:52:32 Optimizing /tmp/work/dist/images/basic/monkey_face.png
Input size: 5348 (5K)
Result size: 5400 (5K). Percentage of original: 100.972%
Preserving original PNG since it was smaller


2023/08/01 15:52:32 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/monkey_face.png.br /tmp/work/dist/images/basic/monkey_face.png
2023/08/01 15:52:32 br /tmp/work/dist/images/basic/monkey_face.png -> /output/images/basic/monkey_face.png.br
2023/08/01 15:52:32 gz /tmp/work/dist/images/basic/monkey_face.png -> /output/images/basic/monkey_face.png.gz
2023/08/01 15:52:32 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/mouse.png /tmp/work/dist/images/basic/mouse.png
2023/08/01 15:52:33 Optimizing /tmp/work/dist/images/basic/minibus.png
Input size: 3113 (3K)
Result size: 3085 (3K). Percentage of original: 99.101%
Result is smaller


2023/08/01 15:52:33 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/minibus.png.br /tmp/work/dist/images/basic/minibus.png
2023/08/01 15:52:33 br /tmp/work/dist/images/basic/minibus.png -> /output/images/basic/minibus.png.br
2023/08/01 15:52:33 gz /tmp/work/dist/images/basic/minibus.png -> /output/images/basic/minibus.png.gz
2023/08/01 15:52:33 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/mouse2.png /tmp/work/dist/images/basic/mouse2.png
2023/08/01 15:52:36 Optimizing /tmp/work/dist/images/basic/monorail.png
Input size: 4311 (4K)
Result size: 4379 (4K). Percentage of original: 101.577%
Preserving original PNG since it was smaller


2023/08/01 15:52:36 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/monorail.png.br /tmp/work/dist/images/basic/monorail.png
2023/08/01 15:52:36 br /tmp/work/dist/images/basic/monorail.png -> /output/images/basic/monorail.png.br
2023/08/01 15:52:36 gz /tmp/work/dist/images/basic/monorail.png -> /output/images/basic/monorail.png.gz
2023/08/01 15:52:36 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/movie_camera.png /tmp/work/dist/images/basic/movie_camera.png
2023/08/01 15:52:42 Optimizing /tmp/work/dist/images/basic/mortar_board.png
Input size: 4164 (4K)
Result size: 4172 (4K). Percentage of original: 100.192%
Preserving original PNG since it was smaller


2023/08/01 15:52:42 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/mortar_board.png.br /tmp/work/dist/images/basic/mortar_board.png
2023/08/01 15:52:42 Optimizing /tmp/work/dist/images/basic/mountain_bicyclist.png
Input size: 9511 (9K)
Result size: 9460 (9K). Percentage of original: 99.464%
Result is smaller


2023/08/01 15:52:42 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/mountain_bicyclist.png.br /tmp/work/dist/images/basic/mountain_bicyclist.png
2023/08/01 15:52:42 br /tmp/work/dist/images/basic/mortar_board.png -> /output/images/basic/mortar_board.png.br
2023/08/01 15:52:42 gz /tmp/work/dist/images/basic/mortar_board.png -> /output/images/basic/mortar_board.png.gz
2023/08/01 15:52:42 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/moyai.png /tmp/work/dist/images/basic/moyai.png
2023/08/01 15:52:42 br /tmp/work/dist/images/basic/mountain_bicyclist.png -> /output/images/basic/mountain_bicyclist.png.br
2023/08/01 15:52:42 gz /tmp/work/dist/images/basic/mountain_bicyclist.png -> /output/images/basic/mountain_bicyclist.png.gz
2023/08/01 15:52:42 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/muscle.png /tmp/work/dist/images/basic/muscle.png
2023/08/01 15:52:45 Optimizing /tmp/work/dist/images/basic/mountain_cableway.png
Input size: 4405 (4K)
Result size: 4304 (4K). Percentage of original: 97.707%
Result is smaller


2023/08/01 15:52:45 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/mountain_cableway.png.br /tmp/work/dist/images/basic/mountain_cableway.png
2023/08/01 15:52:46 br /tmp/work/dist/images/basic/mountain_cableway.png -> /output/images/basic/mountain_cableway.png.br
2023/08/01 15:52:46 gz /tmp/work/dist/images/basic/mountain_cableway.png -> /output/images/basic/mountain_cableway.png.gz
2023/08/01 15:52:46 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/mushroom.png /tmp/work/dist/images/basic/mushroom.png
2023/08/01 15:52:47 Optimizing /tmp/work/dist/images/basic/moyai.png
Input size: 2166 (2K)
Result size: 2167 (2K). Percentage of original: 100.046%
Preserving original PNG since it was smaller


2023/08/01 15:52:47 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/moyai.png.br /tmp/work/dist/images/basic/moyai.png
2023/08/01 15:52:47 br /tmp/work/dist/images/basic/moyai.png -> /output/images/basic/moyai.png.br
2023/08/01 15:52:47 gz /tmp/work/dist/images/basic/moyai.png -> /output/images/basic/moyai.png.gz
2023/08/01 15:52:47 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/musical_keyboard.png /tmp/work/dist/images/basic/musical_keyboard.png
2023/08/01 15:52:47 Optimizing /tmp/work/dist/images/basic/mount_fuji.png
Input size: 5004 (4K)
Result size: 4851 (4K). Percentage of original: 96.942%
Result is smaller


2023/08/01 15:52:47 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/mount_fuji.png.br /tmp/work/dist/images/basic/mount_fuji.png
2023/08/01 15:52:47 br /tmp/work/dist/images/basic/mount_fuji.png -> /output/images/basic/mount_fuji.png.br
2023/08/01 15:52:47 gz /tmp/work/dist/images/basic/mount_fuji.png -> /output/images/basic/mount_fuji.png.gz
2023/08/01 15:52:47 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/musical_note.png /tmp/work/dist/images/basic/musical_note.png
2023/08/01 15:52:49 Optimizing /tmp/work/dist/images/basic/mouse.png
Input size: 6625 (6K)
Result size: 6594 (6K). Percentage of original: 99.532%
Result is smaller


2023/08/01 15:52:49 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/mouse.png.br /tmp/work/dist/images/basic/mouse.png
2023/08/01 15:52:49 br /tmp/work/dist/images/basic/mouse.png -> /output/images/basic/mouse.png.br
2023/08/01 15:52:49 gz /tmp/work/dist/images/basic/mouse.png -> /output/images/basic/mouse.png.gz
2023/08/01 15:52:49 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/musical_score.png /tmp/work/dist/images/basic/musical_score.png
2023/08/01 15:52:49 Optimizing /tmp/work/dist/images/basic/movie_camera.png
Input size: 4081 (3K)
Result size: 4024 (3K). Percentage of original: 98.603%
Result is smaller


2023/08/01 15:52:49 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/movie_camera.png.br /tmp/work/dist/images/basic/movie_camera.png
2023/08/01 15:52:49 br /tmp/work/dist/images/basic/movie_camera.png -> /output/images/basic/movie_camera.png.br
2023/08/01 15:52:49 gz /tmp/work/dist/images/basic/movie_camera.png -> /output/images/basic/movie_camera.png.gz
2023/08/01 15:52:49 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/mute.png /tmp/work/dist/images/basic/mute.png
2023/08/01 15:52:51 Optimizing /tmp/work/dist/images/basic/mountain_railway.png
Input size: 7448 (7K)
Result size: 7254 (7K). Percentage of original: 97.395%
Result is smaller


2023/08/01 15:52:51 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/mountain_railway.png.br /tmp/work/dist/images/basic/mountain_railway.png
2023/08/01 15:52:51 Optimizing /tmp/work/dist/images/basic/mouse2.png
Input size: 4087 (3K)
Result size: 4051 (3K). Percentage of original: 99.119%
Result is smaller


2023/08/01 15:52:51 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/mouse2.png.br /tmp/work/dist/images/basic/mouse2.png
2023/08/01 15:52:51 br /tmp/work/dist/images/basic/mountain_railway.png -> /output/images/basic/mountain_railway.png.br
2023/08/01 15:52:51 gz /tmp/work/dist/images/basic/mountain_railway.png -> /output/images/basic/mountain_railway.png.gz
2023/08/01 15:52:51 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/nail_care.png /tmp/work/dist/images/basic/nail_care.png
2023/08/01 15:52:51 br /tmp/work/dist/images/basic/mouse2.png -> /output/images/basic/mouse2.png.br
2023/08/01 15:52:51 gz /tmp/work/dist/images/basic/mouse2.png -> /output/images/basic/mouse2.png.gz
2023/08/01 15:52:51 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/name_badge.png /tmp/work/dist/images/basic/name_badge.png
2023/08/01 15:52:54 Optimizing /tmp/work/dist/images/basic/musical_score.png
Input size: 1497 (1K)
Result size: 1433 (1K). Percentage of original: 95.725%
Result is smaller


2023/08/01 15:52:54 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/musical_score.png.br /tmp/work/dist/images/basic/musical_score.png
2023/08/01 15:52:54 br /tmp/work/dist/images/basic/musical_score.png -> /output/images/basic/musical_score.png.br
2023/08/01 15:52:54 gz /tmp/work/dist/images/basic/musical_score.png -> /output/images/basic/musical_score.png.gz
2023/08/01 15:52:54 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/neckbeard.png /tmp/work/dist/images/basic/neckbeard.png
2023/08/01 15:52:56 Optimizing /tmp/work/dist/images/basic/muscle.png
Input size: 4672 (4K)
Result size: 4650 (4K). Percentage of original: 99.529%
Result is smaller


2023/08/01 15:52:56 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/muscle.png.br /tmp/work/dist/images/basic/muscle.png
2023/08/01 15:52:56 br /tmp/work/dist/images/basic/muscle.png -> /output/images/basic/muscle.png.br
2023/08/01 15:52:56 gz /tmp/work/dist/images/basic/muscle.png -> /output/images/basic/muscle.png.gz
2023/08/01 15:52:56 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/necktie.png /tmp/work/dist/images/basic/necktie.png
2023/08/01 15:52:57 Optimizing /tmp/work/dist/images/basic/musical_note.png
Input size: 3188 (3K)
Result size: 3151 (3K). Percentage of original: 98.839%
Result is smaller


2023/08/01 15:52:57 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/musical_note.png.br /tmp/work/dist/images/basic/musical_note.png
2023/08/01 15:52:57 br /tmp/work/dist/images/basic/musical_note.png -> /output/images/basic/musical_note.png.br
2023/08/01 15:52:57 gz /tmp/work/dist/images/basic/musical_note.png -> /output/images/basic/musical_note.png.gz
2023/08/01 15:52:57 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/negative_squared_cross_mark.png /tmp/work/dist/images/basic/negative_squared_cross_mark.png
2023/08/01 15:52:59 Optimizing /tmp/work/dist/images/basic/mushroom.png
Input size: 4887 (4K)
Result size: 4925 (4K). Percentage of original: 100.778%
Preserving original PNG since it was smaller


2023/08/01 15:52:59 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/mushroom.png.br /tmp/work/dist/images/basic/mushroom.png
2023/08/01 15:52:59 Optimizing /tmp/work/dist/images/basic/mute.png
Input size: 6635 (6K)
Result size: 6733 (6K). Percentage of original: 101.477%
Preserving original PNG since it was smaller


2023/08/01 15:52:59 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/mute.png.br /tmp/work/dist/images/basic/mute.png
2023/08/01 15:52:59 br /tmp/work/dist/images/basic/mushroom.png -> /output/images/basic/mushroom.png.br
2023/08/01 15:52:59 gz /tmp/work/dist/images/basic/mushroom.png -> /output/images/basic/mushroom.png.gz
2023/08/01 15:52:59 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/neutral_face.png /tmp/work/dist/images/basic/neutral_face.png
2023/08/01 15:52:59 br /tmp/work/dist/images/basic/mute.png -> /output/images/basic/mute.png.br
2023/08/01 15:52:59 gz /tmp/work/dist/images/basic/mute.png -> /output/images/basic/mute.png.gz
2023/08/01 15:52:59 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/new_moon_with_face.png /tmp/work/dist/images/basic/new_moon_with_face.png
2023/08/01 15:53:01 Optimizing /tmp/work/dist/images/basic/nail_care.png
Input size: 5814 (5K)
Result size: 5790 (5K). Percentage of original: 99.587%
Result is smaller


2023/08/01 15:53:01 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/nail_care.png.br /tmp/work/dist/images/basic/nail_care.png
2023/08/01 15:53:01 br /tmp/work/dist/images/basic/nail_care.png -> /output/images/basic/nail_care.png.br
2023/08/01 15:53:01 gz /tmp/work/dist/images/basic/nail_care.png -> /output/images/basic/nail_care.png.gz
2023/08/01 15:53:01 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/new_moon.png /tmp/work/dist/images/basic/new_moon.png
2023/08/01 15:53:03 Optimizing /tmp/work/dist/images/basic/name_badge.png
Input size: 3985 (3K)
Result size: 4035 (3K). Percentage of original: 101.255%
Preserving original PNG since it was smaller


2023/08/01 15:53:03 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/name_badge.png.br /tmp/work/dist/images/basic/name_badge.png
2023/08/01 15:53:03 br /tmp/work/dist/images/basic/name_badge.png -> /output/images/basic/name_badge.png.br
2023/08/01 15:53:03 gz /tmp/work/dist/images/basic/name_badge.png -> /output/images/basic/name_badge.png.gz
2023/08/01 15:53:03 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/new.png /tmp/work/dist/images/basic/new.png
2023/08/01 15:53:05 Optimizing /tmp/work/dist/images/basic/neckbeard.png
Input size: 6247 (6K)
Result size: 6191 (6K). Percentage of original: 99.104%
Result is smaller


2023/08/01 15:53:05 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/neckbeard.png.br /tmp/work/dist/images/basic/neckbeard.png
2023/08/01 15:53:05 br /tmp/work/dist/images/basic/neckbeard.png -> /output/images/basic/neckbeard.png.br
2023/08/01 15:53:05 gz /tmp/work/dist/images/basic/neckbeard.png -> /output/images/basic/neckbeard.png.gz
2023/08/01 15:53:05 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/newspaper.png /tmp/work/dist/images/basic/newspaper.png
2023/08/01 15:53:05 Optimizing /tmp/work/dist/images/basic/negative_squared_cross_mark.png
Input size: 3853 (3K)
Result size: 3931 (3K). Percentage of original: 102.024%
Preserving original PNG since it was smaller


2023/08/01 15:53:05 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/negative_squared_cross_mark.png.br /tmp/work/dist/images/basic/negative_squared_cross_mark.png
2023/08/01 15:53:05 br /tmp/work/dist/images/basic/negative_squared_cross_mark.png -> /output/images/basic/negative_squared_cross_mark.png.br
2023/08/01 15:53:05 gz /tmp/work/dist/images/basic/negative_squared_cross_mark.png -> /output/images/basic/negative_squared_cross_mark.png.gz
2023/08/01 15:53:05 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/ng.png /tmp/work/dist/images/basic/ng.png
2023/08/01 15:53:09 Optimizing /tmp/work/dist/images/basic/new_moon_with_face.png
Input size: 6708 (6K)
Result size: 6707 (6K). Percentage of original: 99.985%
Result is smaller


2023/08/01 15:53:09 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/new_moon_with_face.png.br /tmp/work/dist/images/basic/new_moon_with_face.png
2023/08/01 15:53:09 br /tmp/work/dist/images/basic/new_moon_with_face.png -> /output/images/basic/new_moon_with_face.png.br
2023/08/01 15:53:09 gz /tmp/work/dist/images/basic/new_moon_with_face.png -> /output/images/basic/new_moon_with_face.png.gz
2023/08/01 15:53:09 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/nine.png /tmp/work/dist/images/basic/nine.png
2023/08/01 15:53:11 Optimizing /tmp/work/dist/images/basic/musical_keyboard.png
Input size: 1944 (1K)
Result size: 1818 (1K). Percentage of original: 93.519%
Result is smaller


2023/08/01 15:53:11 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/musical_keyboard.png.br /tmp/work/dist/images/basic/musical_keyboard.png
2023/08/01 15:53:11 br /tmp/work/dist/images/basic/musical_keyboard.png -> /output/images/basic/musical_keyboard.png.br
2023/08/01 15:53:11 gz /tmp/work/dist/images/basic/musical_keyboard.png -> /output/images/basic/musical_keyboard.png.gz
2023/08/01 15:53:11 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/no_bell.png /tmp/work/dist/images/basic/no_bell.png
2023/08/01 15:53:11 Optimizing /tmp/work/dist/images/basic/neutral_face.png
Input size: 4843 (4K)
Result size: 4576 (4K). Percentage of original: 94.487%
Result is smaller


2023/08/01 15:53:11 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/neutral_face.png.br /tmp/work/dist/images/basic/neutral_face.png
2023/08/01 15:53:11 br /tmp/work/dist/images/basic/neutral_face.png -> /output/images/basic/neutral_face.png.br
2023/08/01 15:53:11 gz /tmp/work/dist/images/basic/neutral_face.png -> /output/images/basic/neutral_face.png.gz
2023/08/01 15:53:11 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/no_bicycles.png /tmp/work/dist/images/basic/no_bicycles.png
2023/08/01 15:53:12 Optimizing /tmp/work/dist/images/basic/necktie.png
Input size: 6116 (5K)
Result size: 6101 (5K). Percentage of original: 99.755%
Result is smaller


2023/08/01 15:53:12 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/necktie.png.br /tmp/work/dist/images/basic/necktie.png
2023/08/01 15:53:12 br /tmp/work/dist/images/basic/necktie.png -> /output/images/basic/necktie.png.br
2023/08/01 15:53:12 gz /tmp/work/dist/images/basic/necktie.png -> /output/images/basic/necktie.png.gz
2023/08/01 15:53:12 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/no_entry_sign.png /tmp/work/dist/images/basic/no_entry_sign.png
2023/08/01 15:53:14 Optimizing /tmp/work/dist/images/basic/newspaper.png
Input size: 5180 (5K)
Result size: 5135 (5K). Percentage of original: 99.131%
Result is smaller


2023/08/01 15:53:14 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/newspaper.png.br /tmp/work/dist/images/basic/newspaper.png
2023/08/01 15:53:14 br /tmp/work/dist/images/basic/newspaper.png -> /output/images/basic/newspaper.png.br
2023/08/01 15:53:14 gz /tmp/work/dist/images/basic/newspaper.png -> /output/images/basic/newspaper.png.gz
2023/08/01 15:53:14 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/no_entry.png /tmp/work/dist/images/basic/no_entry.png
2023/08/01 15:53:14 Optimizing /tmp/work/dist/images/basic/new_moon.png
Input size: 5276 (5K)
Result size: 5345 (5K). Percentage of original: 101.308%
Preserving original PNG since it was smaller


2023/08/01 15:53:14 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/new_moon.png.br /tmp/work/dist/images/basic/new_moon.png
2023/08/01 15:53:14 br /tmp/work/dist/images/basic/new_moon.png -> /output/images/basic/new_moon.png.br
2023/08/01 15:53:14 gz /tmp/work/dist/images/basic/new_moon.png -> /output/images/basic/new_moon.png.gz
2023/08/01 15:53:14 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/no_good.png /tmp/work/dist/images/basic/no_good.png
2023/08/01 15:53:18 Optimizing /tmp/work/dist/images/basic/no_bell.png
Input size: 5944 (5K)
Result size: 6186 (6K). Percentage of original: 104.071%
Preserving original PNG since it was smaller


2023/08/01 15:53:18 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/no_bell.png.br /tmp/work/dist/images/basic/no_bell.png
2023/08/01 15:53:18 br /tmp/work/dist/images/basic/no_bell.png -> /output/images/basic/no_bell.png.br
2023/08/01 15:53:18 gz /tmp/work/dist/images/basic/no_bell.png -> /output/images/basic/no_bell.png.gz
2023/08/01 15:53:18 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/no_mobile_phones.png /tmp/work/dist/images/basic/no_mobile_phones.png
2023/08/01 15:53:20 Optimizing /tmp/work/dist/images/basic/no_bicycles.png
Input size: 5661 (5K)
Result size: 5696 (5K). Percentage of original: 100.618%
Preserving original PNG since it was smaller


2023/08/01 15:53:20 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/no_bicycles.png.br /tmp/work/dist/images/basic/no_bicycles.png
2023/08/01 15:53:20 br /tmp/work/dist/images/basic/no_bicycles.png -> /output/images/basic/no_bicycles.png.br
2023/08/01 15:53:20 gz /tmp/work/dist/images/basic/no_bicycles.png -> /output/images/basic/no_bicycles.png.gz
2023/08/01 15:53:20 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/no_mouth.png /tmp/work/dist/images/basic/no_mouth.png
2023/08/01 15:53:20 Optimizing /tmp/work/dist/images/basic/ng.png
Input size: 4201 (4K)
Result size: 4199 (4K). Percentage of original: 99.952%
Result is smaller


2023/08/01 15:53:20 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/ng.png.br /tmp/work/dist/images/basic/ng.png
2023/08/01 15:53:20 br /tmp/work/dist/images/basic/ng.png -> /output/images/basic/ng.png.br
2023/08/01 15:53:20 gz /tmp/work/dist/images/basic/ng.png -> /output/images/basic/ng.png.gz
2023/08/01 15:53:20 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/no_pedestrians.png /tmp/work/dist/images/basic/no_pedestrians.png
2023/08/01 15:53:21 Optimizing /tmp/work/dist/images/basic/new.png
Input size: 3927 (3K)
Result size: 3838 (3K). Percentage of original: 97.734%
Result is smaller


2023/08/01 15:53:21 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/new.png.br /tmp/work/dist/images/basic/new.png
2023/08/01 15:53:21 br /tmp/work/dist/images/basic/new.png -> /output/images/basic/new.png.br
2023/08/01 15:53:21 gz /tmp/work/dist/images/basic/new.png -> /output/images/basic/new.png.gz
2023/08/01 15:53:21 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/no_smoking.png /tmp/work/dist/images/basic/no_smoking.png
2023/08/01 15:53:22 Optimizing /tmp/work/dist/images/basic/nine.png
Input size: 3776 (3K)
Result size: 3723 (3K). Percentage of original: 98.596%
Result is smaller


2023/08/01 15:53:22 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/nine.png.br /tmp/work/dist/images/basic/nine.png
2023/08/01 15:53:22 br /tmp/work/dist/images/basic/nine.png -> /output/images/basic/nine.png.br
2023/08/01 15:53:22 gz /tmp/work/dist/images/basic/nine.png -> /output/images/basic/nine.png.gz
2023/08/01 15:53:22 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/non-potable_water.png /tmp/work/dist/images/basic/non-potable_water.png
2023/08/01 15:53:23 Optimizing /tmp/work/dist/images/basic/no_entry_sign.png
Input size: 3287 (3K)
Result size: 3401 (3K). Percentage of original: 103.468%
Preserving original PNG since it was smaller


2023/08/01 15:53:23 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/no_entry_sign.png.br /tmp/work/dist/images/basic/no_entry_sign.png
2023/08/01 15:53:23 br /tmp/work/dist/images/basic/no_entry_sign.png -> /output/images/basic/no_entry_sign.png.br
2023/08/01 15:53:23 gz /tmp/work/dist/images/basic/no_entry_sign.png -> /output/images/basic/no_entry_sign.png.gz
2023/08/01 15:53:23 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/nose.png /tmp/work/dist/images/basic/nose.png
2023/08/01 15:53:26 Optimizing /tmp/work/dist/images/basic/no_good.png
Input size: 7034 (6K)
Result size: 7133 (6K). Percentage of original: 101.407%
Preserving original PNG since it was smaller


2023/08/01 15:53:26 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/no_good.png.br /tmp/work/dist/images/basic/no_good.png
2023/08/01 15:53:26 br /tmp/work/dist/images/basic/no_good.png -> /output/images/basic/no_good.png.br
2023/08/01 15:53:26 gz /tmp/work/dist/images/basic/no_good.png -> /output/images/basic/no_good.png.gz
2023/08/01 15:53:26 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/notebook_with_decorative_cover.png /tmp/work/dist/images/basic/notebook_with_decorative_cover.png
2023/08/01 15:53:28 Optimizing /tmp/work/dist/images/basic/no_mobile_phones.png
Input size: 5083 (4K)
Result size: 5103 (4K). Percentage of original: 100.393%
Preserving original PNG since it was smaller


2023/08/01 15:53:28 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/no_mobile_phones.png.br /tmp/work/dist/images/basic/no_mobile_phones.png
2023/08/01 15:53:28 Optimizing /tmp/work/dist/images/basic/no_entry.png
Input size: 3514 (3K)
Result size: 3560 (3K). Percentage of original: 101.309%
Preserving original PNG since it was smaller


2023/08/01 15:53:28 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/no_entry.png.br /tmp/work/dist/images/basic/no_entry.png
2023/08/01 15:53:29 br /tmp/work/dist/images/basic/no_mobile_phones.png -> /output/images/basic/no_mobile_phones.png.br
2023/08/01 15:53:29 gz /tmp/work/dist/images/basic/no_mobile_phones.png -> /output/images/basic/no_mobile_phones.png.gz
2023/08/01 15:53:29 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/notebook.png /tmp/work/dist/images/basic/notebook.png
2023/08/01 15:53:29 br /tmp/work/dist/images/basic/no_entry.png -> /output/images/basic/no_entry.png.br
2023/08/01 15:53:29 gz /tmp/work/dist/images/basic/no_entry.png -> /output/images/basic/no_entry.png.gz
2023/08/01 15:53:29 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/notes.png /tmp/work/dist/images/basic/notes.png
2023/08/01 15:53:29 Optimizing /tmp/work/dist/images/basic/no_smoking.png
Input size: 4212 (4K)
Result size: 4085 (3K). Percentage of original: 96.985%
Result is smaller


2023/08/01 15:53:29 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/no_smoking.png.br /tmp/work/dist/images/basic/no_smoking.png
2023/08/01 15:53:29 br /tmp/work/dist/images/basic/no_smoking.png -> /output/images/basic/no_smoking.png.br
2023/08/01 15:53:29 gz /tmp/work/dist/images/basic/no_smoking.png -> /output/images/basic/no_smoking.png.gz
2023/08/01 15:53:29 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/nut_and_bolt.png /tmp/work/dist/images/basic/nut_and_bolt.png
2023/08/01 15:53:32 Optimizing /tmp/work/dist/images/basic/non-potable_water.png
Input size: 5202 (5K)
Result size: 5225 (5K). Percentage of original: 100.442%
Preserving original PNG since it was smaller


2023/08/01 15:53:32 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/non-potable_water.png.br /tmp/work/dist/images/basic/non-potable_water.png
2023/08/01 15:53:33 br /tmp/work/dist/images/basic/non-potable_water.png -> /output/images/basic/non-potable_water.png.br
2023/08/01 15:53:33 gz /tmp/work/dist/images/basic/non-potable_water.png -> /output/images/basic/non-potable_water.png.gz
2023/08/01 15:53:33 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/o.png /tmp/work/dist/images/basic/o.png
2023/08/01 15:53:33 Optimizing /tmp/work/dist/images/basic/no_mouth.png
Input size: 4632 (4K)
Result size: 4389 (4K). Percentage of original: 94.754%
Result is smaller


2023/08/01 15:53:33 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/no_mouth.png.br /tmp/work/dist/images/basic/no_mouth.png
2023/08/01 15:53:33 br /tmp/work/dist/images/basic/no_mouth.png -> /output/images/basic/no_mouth.png.br
2023/08/01 15:53:33 gz /tmp/work/dist/images/basic/no_mouth.png -> /output/images/basic/no_mouth.png.gz
2023/08/01 15:53:33 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/o2.png /tmp/work/dist/images/basic/o2.png
2023/08/01 15:53:34 Optimizing /tmp/work/dist/images/basic/notes.png
Input size: 1536 (1K)
Result size: 1525 (1K). Percentage of original: 99.284%
Result is smaller


2023/08/01 15:53:34 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/notes.png.br /tmp/work/dist/images/basic/notes.png
2023/08/01 15:53:34 br /tmp/work/dist/images/basic/notes.png -> /output/images/basic/notes.png.br
2023/08/01 15:53:34 gz /tmp/work/dist/images/basic/notes.png -> /output/images/basic/notes.png.gz
2023/08/01 15:53:34 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/ocean.png /tmp/work/dist/images/basic/ocean.png
2023/08/01 15:53:34 Optimizing /tmp/work/dist/images/basic/no_pedestrians.png
Input size: 5485 (5K)
Result size: 5518 (5K). Percentage of original: 100.602%
Preserving original PNG since it was smaller


2023/08/01 15:53:34 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/no_pedestrians.png.br /tmp/work/dist/images/basic/no_pedestrians.png
2023/08/01 15:53:34 br /tmp/work/dist/images/basic/no_pedestrians.png -> /output/images/basic/no_pedestrians.png.br
2023/08/01 15:53:34 gz /tmp/work/dist/images/basic/no_pedestrians.png -> /output/images/basic/no_pedestrians.png.gz
2023/08/01 15:53:34 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/octocat.png /tmp/work/dist/images/basic/octocat.png
2023/08/01 15:53:35 Optimizing /tmp/work/dist/images/basic/nut_and_bolt.png
Input size: 2169 (2K)
Result size: 2178 (2K). Percentage of original: 100.415%
Preserving original PNG since it was smaller


2023/08/01 15:53:35 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/nut_and_bolt.png.br /tmp/work/dist/images/basic/nut_and_bolt.png
2023/08/01 15:53:35 br /tmp/work/dist/images/basic/nut_and_bolt.png -> /output/images/basic/nut_and_bolt.png.br
2023/08/01 15:53:35 gz /tmp/work/dist/images/basic/nut_and_bolt.png -> /output/images/basic/nut_and_bolt.png.gz
2023/08/01 15:53:35 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/octopus.png /tmp/work/dist/images/basic/octopus.png
2023/08/01 15:53:35 Optimizing /tmp/work/dist/images/basic/nose.png
Input size: 3703 (3K)
Result size: 3670 (3K). Percentage of original: 99.109%
Result is smaller


2023/08/01 15:53:35 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/nose.png.br /tmp/work/dist/images/basic/nose.png
2023/08/01 15:53:35 br /tmp/work/dist/images/basic/nose.png -> /output/images/basic/nose.png.br
2023/08/01 15:53:35 gz /tmp/work/dist/images/basic/nose.png -> /output/images/basic/nose.png.gz
2023/08/01 15:53:35 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/oden.png /tmp/work/dist/images/basic/oden.png
2023/08/01 15:53:36 Optimizing /tmp/work/dist/images/basic/notebook_with_decorative_cover.png
Input size: 5329 (5K)
Result size: 5224 (5K). Percentage of original: 98.030%
Result is smaller


2023/08/01 15:53:36 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/notebook_with_decorative_cover.png.br /tmp/work/dist/images/basic/notebook_with_decorative_cover.png
2023/08/01 15:53:36 br /tmp/work/dist/images/basic/notebook_with_decorative_cover.png -> /output/images/basic/notebook_with_decorative_cover.png.br
2023/08/01 15:53:36 gz /tmp/work/dist/images/basic/notebook_with_decorative_cover.png -> /output/images/basic/notebook_with_decorative_cover.png.gz
2023/08/01 15:53:36 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/office.png /tmp/work/dist/images/basic/office.png
2023/08/01 15:53:41 Optimizing /tmp/work/dist/images/basic/ocean.png
Input size: 5777 (5K)
Result size: 5805 (5K). Percentage of original: 100.485%
Preserving original PNG since it was smaller


2023/08/01 15:53:41 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/ocean.png.br /tmp/work/dist/images/basic/ocean.png
2023/08/01 15:53:41 br /tmp/work/dist/images/basic/ocean.png -> /output/images/basic/ocean.png.br
2023/08/01 15:53:41 gz /tmp/work/dist/images/basic/ocean.png -> /output/images/basic/ocean.png.gz
2023/08/01 15:53:41 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/ok_hand.png /tmp/work/dist/images/basic/ok_hand.png
2023/08/01 15:53:43 Optimizing /tmp/work/dist/images/basic/o2.png
Input size: 3498 (3K)
Result size: 3439 (3K). Percentage of original: 98.313%
Result is smaller


2023/08/01 15:53:43 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/o2.png.br /tmp/work/dist/images/basic/o2.png
2023/08/01 15:53:43 br /tmp/work/dist/images/basic/o2.png -> /output/images/basic/o2.png.br
2023/08/01 15:53:43 gz /tmp/work/dist/images/basic/o2.png -> /output/images/basic/o2.png.gz
2023/08/01 15:53:43 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/ok_woman.png /tmp/work/dist/images/basic/ok_woman.png
2023/08/01 15:53:43 Optimizing /tmp/work/dist/images/basic/o.png
Input size: 2538 (2K)
Result size: 2626 (2K). Percentage of original: 103.467%
Preserving original PNG since it was smaller


2023/08/01 15:53:43 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/o.png.br /tmp/work/dist/images/basic/o.png
2023/08/01 15:53:44 br /tmp/work/dist/images/basic/o.png -> /output/images/basic/o.png.br
2023/08/01 15:53:44 gz /tmp/work/dist/images/basic/o.png -> /output/images/basic/o.png.gz
2023/08/01 15:53:44 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/ok.png /tmp/work/dist/images/basic/ok.png
2023/08/01 15:53:47 Optimizing /tmp/work/dist/images/basic/oden.png
Input size: 5543 (5K)
Result size: 5593 (5K). Percentage of original: 100.902%
Preserving original PNG since it was smaller


2023/08/01 15:53:47 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/oden.png.br /tmp/work/dist/images/basic/oden.png
2023/08/01 15:53:47 br /tmp/work/dist/images/basic/oden.png -> /output/images/basic/oden.png.br
2023/08/01 15:53:47 gz /tmp/work/dist/images/basic/oden.png -> /output/images/basic/oden.png.gz
2023/08/01 15:53:47 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/older_man.png /tmp/work/dist/images/basic/older_man.png
2023/08/01 15:53:47 Optimizing /tmp/work/dist/images/basic/office.png
Input size: 5156 (5K)
Result size: 5109 (4K). Percentage of original: 99.088%
Result is smaller


2023/08/01 15:53:47 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/office.png.br /tmp/work/dist/images/basic/office.png
2023/08/01 15:53:47 br /tmp/work/dist/images/basic/office.png -> /output/images/basic/office.png.br
2023/08/01 15:53:47 gz /tmp/work/dist/images/basic/office.png -> /output/images/basic/office.png.gz
2023/08/01 15:53:47 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/older_woman.png /tmp/work/dist/images/basic/older_woman.png
2023/08/01 15:53:47 Optimizing /tmp/work/dist/images/basic/notebook.png
Input size: 6001 (5K)
Result size: 6068 (5K). Percentage of original: 101.116%
Preserving original PNG since it was smaller


2023/08/01 15:53:47 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/notebook.png.br /tmp/work/dist/images/basic/notebook.png
2023/08/01 15:53:47 br /tmp/work/dist/images/basic/notebook.png -> /output/images/basic/notebook.png.br
2023/08/01 15:53:47 gz /tmp/work/dist/images/basic/notebook.png -> /output/images/basic/notebook.png.gz
2023/08/01 15:53:47 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/on.png /tmp/work/dist/images/basic/on.png
2023/08/01 15:53:52 Optimizing /tmp/work/dist/images/basic/ok_hand.png
Input size: 4598 (4K)
Result size: 4747 (4K). Percentage of original: 103.241%
Preserving original PNG since it was smaller


2023/08/01 15:53:52 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/ok_hand.png.br /tmp/work/dist/images/basic/ok_hand.png
2023/08/01 15:53:52 br /tmp/work/dist/images/basic/ok_hand.png -> /output/images/basic/ok_hand.png.br
2023/08/01 15:53:52 gz /tmp/work/dist/images/basic/ok_hand.png -> /output/images/basic/ok_hand.png.gz
2023/08/01 15:53:52 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/oncoming_automobile.png /tmp/work/dist/images/basic/oncoming_automobile.png
2023/08/01 15:53:53 Optimizing /tmp/work/dist/images/basic/octocat.png
Input size: 3738 (3K)
Result size: 3714 (3K). Percentage of original: 99.358%
Result is smaller


2023/08/01 15:53:53 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/octocat.png.br /tmp/work/dist/images/basic/octocat.png
2023/08/01 15:53:53 br /tmp/work/dist/images/basic/octocat.png -> /output/images/basic/octocat.png.br
2023/08/01 15:53:53 gz /tmp/work/dist/images/basic/octocat.png -> /output/images/basic/octocat.png.gz
2023/08/01 15:53:53 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/oncoming_bus.png /tmp/work/dist/images/basic/oncoming_bus.png
2023/08/01 15:53:53 Optimizing /tmp/work/dist/images/basic/octopus.png
Input size: 5779 (5K)
Result size: 5733 (5K). Percentage of original: 99.204%
Result is smaller


2023/08/01 15:53:53 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/octopus.png.br /tmp/work/dist/images/basic/octopus.png
2023/08/01 15:53:53 br /tmp/work/dist/images/basic/octopus.png -> /output/images/basic/octopus.png.br
2023/08/01 15:53:53 gz /tmp/work/dist/images/basic/octopus.png -> /output/images/basic/octopus.png.gz
2023/08/01 15:53:53 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/oncoming_police_car.png /tmp/work/dist/images/basic/oncoming_police_car.png
2023/08/01 15:53:54 Optimizing /tmp/work/dist/images/basic/ok_woman.png
Input size: 7527 (7K)
Result size: 7547 (7K). Percentage of original: 100.266%
Preserving original PNG since it was smaller


2023/08/01 15:53:54 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/ok_woman.png.br /tmp/work/dist/images/basic/ok_woman.png
2023/08/01 15:53:54 br /tmp/work/dist/images/basic/ok_woman.png -> /output/images/basic/ok_woman.png.br
2023/08/01 15:53:54 gz /tmp/work/dist/images/basic/ok_woman.png -> /output/images/basic/ok_woman.png.gz
2023/08/01 15:53:54 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/oncoming_taxi.png /tmp/work/dist/images/basic/oncoming_taxi.png
2023/08/01 15:53:56 Optimizing /tmp/work/dist/images/basic/older_woman.png
Input size: 5977 (5K)
Result size: 6004 (5K). Percentage of original: 100.452%
Preserving original PNG since it was smaller


2023/08/01 15:53:56 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/older_woman.png.br /tmp/work/dist/images/basic/older_woman.png
2023/08/01 15:53:56 br /tmp/work/dist/images/basic/older_woman.png -> /output/images/basic/older_woman.png.br
2023/08/01 15:53:56 gz /tmp/work/dist/images/basic/older_woman.png -> /output/images/basic/older_woman.png.gz
2023/08/01 15:53:56 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/one.png /tmp/work/dist/images/basic/one.png
2023/08/01 15:53:57 Optimizing /tmp/work/dist/images/basic/older_man.png
Input size: 6733 (6K)
Result size: 6672 (6K). Percentage of original: 99.094%
Result is smaller


2023/08/01 15:53:57 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/older_man.png.br /tmp/work/dist/images/basic/older_man.png
2023/08/01 15:53:57 br /tmp/work/dist/images/basic/older_man.png -> /output/images/basic/older_man.png.br
2023/08/01 15:53:57 gz /tmp/work/dist/images/basic/older_man.png -> /output/images/basic/older_man.png.gz
2023/08/01 15:53:57 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/open_file_folder.png /tmp/work/dist/images/basic/open_file_folder.png
2023/08/01 15:54:02 Optimizing /tmp/work/dist/images/basic/oncoming_automobile.png
Input size: 7469 (7K)
Result size: 7486 (7K). Percentage of original: 100.228%
Preserving original PNG since it was smaller


2023/08/01 15:54:02 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/oncoming_automobile.png.br /tmp/work/dist/images/basic/oncoming_automobile.png
2023/08/01 15:54:02 Optimizing /tmp/work/dist/images/basic/oncoming_bus.png
Input size: 5305 (5K)
Result size: 5292 (5K). Percentage of original: 99.755%
Result is smaller


2023/08/01 15:54:02 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/oncoming_bus.png.br /tmp/work/dist/images/basic/oncoming_bus.png
2023/08/01 15:54:02 br /tmp/work/dist/images/basic/oncoming_bus.png -> /output/images/basic/oncoming_bus.png.br
2023/08/01 15:54:02 gz /tmp/work/dist/images/basic/oncoming_bus.png -> /output/images/basic/oncoming_bus.png.gz
2023/08/01 15:54:02 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/open_hands.png /tmp/work/dist/images/basic/open_hands.png
2023/08/01 15:54:02 br /tmp/work/dist/images/basic/oncoming_automobile.png -> /output/images/basic/oncoming_automobile.png.br
2023/08/01 15:54:02 gz /tmp/work/dist/images/basic/oncoming_automobile.png -> /output/images/basic/oncoming_automobile.png.gz
2023/08/01 15:54:02 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/open_mouth.png /tmp/work/dist/images/basic/open_mouth.png
2023/08/01 15:54:03 Optimizing /tmp/work/dist/images/basic/oncoming_taxi.png
Input size: 6287 (6K)
Result size: 6340 (6K). Percentage of original: 100.843%
Preserving original PNG since it was smaller


2023/08/01 15:54:03 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/oncoming_taxi.png.br /tmp/work/dist/images/basic/oncoming_taxi.png
2023/08/01 15:54:03 Optimizing /tmp/work/dist/images/basic/ok.png
Input size: 4158 (4K)
Result size: 4109 (4K). Percentage of original: 98.822%
Result is smaller


2023/08/01 15:54:03 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/ok.png.br /tmp/work/dist/images/basic/ok.png
2023/08/01 15:54:03 br /tmp/work/dist/images/basic/ok.png -> /output/images/basic/ok.png.br
2023/08/01 15:54:03 gz /tmp/work/dist/images/basic/ok.png -> /output/images/basic/ok.png.gz
2023/08/01 15:54:03 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/ophiuchus.png /tmp/work/dist/images/basic/ophiuchus.png
2023/08/01 15:54:03 br /tmp/work/dist/images/basic/oncoming_taxi.png -> /output/images/basic/oncoming_taxi.png.br
2023/08/01 15:54:03 gz /tmp/work/dist/images/basic/oncoming_taxi.png -> /output/images/basic/oncoming_taxi.png.gz
2023/08/01 15:54:03 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/orange_book.png /tmp/work/dist/images/basic/orange_book.png
2023/08/01 15:54:06 Optimizing /tmp/work/dist/images/basic/oncoming_police_car.png
Input size: 5683 (5K)
Result size: 5708 (5K). Percentage of original: 100.440%
Preserving original PNG since it was smaller


2023/08/01 15:54:06 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/oncoming_police_car.png.br /tmp/work/dist/images/basic/oncoming_police_car.png
2023/08/01 15:54:07 br /tmp/work/dist/images/basic/oncoming_police_car.png -> /output/images/basic/oncoming_police_car.png.br
2023/08/01 15:54:07 gz /tmp/work/dist/images/basic/oncoming_police_car.png -> /output/images/basic/oncoming_police_car.png.gz
2023/08/01 15:54:07 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/outbox_tray.png /tmp/work/dist/images/basic/outbox_tray.png
2023/08/01 15:54:09 Optimizing /tmp/work/dist/images/basic/open_hands.png
Input size: 4950 (4K)
Result size: 4926 (4K). Percentage of original: 99.515%
Result is smaller


2023/08/01 15:54:09 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/open_hands.png.br /tmp/work/dist/images/basic/open_hands.png
2023/08/01 15:54:09 br /tmp/work/dist/images/basic/open_hands.png -> /output/images/basic/open_hands.png.br
2023/08/01 15:54:09 gz /tmp/work/dist/images/basic/open_hands.png -> /output/images/basic/open_hands.png.gz
2023/08/01 15:54:09 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/ox.png /tmp/work/dist/images/basic/ox.png
2023/08/01 15:54:10 Optimizing /tmp/work/dist/images/basic/one.png
Input size: 2825 (2K)
Result size: 2760 (2K). Percentage of original: 97.699%
Result is smaller


2023/08/01 15:54:10 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/one.png.br /tmp/work/dist/images/basic/one.png
2023/08/01 15:54:10 br /tmp/work/dist/images/basic/one.png -> /output/images/basic/one.png.br
2023/08/01 15:54:10 gz /tmp/work/dist/images/basic/one.png -> /output/images/basic/one.png.gz
2023/08/01 15:54:10 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/package.png /tmp/work/dist/images/basic/package.png
2023/08/01 15:54:12 Optimizing /tmp/work/dist/images/basic/open_mouth.png
Input size: 4519 (4K)
Result size: 4471 (4K). Percentage of original: 98.938%
Result is smaller


2023/08/01 15:54:12 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/open_mouth.png.br /tmp/work/dist/images/basic/open_mouth.png
2023/08/01 15:54:12 Optimizing /tmp/work/dist/images/basic/open_file_folder.png
Input size: 4292 (4K)
Result size: 4371 (4K). Percentage of original: 101.841%
Preserving original PNG since it was smaller


2023/08/01 15:54:12 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/open_file_folder.png.br /tmp/work/dist/images/basic/open_file_folder.png
2023/08/01 15:54:12 br /tmp/work/dist/images/basic/open_mouth.png -> /output/images/basic/open_mouth.png.br
2023/08/01 15:54:12 gz /tmp/work/dist/images/basic/open_mouth.png -> /output/images/basic/open_mouth.png.gz
2023/08/01 15:54:12 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/page_facing_up.png /tmp/work/dist/images/basic/page_facing_up.png
2023/08/01 15:54:12 br /tmp/work/dist/images/basic/open_file_folder.png -> /output/images/basic/open_file_folder.png.br
2023/08/01 15:54:12 gz /tmp/work/dist/images/basic/open_file_folder.png -> /output/images/basic/open_file_folder.png.gz
2023/08/01 15:54:12 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/page_with_curl.png /tmp/work/dist/images/basic/page_with_curl.png
2023/08/01 15:54:16 Optimizing /tmp/work/dist/images/basic/outbox_tray.png
Input size: 3683 (3K)
Result size: 3673 (3K). Percentage of original: 99.728%
Result is smaller


2023/08/01 15:54:16 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/outbox_tray.png.br /tmp/work/dist/images/basic/outbox_tray.png
2023/08/01 15:54:16 br /tmp/work/dist/images/basic/outbox_tray.png -> /output/images/basic/outbox_tray.png.br
2023/08/01 15:54:16 gz /tmp/work/dist/images/basic/outbox_tray.png -> /output/images/basic/outbox_tray.png.gz
2023/08/01 15:54:16 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/pager.png /tmp/work/dist/images/basic/pager.png
2023/08/01 15:54:20 Optimizing /tmp/work/dist/images/basic/ox.png
Input size: 5935 (5K)
Result size: 6060 (5K). Percentage of original: 102.106%
Preserving original PNG since it was smaller


2023/08/01 15:54:20 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/ox.png.br /tmp/work/dist/images/basic/ox.png
2023/08/01 15:54:20 br /tmp/work/dist/images/basic/ox.png -> /output/images/basic/ox.png.br
2023/08/01 15:54:20 gz /tmp/work/dist/images/basic/ox.png -> /output/images/basic/ox.png.gz
2023/08/01 15:54:20 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/palm_tree.png /tmp/work/dist/images/basic/palm_tree.png
2023/08/01 15:54:22 Optimizing /tmp/work/dist/images/basic/package.png
Input size: 8449 (8K)
Result size: 6775 (6K). Percentage of original: 80.187%
Result is smaller


2023/08/01 15:54:22 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/package.png.br /tmp/work/dist/images/basic/package.png
2023/08/01 15:54:22 br /tmp/work/dist/images/basic/package.png -> /output/images/basic/package.png.br
2023/08/01 15:54:22 gz /tmp/work/dist/images/basic/package.png -> /output/images/basic/package.png.gz
2023/08/01 15:54:22 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/panda_face.png /tmp/work/dist/images/basic/panda_face.png
2023/08/01 15:54:23 Optimizing /tmp/work/dist/images/basic/orange_book.png
Input size: 5085 (4K)
Result size: 4974 (4K). Percentage of original: 97.817%
Result is smaller


2023/08/01 15:54:23 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/orange_book.png.br /tmp/work/dist/images/basic/orange_book.png
2023/08/01 15:54:23 br /tmp/work/dist/images/basic/orange_book.png -> /output/images/basic/orange_book.png.br
2023/08/01 15:54:23 gz /tmp/work/dist/images/basic/orange_book.png -> /output/images/basic/orange_book.png.gz
2023/08/01 15:54:23 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/paperclip.png /tmp/work/dist/images/basic/paperclip.png
2023/08/01 15:54:25 Optimizing /tmp/work/dist/images/basic/pager.png
Input size: 4022 (3K)
Result size: 3956 (3K). Percentage of original: 98.359%
Result is smaller


2023/08/01 15:54:25 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/pager.png.br /tmp/work/dist/images/basic/pager.png
2023/08/01 15:54:25 br /tmp/work/dist/images/basic/pager.png -> /output/images/basic/pager.png.br
2023/08/01 15:54:25 gz /tmp/work/dist/images/basic/pager.png -> /output/images/basic/pager.png.gz
2023/08/01 15:54:25 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/parking.png /tmp/work/dist/images/basic/parking.png
2023/08/01 15:54:26 Optimizing /tmp/work/dist/images/basic/ophiuchus.png
Input size: 4434 (4K)
Result size: 4369 (4K). Percentage of original: 98.534%
Result is smaller


2023/08/01 15:54:26 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/ophiuchus.png.br /tmp/work/dist/images/basic/ophiuchus.png
2023/08/01 15:54:26 br /tmp/work/dist/images/basic/ophiuchus.png -> /output/images/basic/ophiuchus.png.br
2023/08/01 15:54:26 gz /tmp/work/dist/images/basic/ophiuchus.png -> /output/images/basic/ophiuchus.png.gz
2023/08/01 15:54:26 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/part_alternation_mark.png /tmp/work/dist/images/basic/part_alternation_mark.png
2023/08/01 15:54:29 Optimizing /tmp/work/dist/images/basic/page_with_curl.png
Input size: 3715 (3K)
Result size: 3735 (3K). Percentage of original: 100.538%
Preserving original PNG since it was smaller


2023/08/01 15:54:29 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/page_with_curl.png.br /tmp/work/dist/images/basic/page_with_curl.png
2023/08/01 15:54:29 br /tmp/work/dist/images/basic/page_with_curl.png -> /output/images/basic/page_with_curl.png.br
2023/08/01 15:54:29 gz /tmp/work/dist/images/basic/page_with_curl.png -> /output/images/basic/page_with_curl.png.gz
2023/08/01 15:54:29 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/partly_sunny.png /tmp/work/dist/images/basic/partly_sunny.png
2023/08/01 15:54:29 Optimizing /tmp/work/dist/images/basic/palm_tree.png
Input size: 3663 (3K)
Result size: 3780 (3K). Percentage of original: 103.194%
Preserving original PNG since it was smaller


2023/08/01 15:54:29 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/palm_tree.png.br /tmp/work/dist/images/basic/palm_tree.png
2023/08/01 15:54:29 br /tmp/work/dist/images/basic/palm_tree.png -> /output/images/basic/palm_tree.png.br
2023/08/01 15:54:29 gz /tmp/work/dist/images/basic/palm_tree.png -> /output/images/basic/palm_tree.png.gz
2023/08/01 15:54:29 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/passport_control.png /tmp/work/dist/images/basic/passport_control.png
2023/08/01 15:54:33 Optimizing /tmp/work/dist/images/basic/paperclip.png
Input size: 2478 (2K)
Result size: 2653 (2K). Percentage of original: 107.062%
Preserving original PNG since it was smaller


2023/08/01 15:54:33 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/paperclip.png.br /tmp/work/dist/images/basic/paperclip.png
2023/08/01 15:54:33 br /tmp/work/dist/images/basic/paperclip.png -> /output/images/basic/paperclip.png.br
2023/08/01 15:54:33 gz /tmp/work/dist/images/basic/paperclip.png -> /output/images/basic/paperclip.png.gz
2023/08/01 15:54:33 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/paw_prints.png /tmp/work/dist/images/basic/paw_prints.png
2023/08/01 15:54:36 Optimizing /tmp/work/dist/images/basic/panda_face.png
Input size: 4814 (4K)
Result size: 4841 (4K). Percentage of original: 100.561%
Preserving original PNG since it was smaller


2023/08/01 15:54:36 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/panda_face.png.br /tmp/work/dist/images/basic/panda_face.png
2023/08/01 15:54:36 br /tmp/work/dist/images/basic/panda_face.png -> /output/images/basic/panda_face.png.br
2023/08/01 15:54:36 gz /tmp/work/dist/images/basic/panda_face.png -> /output/images/basic/panda_face.png.gz
2023/08/01 15:54:36 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/peach.png /tmp/work/dist/images/basic/peach.png
2023/08/01 15:54:37 Optimizing /tmp/work/dist/images/basic/on.png
Input size: 1472 (1K)
Result size: 1776 (1K). Percentage of original: 120.652%
Preserving original PNG since it was smaller


2023/08/01 15:54:37 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/on.png.br /tmp/work/dist/images/basic/on.png
2023/08/01 15:54:37 br /tmp/work/dist/images/basic/on.png -> /output/images/basic/on.png.br
2023/08/01 15:54:37 gz /tmp/work/dist/images/basic/on.png -> /output/images/basic/on.png.gz
2023/08/01 15:54:37 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/pear.png /tmp/work/dist/images/basic/pear.png
2023/08/01 15:54:37 Optimizing /tmp/work/dist/images/basic/parking.png
Input size: 3083 (3K)
Result size: 3093 (3K). Percentage of original: 100.324%
Preserving original PNG since it was smaller


2023/08/01 15:54:37 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/parking.png.br /tmp/work/dist/images/basic/parking.png
2023/08/01 15:54:38 br /tmp/work/dist/images/basic/parking.png -> /output/images/basic/parking.png.br
2023/08/01 15:54:38 gz /tmp/work/dist/images/basic/parking.png -> /output/images/basic/parking.png.gz
2023/08/01 15:54:38 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/pencil.png /tmp/work/dist/images/basic/pencil.png
2023/08/01 15:54:40 Optimizing /tmp/work/dist/images/basic/partly_sunny.png
Input size: 5169 (5K)
Result size: 5242 (5K). Percentage of original: 101.412%
Preserving original PNG since it was smaller


2023/08/01 15:54:40 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/partly_sunny.png.br /tmp/work/dist/images/basic/partly_sunny.png
2023/08/01 15:54:40 br /tmp/work/dist/images/basic/partly_sunny.png -> /output/images/basic/partly_sunny.png.br
2023/08/01 15:54:40 gz /tmp/work/dist/images/basic/partly_sunny.png -> /output/images/basic/partly_sunny.png.gz
2023/08/01 15:54:40 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/pencil2.png /tmp/work/dist/images/basic/pencil2.png
2023/08/01 15:54:45 Optimizing /tmp/work/dist/images/basic/passport_control.png
Input size: 4018 (3K)
Result size: 4039 (3K). Percentage of original: 100.523%
Preserving original PNG since it was smaller


2023/08/01 15:54:45 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/passport_control.png.br /tmp/work/dist/images/basic/passport_control.png
2023/08/01 15:54:45 br /tmp/work/dist/images/basic/passport_control.png -> /output/images/basic/passport_control.png.br
2023/08/01 15:54:45 gz /tmp/work/dist/images/basic/passport_control.png -> /output/images/basic/passport_control.png.gz
2023/08/01 15:54:45 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/penguin.png /tmp/work/dist/images/basic/penguin.png
2023/08/01 15:54:46 Optimizing /tmp/work/dist/images/basic/paw_prints.png
Input size: 2471 (2K)
Result size: 2409 (2K). Percentage of original: 97.491%
Result is smaller


2023/08/01 15:54:46 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/paw_prints.png.br /tmp/work/dist/images/basic/paw_prints.png
2023/08/01 15:54:46 br /tmp/work/dist/images/basic/paw_prints.png -> /output/images/basic/paw_prints.png.br
2023/08/01 15:54:46 gz /tmp/work/dist/images/basic/paw_prints.png -> /output/images/basic/paw_prints.png.gz
2023/08/01 15:54:46 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/pensive.png /tmp/work/dist/images/basic/pensive.png
2023/08/01 15:54:48 Optimizing /tmp/work/dist/images/basic/peach.png
Input size: 5920 (5K)
Result size: 5907 (5K). Percentage of original: 99.780%
Result is smaller


2023/08/01 15:54:48 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/peach.png.br /tmp/work/dist/images/basic/peach.png
2023/08/01 15:54:48 br /tmp/work/dist/images/basic/peach.png -> /output/images/basic/peach.png.br
2023/08/01 15:54:48 gz /tmp/work/dist/images/basic/peach.png -> /output/images/basic/peach.png.gz
2023/08/01 15:54:48 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/performing_arts.png /tmp/work/dist/images/basic/performing_arts.png
2023/08/01 15:54:49 Optimizing /tmp/work/dist/images/basic/pear.png
Input size: 6936 (6K)
Result size: 6931 (6K). Percentage of original: 99.928%
Result is smaller


2023/08/01 15:54:49 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/pear.png.br /tmp/work/dist/images/basic/pear.png
2023/08/01 15:54:49 br /tmp/work/dist/images/basic/pear.png -> /output/images/basic/pear.png.br
2023/08/01 15:54:49 gz /tmp/work/dist/images/basic/pear.png -> /output/images/basic/pear.png.gz
2023/08/01 15:54:49 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/persevere.png /tmp/work/dist/images/basic/persevere.png
2023/08/01 15:54:49 Optimizing /tmp/work/dist/images/basic/page_facing_up.png
Input size: 2178 (2K)
Result size: 2317 (2K). Percentage of original: 106.382%
Preserving original PNG since it was smaller


2023/08/01 15:54:49 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/page_facing_up.png.br /tmp/work/dist/images/basic/page_facing_up.png
2023/08/01 15:54:49 br /tmp/work/dist/images/basic/page_facing_up.png -> /output/images/basic/page_facing_up.png.br
2023/08/01 15:54:49 gz /tmp/work/dist/images/basic/page_facing_up.png -> /output/images/basic/page_facing_up.png.gz
2023/08/01 15:54:49 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/person_frowning.png /tmp/work/dist/images/basic/person_frowning.png
2023/08/01 15:54:50 Optimizing /tmp/work/dist/images/basic/pencil.png
Input size: 4945 (4K)
Result size: 4989 (4K). Percentage of original: 100.890%
Preserving original PNG since it was smaller


2023/08/01 15:54:50 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/pencil.png.br /tmp/work/dist/images/basic/pencil.png
2023/08/01 15:54:50 br /tmp/work/dist/images/basic/pencil.png -> /output/images/basic/pencil.png.br
2023/08/01 15:54:50 gz /tmp/work/dist/images/basic/pencil.png -> /output/images/basic/pencil.png.gz
2023/08/01 15:54:50 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/person_with_blond_hair.png /tmp/work/dist/images/basic/person_with_blond_hair.png
2023/08/01 15:54:50 Optimizing /tmp/work/dist/images/basic/part_alternation_mark.png
Input size: 2681 (2K)
Result size: 2760 (2K). Percentage of original: 102.947%
Preserving original PNG since it was smaller


2023/08/01 15:54:50 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/part_alternation_mark.png.br /tmp/work/dist/images/basic/part_alternation_mark.png
2023/08/01 15:54:50 br /tmp/work/dist/images/basic/part_alternation_mark.png -> /output/images/basic/part_alternation_mark.png.br
2023/08/01 15:54:50 gz /tmp/work/dist/images/basic/part_alternation_mark.png -> /output/images/basic/part_alternation_mark.png.gz
2023/08/01 15:54:50 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/person_with_pouting_face.png /tmp/work/dist/images/basic/person_with_pouting_face.png
2023/08/01 15:54:52 Optimizing /tmp/work/dist/images/basic/pencil2.png
Input size: 4348 (4K)
Result size: 4488 (4K). Percentage of original: 103.220%
Preserving original PNG since it was smaller


2023/08/01 15:54:52 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/pencil2.png.br /tmp/work/dist/images/basic/pencil2.png
2023/08/01 15:54:53 br /tmp/work/dist/images/basic/pencil2.png -> /output/images/basic/pencil2.png.br
2023/08/01 15:54:53 gz /tmp/work/dist/images/basic/pencil2.png -> /output/images/basic/pencil2.png.gz
2023/08/01 15:54:53 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/phone.png /tmp/work/dist/images/basic/phone.png
2023/08/01 15:54:53 Optimizing /tmp/work/dist/images/basic/penguin.png
Input size: 4746 (4K)
Result size: 4668 (4K). Percentage of original: 98.357%
Result is smaller


2023/08/01 15:54:53 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/penguin.png.br /tmp/work/dist/images/basic/penguin.png
2023/08/01 15:54:53 br /tmp/work/dist/images/basic/penguin.png -> /output/images/basic/penguin.png.br
2023/08/01 15:54:53 gz /tmp/work/dist/images/basic/penguin.png -> /output/images/basic/penguin.png.gz
2023/08/01 15:54:53 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/pig_nose.png /tmp/work/dist/images/basic/pig_nose.png
2023/08/01 15:54:58 Optimizing /tmp/work/dist/images/basic/performing_arts.png
Input size: 6287 (6K)
Result size: 6394 (6K). Percentage of original: 101.702%
Preserving original PNG since it was smaller


2023/08/01 15:54:58 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/performing_arts.png.br /tmp/work/dist/images/basic/performing_arts.png
2023/08/01 15:54:58 br /tmp/work/dist/images/basic/performing_arts.png -> /output/images/basic/performing_arts.png.br
2023/08/01 15:54:58 gz /tmp/work/dist/images/basic/performing_arts.png -> /output/images/basic/performing_arts.png.gz
2023/08/01 15:54:58 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/pig.png /tmp/work/dist/images/basic/pig.png
2023/08/01 15:54:59 Optimizing /tmp/work/dist/images/basic/pensive.png
Input size: 5062 (4K)
Result size: 4801 (4K). Percentage of original: 94.844%
Result is smaller


2023/08/01 15:54:59 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/pensive.png.br /tmp/work/dist/images/basic/pensive.png
2023/08/01 15:54:59 br /tmp/work/dist/images/basic/pensive.png -> /output/images/basic/pensive.png.br
2023/08/01 15:54:59 gz /tmp/work/dist/images/basic/pensive.png -> /output/images/basic/pensive.png.gz
2023/08/01 15:54:59 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/pig2.png /tmp/work/dist/images/basic/pig2.png
2023/08/01 15:55:01 Optimizing /tmp/work/dist/images/basic/phone.png
Input size: 5495 (5K)
Result size: 5522 (5K). Percentage of original: 100.491%
Preserving original PNG since it was smaller


2023/08/01 15:55:01 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/phone.png.br /tmp/work/dist/images/basic/phone.png
2023/08/01 15:55:01 Optimizing /tmp/work/dist/images/basic/person_with_blond_hair.png
Input size: 6622 (6K)
Result size: 6552 (6K). Percentage of original: 98.943%
Result is smaller


2023/08/01 15:55:01 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/person_with_blond_hair.png.br /tmp/work/dist/images/basic/person_with_blond_hair.png
2023/08/01 15:55:01 br /tmp/work/dist/images/basic/phone.png -> /output/images/basic/phone.png.br
2023/08/01 15:55:01 gz /tmp/work/dist/images/basic/phone.png -> /output/images/basic/phone.png.gz
2023/08/01 15:55:01 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/pill.png /tmp/work/dist/images/basic/pill.png
2023/08/01 15:55:01 br /tmp/work/dist/images/basic/person_with_blond_hair.png -> /output/images/basic/person_with_blond_hair.png.br
2023/08/01 15:55:01 gz /tmp/work/dist/images/basic/person_with_blond_hair.png -> /output/images/basic/person_with_blond_hair.png.gz
2023/08/01 15:55:01 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/pineapple.png /tmp/work/dist/images/basic/pineapple.png
2023/08/01 15:55:02 Optimizing /tmp/work/dist/images/basic/persevere.png
Input size: 5519 (5K)
Result size: 5190 (5K). Percentage of original: 94.039%
Result is smaller


2023/08/01 15:55:02 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/persevere.png.br /tmp/work/dist/images/basic/persevere.png
2023/08/01 15:55:02 br /tmp/work/dist/images/basic/persevere.png -> /output/images/basic/persevere.png.br
2023/08/01 15:55:02 gz /tmp/work/dist/images/basic/persevere.png -> /output/images/basic/persevere.png.gz
2023/08/01 15:55:02 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/pisces.png /tmp/work/dist/images/basic/pisces.png
2023/08/01 15:55:02 Optimizing /tmp/work/dist/images/basic/person_frowning.png
Input size: 4826 (4K)
Result size: 4878 (4K). Percentage of original: 101.077%
Preserving original PNG since it was smaller


2023/08/01 15:55:02 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/person_frowning.png.br /tmp/work/dist/images/basic/person_frowning.png
2023/08/01 15:55:02 br /tmp/work/dist/images/basic/person_frowning.png -> /output/images/basic/person_frowning.png.br
2023/08/01 15:55:02 gz /tmp/work/dist/images/basic/person_frowning.png -> /output/images/basic/person_frowning.png.gz
2023/08/01 15:55:02 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/pizza.png /tmp/work/dist/images/basic/pizza.png
2023/08/01 15:55:04 Optimizing /tmp/work/dist/images/basic/pig_nose.png
Input size: 4761 (4K)
Result size: 4631 (4K). Percentage of original: 97.269%
Result is smaller


2023/08/01 15:55:04 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/pig_nose.png.br /tmp/work/dist/images/basic/pig_nose.png
2023/08/01 15:55:04 br /tmp/work/dist/images/basic/pig_nose.png -> /output/images/basic/pig_nose.png.br
2023/08/01 15:55:04 gz /tmp/work/dist/images/basic/pig_nose.png -> /output/images/basic/pig_nose.png.gz
2023/08/01 15:55:04 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/plus1.png /tmp/work/dist/images/basic/plus1.png
2023/08/01 15:55:08 Optimizing /tmp/work/dist/images/basic/pig2.png
Input size: 4797 (4K)
Result size: 4662 (4K). Percentage of original: 97.186%
Result is smaller


2023/08/01 15:55:08 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/pig2.png.br /tmp/work/dist/images/basic/pig2.png
2023/08/01 15:55:08 br /tmp/work/dist/images/basic/pig2.png -> /output/images/basic/pig2.png.br
2023/08/01 15:55:08 gz /tmp/work/dist/images/basic/pig2.png -> /output/images/basic/pig2.png.gz
2023/08/01 15:55:08 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/point_down.png /tmp/work/dist/images/basic/point_down.png
2023/08/01 15:55:11 Optimizing /tmp/work/dist/images/basic/person_with_pouting_face.png
Input size: 5428 (5K)
Result size: 5486 (5K). Percentage of original: 101.069%
Preserving original PNG since it was smaller


2023/08/01 15:55:11 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/person_with_pouting_face.png.br /tmp/work/dist/images/basic/person_with_pouting_face.png
2023/08/01 15:55:11 br /tmp/work/dist/images/basic/person_with_pouting_face.png -> /output/images/basic/person_with_pouting_face.png.br
2023/08/01 15:55:11 gz /tmp/work/dist/images/basic/person_with_pouting_face.png -> /output/images/basic/person_with_pouting_face.png.gz
2023/08/01 15:55:11 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/point_left.png /tmp/work/dist/images/basic/point_left.png
2023/08/01 15:55:11 Optimizing /tmp/work/dist/images/basic/pineapple.png
Input size: 5634 (5K)
Result size: 5696 (5K). Percentage of original: 101.100%
Preserving original PNG since it was smaller


2023/08/01 15:55:11 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/pineapple.png.br /tmp/work/dist/images/basic/pineapple.png
2023/08/01 15:55:11 Optimizing /tmp/work/dist/images/basic/pill.png
Input size: 5022 (4K)
Result size: 5102 (4K). Percentage of original: 101.593%
Preserving original PNG since it was smaller


2023/08/01 15:55:11 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/pill.png.br /tmp/work/dist/images/basic/pill.png
2023/08/01 15:55:11 br /tmp/work/dist/images/basic/pineapple.png -> /output/images/basic/pineapple.png.br
2023/08/01 15:55:11 gz /tmp/work/dist/images/basic/pineapple.png -> /output/images/basic/pineapple.png.gz
2023/08/01 15:55:11 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/point_right.png /tmp/work/dist/images/basic/point_right.png
2023/08/01 15:55:11 br /tmp/work/dist/images/basic/pill.png -> /output/images/basic/pill.png.br
2023/08/01 15:55:11 gz /tmp/work/dist/images/basic/pill.png -> /output/images/basic/pill.png.gz
2023/08/01 15:55:11 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/point_up_2.png /tmp/work/dist/images/basic/point_up_2.png
2023/08/01 15:55:12 Optimizing /tmp/work/dist/images/basic/pig.png
Input size: 5996 (5K)
Result size: 6045 (5K). Percentage of original: 100.817%
Preserving original PNG since it was smaller


2023/08/01 15:55:12 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/pig.png.br /tmp/work/dist/images/basic/pig.png
2023/08/01 15:55:12 br /tmp/work/dist/images/basic/pig.png -> /output/images/basic/pig.png.br
2023/08/01 15:55:12 gz /tmp/work/dist/images/basic/pig.png -> /output/images/basic/pig.png.gz
2023/08/01 15:55:12 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/point_up.png /tmp/work/dist/images/basic/point_up.png
2023/08/01 15:55:14 Optimizing /tmp/work/dist/images/basic/plus1.png
Input size: 5075 (4K)
Result size: 5052 (4K). Percentage of original: 99.547%
Result is smaller


2023/08/01 15:55:14 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/plus1.png.br /tmp/work/dist/images/basic/plus1.png
2023/08/01 15:55:15 br /tmp/work/dist/images/basic/plus1.png -> /output/images/basic/plus1.png.br
2023/08/01 15:55:15 gz /tmp/work/dist/images/basic/plus1.png -> /output/images/basic/plus1.png.gz
2023/08/01 15:55:15 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/police_car.png /tmp/work/dist/images/basic/police_car.png
2023/08/01 15:55:17 Optimizing /tmp/work/dist/images/basic/pizza.png
Input size: 5273 (5K)
Result size: 5398 (5K). Percentage of original: 102.371%
Preserving original PNG since it was smaller


2023/08/01 15:55:17 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/pizza.png.br /tmp/work/dist/images/basic/pizza.png
2023/08/01 15:55:17 br /tmp/work/dist/images/basic/pizza.png -> /output/images/basic/pizza.png.br
2023/08/01 15:55:17 gz /tmp/work/dist/images/basic/pizza.png -> /output/images/basic/pizza.png.gz
2023/08/01 15:55:17 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/poodle.png /tmp/work/dist/images/basic/poodle.png
2023/08/01 15:55:19 Optimizing /tmp/work/dist/images/basic/point_left.png
Input size: 3085 (3K)
Result size: 3011 (2K). Percentage of original: 97.601%
Result is smaller


2023/08/01 15:55:19 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/point_left.png.br /tmp/work/dist/images/basic/point_left.png
2023/08/01 15:55:19 br /tmp/work/dist/images/basic/point_left.png -> /output/images/basic/point_left.png.br
2023/08/01 15:55:19 gz /tmp/work/dist/images/basic/point_left.png -> /output/images/basic/point_left.png.gz
2023/08/01 15:55:19 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/poop.png /tmp/work/dist/images/basic/poop.png
2023/08/01 15:55:19 Optimizing /tmp/work/dist/images/basic/pisces.png
Input size: 4441 (4K)
Result size: 4268 (4K). Percentage of original: 96.104%
Result is smaller


2023/08/01 15:55:19 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/pisces.png.br /tmp/work/dist/images/basic/pisces.png
2023/08/01 15:55:19 Optimizing /tmp/work/dist/images/basic/point_right.png
Input size: 3079 (3K)
Result size: 3051 (2K). Percentage of original: 99.091%
Result is smaller


2023/08/01 15:55:19 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/point_right.png.br /tmp/work/dist/images/basic/point_right.png
2023/08/01 15:55:19 br /tmp/work/dist/images/basic/pisces.png -> /output/images/basic/pisces.png.br
2023/08/01 15:55:20 gz /tmp/work/dist/images/basic/pisces.png -> /output/images/basic/pisces.png.gz
2023/08/01 15:55:20 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/post_office.png /tmp/work/dist/images/basic/post_office.png
2023/08/01 15:55:20 br /tmp/work/dist/images/basic/point_right.png -> /output/images/basic/point_right.png.br
2023/08/01 15:55:20 gz /tmp/work/dist/images/basic/point_right.png -> /output/images/basic/point_right.png.gz
2023/08/01 15:55:20 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/postal_horn.png /tmp/work/dist/images/basic/postal_horn.png
2023/08/01 15:55:21 Optimizing /tmp/work/dist/images/basic/point_down.png
Input size: 3225 (3K)
Result size: 3242 (3K). Percentage of original: 100.527%
Preserving original PNG since it was smaller


2023/08/01 15:55:21 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/point_down.png.br /tmp/work/dist/images/basic/point_down.png
2023/08/01 15:55:21 br /tmp/work/dist/images/basic/point_down.png -> /output/images/basic/point_down.png.br
2023/08/01 15:55:21 gz /tmp/work/dist/images/basic/point_down.png -> /output/images/basic/point_down.png.gz
2023/08/01 15:55:21 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/postbox.png /tmp/work/dist/images/basic/postbox.png
2023/08/01 15:55:23 Optimizing /tmp/work/dist/images/basic/point_up.png
Input size: 3431 (3K)
Result size: 3454 (3K). Percentage of original: 100.670%
Preserving original PNG since it was smaller


2023/08/01 15:55:23 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/point_up.png.br /tmp/work/dist/images/basic/point_up.png
2023/08/01 15:55:23 br /tmp/work/dist/images/basic/point_up.png -> /output/images/basic/point_up.png.br
2023/08/01 15:55:23 gz /tmp/work/dist/images/basic/point_up.png -> /output/images/basic/point_up.png.gz
2023/08/01 15:55:23 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/potable_water.png /tmp/work/dist/images/basic/potable_water.png
2023/08/01 15:55:24 Optimizing /tmp/work/dist/images/basic/point_up_2.png
Input size: 3181 (3K)
Result size: 3223 (3K). Percentage of original: 101.320%
Preserving original PNG since it was smaller


2023/08/01 15:55:24 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/point_up_2.png.br /tmp/work/dist/images/basic/point_up_2.png
2023/08/01 15:55:24 br /tmp/work/dist/images/basic/point_up_2.png -> /output/images/basic/point_up_2.png.br
2023/08/01 15:55:24 gz /tmp/work/dist/images/basic/point_up_2.png -> /output/images/basic/point_up_2.png.gz
2023/08/01 15:55:24 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/pouch.png /tmp/work/dist/images/basic/pouch.png
2023/08/01 15:55:24 Optimizing /tmp/work/dist/images/basic/poodle.png
Input size: 6852 (6K)
Result size: 7014 (6K). Percentage of original: 102.364%
Preserving original PNG since it was smaller


2023/08/01 15:55:24 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/poodle.png.br /tmp/work/dist/images/basic/poodle.png
2023/08/01 15:55:24 br /tmp/work/dist/images/basic/poodle.png -> /output/images/basic/poodle.png.br
2023/08/01 15:55:24 gz /tmp/work/dist/images/basic/poodle.png -> /output/images/basic/poodle.png.gz
2023/08/01 15:55:24 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/poultry_leg.png /tmp/work/dist/images/basic/poultry_leg.png
2023/08/01 15:55:28 Optimizing /tmp/work/dist/images/basic/police_car.png
Input size: 3349 (3K)
Result size: 3336 (3K). Percentage of original: 99.612%
Result is smaller


2023/08/01 15:55:28 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/police_car.png.br /tmp/work/dist/images/basic/police_car.png
2023/08/01 15:55:28 br /tmp/work/dist/images/basic/police_car.png -> /output/images/basic/police_car.png.br
2023/08/01 15:55:28 gz /tmp/work/dist/images/basic/police_car.png -> /output/images/basic/police_car.png.gz
2023/08/01 15:55:28 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/pound.png /tmp/work/dist/images/basic/pound.png
2023/08/01 15:55:31 Optimizing /tmp/work/dist/images/basic/poop.png
Input size: 4754 (4K)
Result size: 4859 (4K). Percentage of original: 102.209%
Preserving original PNG since it was smaller


2023/08/01 15:55:31 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/poop.png.br /tmp/work/dist/images/basic/poop.png
2023/08/01 15:55:31 br /tmp/work/dist/images/basic/poop.png -> /output/images/basic/poop.png.br
2023/08/01 15:55:31 gz /tmp/work/dist/images/basic/poop.png -> /output/images/basic/poop.png.gz
2023/08/01 15:55:31 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/pouting_cat.png /tmp/work/dist/images/basic/pouting_cat.png
2023/08/01 15:55:31 Optimizing /tmp/work/dist/images/basic/postal_horn.png
Input size: 4735 (4K)
Result size: 4900 (4K). Percentage of original: 103.485%
Preserving original PNG since it was smaller


2023/08/01 15:55:31 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/postal_horn.png.br /tmp/work/dist/images/basic/postal_horn.png
2023/08/01 15:55:31 br /tmp/work/dist/images/basic/postal_horn.png -> /output/images/basic/postal_horn.png.br
2023/08/01 15:55:31 gz /tmp/work/dist/images/basic/postal_horn.png -> /output/images/basic/postal_horn.png.gz
2023/08/01 15:55:31 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/pray.png /tmp/work/dist/images/basic/pray.png
2023/08/01 15:55:32 Optimizing /tmp/work/dist/images/basic/postbox.png
Input size: 3388 (3K)
Result size: 3398 (3K). Percentage of original: 100.295%
Preserving original PNG since it was smaller


2023/08/01 15:55:32 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/postbox.png.br /tmp/work/dist/images/basic/postbox.png
2023/08/01 15:55:32 br /tmp/work/dist/images/basic/postbox.png -> /output/images/basic/postbox.png.br
2023/08/01 15:55:32 gz /tmp/work/dist/images/basic/postbox.png -> /output/images/basic/postbox.png.gz
2023/08/01 15:55:32 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/princess.png /tmp/work/dist/images/basic/princess.png
2023/08/01 15:55:34 Optimizing /tmp/work/dist/images/basic/potable_water.png
Input size: 3934 (3K)
Result size: 3939 (3K). Percentage of original: 100.127%
Preserving original PNG since it was smaller


2023/08/01 15:55:34 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/potable_water.png.br /tmp/work/dist/images/basic/potable_water.png
2023/08/01 15:55:34 br /tmp/work/dist/images/basic/potable_water.png -> /output/images/basic/potable_water.png.br
2023/08/01 15:55:34 gz /tmp/work/dist/images/basic/potable_water.png -> /output/images/basic/potable_water.png.gz
2023/08/01 15:55:34 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/punch.png /tmp/work/dist/images/basic/punch.png
2023/08/01 15:55:35 Optimizing /tmp/work/dist/images/basic/pouch.png
Input size: 4642 (4K)
Result size: 4689 (4K). Percentage of original: 101.012%
Preserving original PNG since it was smaller


2023/08/01 15:55:35 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/pouch.png.br /tmp/work/dist/images/basic/pouch.png
2023/08/01 15:55:35 br /tmp/work/dist/images/basic/pouch.png -> /output/images/basic/pouch.png.br
2023/08/01 15:55:35 gz /tmp/work/dist/images/basic/pouch.png -> /output/images/basic/pouch.png.gz
2023/08/01 15:55:35 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/purple_heart.png /tmp/work/dist/images/basic/purple_heart.png
2023/08/01 15:55:36 Optimizing /tmp/work/dist/images/basic/pound.png
Input size: 4235 (4K)
Result size: 4165 (4K). Percentage of original: 98.347%
Result is smaller


2023/08/01 15:55:36 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/pound.png.br /tmp/work/dist/images/basic/pound.png
2023/08/01 15:55:36 br /tmp/work/dist/images/basic/pound.png -> /output/images/basic/pound.png.br
2023/08/01 15:55:36 gz /tmp/work/dist/images/basic/pound.png -> /output/images/basic/pound.png.gz
2023/08/01 15:55:36 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/purse.png /tmp/work/dist/images/basic/purse.png
2023/08/01 15:55:36 Optimizing /tmp/work/dist/images/basic/poultry_leg.png
Input size: 4200 (4K)
Result size: 4256 (4K). Percentage of original: 101.333%
Preserving original PNG since it was smaller


2023/08/01 15:55:36 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/poultry_leg.png.br /tmp/work/dist/images/basic/poultry_leg.png
2023/08/01 15:55:36 br /tmp/work/dist/images/basic/poultry_leg.png -> /output/images/basic/poultry_leg.png.br
2023/08/01 15:55:36 gz /tmp/work/dist/images/basic/poultry_leg.png -> /output/images/basic/poultry_leg.png.gz
2023/08/01 15:55:36 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/pushpin.png /tmp/work/dist/images/basic/pushpin.png
2023/08/01 15:55:40 Optimizing /tmp/work/dist/images/basic/post_office.png
Input size: 5136 (5K)
Result size: 5168 (5K). Percentage of original: 100.623%
Preserving original PNG since it was smaller


2023/08/01 15:55:40 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/post_office.png.br /tmp/work/dist/images/basic/post_office.png
2023/08/01 15:55:40 br /tmp/work/dist/images/basic/post_office.png -> /output/images/basic/post_office.png.br
2023/08/01 15:55:40 gz /tmp/work/dist/images/basic/post_office.png -> /output/images/basic/post_office.png.gz
2023/08/01 15:55:40 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/put_litter_in_its_place.png /tmp/work/dist/images/basic/put_litter_in_its_place.png
2023/08/01 15:55:40 Optimizing /tmp/work/dist/images/basic/pray.png
Input size: 6203 (6K)
Result size: 6544 (6K). Percentage of original: 105.497%
Preserving original PNG since it was smaller


2023/08/01 15:55:40 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/pray.png.br /tmp/work/dist/images/basic/pray.png
2023/08/01 15:55:40 br /tmp/work/dist/images/basic/pray.png -> /output/images/basic/pray.png.br
2023/08/01 15:55:40 gz /tmp/work/dist/images/basic/pray.png -> /output/images/basic/pray.png.gz
2023/08/01 15:55:40 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/question.png /tmp/work/dist/images/basic/question.png
2023/08/01 15:55:40 Optimizing /tmp/work/dist/images/basic/princess.png
Input size: 7920 (7K)
Result size: 7939 (7K). Percentage of original: 100.240%
Preserving original PNG since it was smaller


2023/08/01 15:55:40 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/princess.png.br /tmp/work/dist/images/basic/princess.png
2023/08/01 15:55:41 br /tmp/work/dist/images/basic/princess.png -> /output/images/basic/princess.png.br
2023/08/01 15:55:41 gz /tmp/work/dist/images/basic/princess.png -> /output/images/basic/princess.png.gz
2023/08/01 15:55:41 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/rabbit.png /tmp/work/dist/images/basic/rabbit.png
2023/08/01 15:55:42 Optimizing /tmp/work/dist/images/basic/pouting_cat.png
Input size: 4918 (4K)
Result size: 4993 (4K). Percentage of original: 101.525%
Preserving original PNG since it was smaller


2023/08/01 15:55:42 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/pouting_cat.png.br /tmp/work/dist/images/basic/pouting_cat.png
2023/08/01 15:55:42 br /tmp/work/dist/images/basic/pouting_cat.png -> /output/images/basic/pouting_cat.png.br
2023/08/01 15:55:42 gz /tmp/work/dist/images/basic/pouting_cat.png -> /output/images/basic/pouting_cat.png.gz
2023/08/01 15:55:42 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/rabbit2.png /tmp/work/dist/images/basic/rabbit2.png
2023/08/01 15:55:44 Optimizing /tmp/work/dist/images/basic/punch.png
Input size: 4833 (4K)
Result size: 4840 (4K). Percentage of original: 100.145%
Preserving original PNG since it was smaller


2023/08/01 15:55:44 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/punch.png.br /tmp/work/dist/images/basic/punch.png
2023/08/01 15:55:44 br /tmp/work/dist/images/basic/punch.png -> /output/images/basic/punch.png.br
2023/08/01 15:55:44 gz /tmp/work/dist/images/basic/punch.png -> /output/images/basic/punch.png.gz
2023/08/01 15:55:44 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/racehorse.png /tmp/work/dist/images/basic/racehorse.png
2023/08/01 15:55:47 Optimizing /tmp/work/dist/images/basic/purple_heart.png
Input size: 4295 (4K)
Result size: 4277 (4K). Percentage of original: 99.581%
Result is smaller


2023/08/01 15:55:47 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/purple_heart.png.br /tmp/work/dist/images/basic/purple_heart.png
2023/08/01 15:55:47 br /tmp/work/dist/images/basic/purple_heart.png -> /output/images/basic/purple_heart.png.br
2023/08/01 15:55:47 gz /tmp/work/dist/images/basic/purple_heart.png -> /output/images/basic/purple_heart.png.gz
2023/08/01 15:55:47 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/radio_button.png /tmp/work/dist/images/basic/radio_button.png
2023/08/01 15:55:47 Optimizing /tmp/work/dist/images/basic/pushpin.png
Input size: 3793 (3K)
Result size: 3871 (3K). Percentage of original: 102.056%
Preserving original PNG since it was smaller


2023/08/01 15:55:47 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/pushpin.png.br /tmp/work/dist/images/basic/pushpin.png
2023/08/01 15:55:47 br /tmp/work/dist/images/basic/pushpin.png -> /output/images/basic/pushpin.png.br
2023/08/01 15:55:47 gz /tmp/work/dist/images/basic/pushpin.png -> /output/images/basic/pushpin.png.gz
2023/08/01 15:55:47 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/radio.png /tmp/work/dist/images/basic/radio.png
2023/08/01 15:55:47 Optimizing /tmp/work/dist/images/basic/purse.png
Input size: 5033 (4K)
Result size: 5009 (4K). Percentage of original: 99.523%
Result is smaller


2023/08/01 15:55:47 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/purse.png.br /tmp/work/dist/images/basic/purse.png
2023/08/01 15:55:47 br /tmp/work/dist/images/basic/purse.png -> /output/images/basic/purse.png.br
2023/08/01 15:55:47 gz /tmp/work/dist/images/basic/purse.png -> /output/images/basic/purse.png.gz
2023/08/01 15:55:47 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/rage.png /tmp/work/dist/images/basic/rage.png
2023/08/01 15:55:49 Optimizing /tmp/work/dist/images/basic/rabbit.png
Input size: 5677 (5K)
Result size: 5759 (5K). Percentage of original: 101.444%
Preserving original PNG since it was smaller


2023/08/01 15:55:49 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/rabbit.png.br /tmp/work/dist/images/basic/rabbit.png
2023/08/01 15:55:49 br /tmp/work/dist/images/basic/rabbit.png -> /output/images/basic/rabbit.png.br
2023/08/01 15:55:49 gz /tmp/work/dist/images/basic/rabbit.png -> /output/images/basic/rabbit.png.gz
2023/08/01 15:55:49 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/rage1.png /tmp/work/dist/images/basic/rage1.png
2023/08/01 15:55:50 Optimizing /tmp/work/dist/images/basic/put_litter_in_its_place.png
Input size: 4091 (3K)
Result size: 4105 (4K). Percentage of original: 100.342%
Preserving original PNG since it was smaller


2023/08/01 15:55:50 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/put_litter_in_its_place.png.br /tmp/work/dist/images/basic/put_litter_in_its_place.png
2023/08/01 15:55:50 br /tmp/work/dist/images/basic/put_litter_in_its_place.png -> /output/images/basic/put_litter_in_its_place.png.br
2023/08/01 15:55:50 gz /tmp/work/dist/images/basic/put_litter_in_its_place.png -> /output/images/basic/put_litter_in_its_place.png.gz
2023/08/01 15:55:50 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/rage2.png /tmp/work/dist/images/basic/rage2.png
2023/08/01 15:55:51 Optimizing /tmp/work/dist/images/basic/question.png
Input size: 1711 (1K)
Result size: 1834 (1K). Percentage of original: 107.189%
Preserving original PNG since it was smaller


2023/08/01 15:55:51 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/question.png.br /tmp/work/dist/images/basic/question.png
2023/08/01 15:55:51 br /tmp/work/dist/images/basic/question.png -> /output/images/basic/question.png.br
2023/08/01 15:55:51 gz /tmp/work/dist/images/basic/question.png -> /output/images/basic/question.png.gz
2023/08/01 15:55:51 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/rage3.png /tmp/work/dist/images/basic/rage3.png
2023/08/01 15:55:51 Optimizing /tmp/work/dist/images/basic/rabbit2.png
Input size: 4425 (4K)
Result size: 4553 (4K). Percentage of original: 102.893%
Preserving original PNG since it was smaller


2023/08/01 15:55:51 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/rabbit2.png.br /tmp/work/dist/images/basic/rabbit2.png
2023/08/01 15:55:51 br /tmp/work/dist/images/basic/rabbit2.png -> /output/images/basic/rabbit2.png.br
2023/08/01 15:55:51 gz /tmp/work/dist/images/basic/rabbit2.png -> /output/images/basic/rabbit2.png.gz
2023/08/01 15:55:51 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/rage4.png /tmp/work/dist/images/basic/rage4.png
2023/08/01 15:55:53 Optimizing /tmp/work/dist/images/basic/racehorse.png
Input size: 4735 (4K)
Result size: 4675 (4K). Percentage of original: 98.733%
Result is smaller


2023/08/01 15:55:53 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/racehorse.png.br /tmp/work/dist/images/basic/racehorse.png
2023/08/01 15:55:53 br /tmp/work/dist/images/basic/racehorse.png -> /output/images/basic/racehorse.png.br
2023/08/01 15:55:53 gz /tmp/work/dist/images/basic/racehorse.png -> /output/images/basic/racehorse.png.gz
2023/08/01 15:55:53 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/railway_car.png /tmp/work/dist/images/basic/railway_car.png
2023/08/01 15:55:53 Optimizing /tmp/work/dist/images/basic/radio_button.png
Input size: 2198 (2K)
Result size: 2190 (2K). Percentage of original: 99.636%
Result is smaller


2023/08/01 15:55:53 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/radio_button.png.br /tmp/work/dist/images/basic/radio_button.png
2023/08/01 15:55:53 br /tmp/work/dist/images/basic/radio_button.png -> /output/images/basic/radio_button.png.br
2023/08/01 15:55:53 gz /tmp/work/dist/images/basic/radio_button.png -> /output/images/basic/radio_button.png.gz
2023/08/01 15:55:53 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/rainbow.png /tmp/work/dist/images/basic/rainbow.png
2023/08/01 15:55:56 Optimizing /tmp/work/dist/images/basic/rage.png
Input size: 5410 (5K)
Result size: 5129 (5K). Percentage of original: 94.806%
Result is smaller


2023/08/01 15:55:56 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/rage.png.br /tmp/work/dist/images/basic/rage.png
2023/08/01 15:55:56 br /tmp/work/dist/images/basic/rage.png -> /output/images/basic/rage.png.br
2023/08/01 15:55:56 gz /tmp/work/dist/images/basic/rage.png -> /output/images/basic/rage.png.gz
2023/08/01 15:55:56 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/raised_hand.png /tmp/work/dist/images/basic/raised_hand.png
2023/08/01 15:55:59 Optimizing /tmp/work/dist/images/basic/radio.png
Input size: 6150 (6K)
Result size: 6199 (6K). Percentage of original: 100.797%
Preserving original PNG since it was smaller


2023/08/01 15:55:59 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/radio.png.br /tmp/work/dist/images/basic/radio.png
2023/08/01 15:55:59 br /tmp/work/dist/images/basic/radio.png -> /output/images/basic/radio.png.br
2023/08/01 15:55:59 gz /tmp/work/dist/images/basic/radio.png -> /output/images/basic/radio.png.gz
2023/08/01 15:55:59 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/raised_hands.png /tmp/work/dist/images/basic/raised_hands.png
2023/08/01 15:56:01 Optimizing /tmp/work/dist/images/basic/raised_hand.png
Input size: 4161 (4K)
Result size: 4097 (4K). Percentage of original: 98.462%
Result is smaller


2023/08/01 15:56:01 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/raised_hand.png.br /tmp/work/dist/images/basic/raised_hand.png
2023/08/01 15:56:01 br /tmp/work/dist/images/basic/raised_hand.png -> /output/images/basic/raised_hand.png.br
2023/08/01 15:56:01 gz /tmp/work/dist/images/basic/raised_hand.png -> /output/images/basic/raised_hand.png.gz
2023/08/01 15:56:01 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/raising_hand.png /tmp/work/dist/images/basic/raising_hand.png
2023/08/01 15:56:03 Optimizing /tmp/work/dist/images/basic/rainbow.png
Input size: 5314 (5K)
Result size: 5215 (5K). Percentage of original: 98.137%
Result is smaller


2023/08/01 15:56:03 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/rainbow.png.br /tmp/work/dist/images/basic/rainbow.png
2023/08/01 15:56:03 br /tmp/work/dist/images/basic/rainbow.png -> /output/images/basic/rainbow.png.br
2023/08/01 15:56:03 gz /tmp/work/dist/images/basic/rainbow.png -> /output/images/basic/rainbow.png.gz
2023/08/01 15:56:03 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/ram.png /tmp/work/dist/images/basic/ram.png
2023/08/01 15:56:04 Optimizing /tmp/work/dist/images/basic/railway_car.png
Input size: 3648 (3K)
Result size: 3624 (3K). Percentage of original: 99.342%
Result is smaller


2023/08/01 15:56:04 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/railway_car.png.br /tmp/work/dist/images/basic/railway_car.png
2023/08/01 15:56:04 br /tmp/work/dist/images/basic/railway_car.png -> /output/images/basic/railway_car.png.br
2023/08/01 15:56:04 gz /tmp/work/dist/images/basic/railway_car.png -> /output/images/basic/railway_car.png.gz
2023/08/01 15:56:04 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/ramen.png /tmp/work/dist/images/basic/ramen.png
2023/08/01 15:56:09 Optimizing /tmp/work/dist/images/basic/raised_hands.png
Input size: 5375 (5K)
Result size: 5350 (5K). Percentage of original: 99.535%
Result is smaller


2023/08/01 15:56:09 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/raised_hands.png.br /tmp/work/dist/images/basic/raised_hands.png
2023/08/01 15:56:09 br /tmp/work/dist/images/basic/raised_hands.png -> /output/images/basic/raised_hands.png.br
2023/08/01 15:56:09 gz /tmp/work/dist/images/basic/raised_hands.png -> /output/images/basic/raised_hands.png.gz
2023/08/01 15:56:09 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/rat.png /tmp/work/dist/images/basic/rat.png
2023/08/01 15:56:09 Optimizing /tmp/work/dist/images/basic/rage4.png
Input size: 1270 (1K)
Result size: 1331 (1K). Percentage of original: 104.803%
Preserving original PNG since it was smaller


2023/08/01 15:56:09 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/rage4.png.br /tmp/work/dist/images/basic/rage4.png
2023/08/01 15:56:09 br /tmp/work/dist/images/basic/rage4.png -> /output/images/basic/rage4.png.br
2023/08/01 15:56:09 gz /tmp/work/dist/images/basic/rage4.png -> /output/images/basic/rage4.png.gz
2023/08/01 15:56:09 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/recycle.png /tmp/work/dist/images/basic/recycle.png
2023/08/01 15:56:11 Optimizing /tmp/work/dist/images/basic/rage2.png
Input size: 1098 (1K)
Result size: 1142 (1K). Percentage of original: 104.007%
Preserving original PNG since it was smaller


2023/08/01 15:56:11 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/rage2.png.br /tmp/work/dist/images/basic/rage2.png
2023/08/01 15:56:11 br /tmp/work/dist/images/basic/rage2.png -> /output/images/basic/rage2.png.br
2023/08/01 15:56:11 gz /tmp/work/dist/images/basic/rage2.png -> /output/images/basic/rage2.png.gz
2023/08/01 15:56:11 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/red_car.png /tmp/work/dist/images/basic/red_car.png
2023/08/01 15:56:11 Optimizing /tmp/work/dist/images/basic/raising_hand.png
Input size: 6177 (6K)
Result size: 6272 (6K). Percentage of original: 101.538%
Preserving original PNG since it was smaller


2023/08/01 15:56:11 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/raising_hand.png.br /tmp/work/dist/images/basic/raising_hand.png
2023/08/01 15:56:11 br /tmp/work/dist/images/basic/raising_hand.png -> /output/images/basic/raising_hand.png.br
2023/08/01 15:56:11 gz /tmp/work/dist/images/basic/raising_hand.png -> /output/images/basic/raising_hand.png.gz
2023/08/01 15:56:11 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/red_circle.png /tmp/work/dist/images/basic/red_circle.png
2023/08/01 15:56:14 Optimizing /tmp/work/dist/images/basic/rage3.png
Input size: 1119 (1K)
Result size: 1180 (1K). Percentage of original: 105.451%
Preserving original PNG since it was smaller


2023/08/01 15:56:14 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/rage3.png.br /tmp/work/dist/images/basic/rage3.png
2023/08/01 15:56:14 br /tmp/work/dist/images/basic/rage3.png -> /output/images/basic/rage3.png.br
2023/08/01 15:56:14 gz /tmp/work/dist/images/basic/rage3.png -> /output/images/basic/rage3.png.gz
2023/08/01 15:56:14 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/registered.png /tmp/work/dist/images/basic/registered.png
2023/08/01 15:56:14 Optimizing /tmp/work/dist/images/basic/ram.png
Input size: 6531 (6K)
Result size: 6614 (6K). Percentage of original: 101.271%
Preserving original PNG since it was smaller


2023/08/01 15:56:14 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/ram.png.br /tmp/work/dist/images/basic/ram.png
2023/08/01 15:56:14 br /tmp/work/dist/images/basic/ram.png -> /output/images/basic/ram.png.br
2023/08/01 15:56:14 gz /tmp/work/dist/images/basic/ram.png -> /output/images/basic/ram.png.gz
2023/08/01 15:56:14 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/relaxed.png /tmp/work/dist/images/basic/relaxed.png
2023/08/01 15:56:16 Optimizing /tmp/work/dist/images/basic/recycle.png
Input size: 3704 (3K)
Result size: 3816 (3K). Percentage of original: 103.024%
Preserving original PNG since it was smaller


2023/08/01 15:56:16 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/recycle.png.br /tmp/work/dist/images/basic/recycle.png
2023/08/01 15:56:16 br /tmp/work/dist/images/basic/recycle.png -> /output/images/basic/recycle.png.br
2023/08/01 15:56:16 gz /tmp/work/dist/images/basic/recycle.png -> /output/images/basic/recycle.png.gz
2023/08/01 15:56:16 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/relieved.png /tmp/work/dist/images/basic/relieved.png
2023/08/01 15:56:16 Optimizing /tmp/work/dist/images/basic/rage1.png
Input size: 1086 (1K)
Result size: 1130 (1K). Percentage of original: 104.052%
Preserving original PNG since it was smaller


2023/08/01 15:56:16 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/rage1.png.br /tmp/work/dist/images/basic/rage1.png
2023/08/01 15:56:16 br /tmp/work/dist/images/basic/rage1.png -> /output/images/basic/rage1.png.br
2023/08/01 15:56:16 gz /tmp/work/dist/images/basic/rage1.png -> /output/images/basic/rage1.png.gz
2023/08/01 15:56:16 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/repeat_one.png /tmp/work/dist/images/basic/repeat_one.png
2023/08/01 15:56:16 Optimizing /tmp/work/dist/images/basic/rat.png
Input size: 5434 (5K)
Result size: 5429 (5K). Percentage of original: 99.908%
Result is smaller


2023/08/01 15:56:16 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/rat.png.br /tmp/work/dist/images/basic/rat.png
2023/08/01 15:56:16 br /tmp/work/dist/images/basic/rat.png -> /output/images/basic/rat.png.br
2023/08/01 15:56:16 gz /tmp/work/dist/images/basic/rat.png -> /output/images/basic/rat.png.gz
2023/08/01 15:56:16 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/repeat.png /tmp/work/dist/images/basic/repeat.png
2023/08/01 15:56:17 Optimizing /tmp/work/dist/images/basic/ramen.png
Input size: 6574 (6K)
Result size: 6406 (6K). Percentage of original: 97.444%
Result is smaller


2023/08/01 15:56:17 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/ramen.png.br /tmp/work/dist/images/basic/ramen.png
2023/08/01 15:56:17 br /tmp/work/dist/images/basic/ramen.png -> /output/images/basic/ramen.png.br
2023/08/01 15:56:17 gz /tmp/work/dist/images/basic/ramen.png -> /output/images/basic/ramen.png.gz
2023/08/01 15:56:17 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/restroom.png /tmp/work/dist/images/basic/restroom.png
2023/08/01 15:56:18 Optimizing /tmp/work/dist/images/basic/red_car.png
Input size: 4278 (4K)
Result size: 4257 (4K). Percentage of original: 99.509%
Result is smaller


2023/08/01 15:56:18 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/red_car.png.br /tmp/work/dist/images/basic/red_car.png
2023/08/01 15:56:18 br /tmp/work/dist/images/basic/red_car.png -> /output/images/basic/red_car.png.br
2023/08/01 15:56:18 gz /tmp/work/dist/images/basic/red_car.png -> /output/images/basic/red_car.png.gz
2023/08/01 15:56:18 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/revolving_hearts.png /tmp/work/dist/images/basic/revolving_hearts.png
2023/08/01 15:56:18 Optimizing /tmp/work/dist/images/basic/registered.png
Input size: 1613 (1K)
Result size: 1720 (1K). Percentage of original: 106.634%
Preserving original PNG since it was smaller


2023/08/01 15:56:18 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/registered.png.br /tmp/work/dist/images/basic/registered.png
2023/08/01 15:56:18 br /tmp/work/dist/images/basic/registered.png -> /output/images/basic/registered.png.br
2023/08/01 15:56:18 gz /tmp/work/dist/images/basic/registered.png -> /output/images/basic/registered.png.gz
2023/08/01 15:56:18 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/rewind.png /tmp/work/dist/images/basic/rewind.png
2023/08/01 15:56:25 Optimizing /tmp/work/dist/images/basic/relaxed.png
Input size: 5455 (5K)
Result size: 5136 (5K). Percentage of original: 94.152%
Result is smaller


2023/08/01 15:56:25 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/relaxed.png.br /tmp/work/dist/images/basic/relaxed.png
2023/08/01 15:56:25 br /tmp/work/dist/images/basic/relaxed.png -> /output/images/basic/relaxed.png.br
2023/08/01 15:56:25 gz /tmp/work/dist/images/basic/relaxed.png -> /output/images/basic/relaxed.png.gz
2023/08/01 15:56:25 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/ribbon.png /tmp/work/dist/images/basic/ribbon.png
2023/08/01 15:56:26 Optimizing /tmp/work/dist/images/basic/repeat_one.png
Input size: 4287 (4K)
Result size: 4284 (4K). Percentage of original: 99.930%
Result is smaller


2023/08/01 15:56:26 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/repeat_one.png.br /tmp/work/dist/images/basic/repeat_one.png
2023/08/01 15:56:26 br /tmp/work/dist/images/basic/repeat_one.png -> /output/images/basic/repeat_one.png.br
2023/08/01 15:56:26 gz /tmp/work/dist/images/basic/repeat_one.png -> /output/images/basic/repeat_one.png.gz
2023/08/01 15:56:26 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/rice_ball.png /tmp/work/dist/images/basic/rice_ball.png
2023/08/01 15:56:26 Optimizing /tmp/work/dist/images/basic/repeat.png
Input size: 4009 (3K)
Result size: 4042 (3K). Percentage of original: 100.823%
Preserving original PNG since it was smaller


2023/08/01 15:56:26 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/repeat.png.br /tmp/work/dist/images/basic/repeat.png
2023/08/01 15:56:26 br /tmp/work/dist/images/basic/repeat.png -> /output/images/basic/repeat.png.br
2023/08/01 15:56:26 gz /tmp/work/dist/images/basic/repeat.png -> /output/images/basic/repeat.png.gz
2023/08/01 15:56:26 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/rice_cracker.png /tmp/work/dist/images/basic/rice_cracker.png
2023/08/01 15:56:26 Optimizing /tmp/work/dist/images/basic/red_circle.png
Input size: 3946 (3K)
Result size: 3800 (3K). Percentage of original: 96.300%
Result is smaller


2023/08/01 15:56:26 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/red_circle.png.br /tmp/work/dist/images/basic/red_circle.png
2023/08/01 15:56:26 br /tmp/work/dist/images/basic/red_circle.png -> /output/images/basic/red_circle.png.br
2023/08/01 15:56:26 gz /tmp/work/dist/images/basic/red_circle.png -> /output/images/basic/red_circle.png.gz
2023/08/01 15:56:26 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/rice_scene.png /tmp/work/dist/images/basic/rice_scene.png
2023/08/01 15:56:27 Optimizing /tmp/work/dist/images/basic/restroom.png
Input size: 4142 (4K)
Result size: 4009 (3K). Percentage of original: 96.789%
Result is smaller


2023/08/01 15:56:27 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/restroom.png.br /tmp/work/dist/images/basic/restroom.png
2023/08/01 15:56:27 br /tmp/work/dist/images/basic/restroom.png -> /output/images/basic/restroom.png.br
2023/08/01 15:56:27 gz /tmp/work/dist/images/basic/restroom.png -> /output/images/basic/restroom.png.gz
2023/08/01 15:56:27 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/rice.png /tmp/work/dist/images/basic/rice.png
2023/08/01 15:56:28 Optimizing /tmp/work/dist/images/basic/relieved.png
Input size: 5364 (5K)
Result size: 5111 (4K). Percentage of original: 95.283%
Result is smaller


2023/08/01 15:56:28 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/relieved.png.br /tmp/work/dist/images/basic/relieved.png
2023/08/01 15:56:28 br /tmp/work/dist/images/basic/relieved.png -> /output/images/basic/relieved.png.br
2023/08/01 15:56:28 gz /tmp/work/dist/images/basic/relieved.png -> /output/images/basic/relieved.png.gz
2023/08/01 15:56:28 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/ring.png /tmp/work/dist/images/basic/ring.png
2023/08/01 15:56:28 Optimizing /tmp/work/dist/images/basic/revolving_hearts.png
Input size: 5472 (5K)
Result size: 5470 (5K). Percentage of original: 99.963%
Result is smaller


2023/08/01 15:56:28 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/revolving_hearts.png.br /tmp/work/dist/images/basic/revolving_hearts.png
2023/08/01 15:56:28 br /tmp/work/dist/images/basic/revolving_hearts.png -> /output/images/basic/revolving_hearts.png.br
2023/08/01 15:56:28 gz /tmp/work/dist/images/basic/revolving_hearts.png -> /output/images/basic/revolving_hearts.png.gz
2023/08/01 15:56:28 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/rocket.png /tmp/work/dist/images/basic/rocket.png
2023/08/01 15:56:31 Optimizing /tmp/work/dist/images/basic/rewind.png
Input size: 3056 (2K)
Result size: 2935 (2K). Percentage of original: 96.041%
Result is smaller


2023/08/01 15:56:31 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/rewind.png.br /tmp/work/dist/images/basic/rewind.png
2023/08/01 15:56:31 br /tmp/work/dist/images/basic/rewind.png -> /output/images/basic/rewind.png.br
2023/08/01 15:56:31 gz /tmp/work/dist/images/basic/rewind.png -> /output/images/basic/rewind.png.gz
2023/08/01 15:56:31 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/roller_coaster.png /tmp/work/dist/images/basic/roller_coaster.png
2023/08/01 15:56:33 Optimizing /tmp/work/dist/images/basic/ribbon.png
Input size: 5581 (5K)
Result size: 5767 (5K). Percentage of original: 103.333%
Preserving original PNG since it was smaller


2023/08/01 15:56:33 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/ribbon.png.br /tmp/work/dist/images/basic/ribbon.png
2023/08/01 15:56:33 br /tmp/work/dist/images/basic/ribbon.png -> /output/images/basic/ribbon.png.br
2023/08/01 15:56:33 gz /tmp/work/dist/images/basic/ribbon.png -> /output/images/basic/ribbon.png.gz
2023/08/01 15:56:33 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/rooster.png /tmp/work/dist/images/basic/rooster.png
2023/08/01 15:56:36 Optimizing /tmp/work/dist/images/basic/rice_scene.png
Input size: 6261 (6K)
Result size: 6233 (6K). Percentage of original: 99.553%
Result is smaller


2023/08/01 15:56:36 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/rice_scene.png.br /tmp/work/dist/images/basic/rice_scene.png
2023/08/01 15:56:36 br /tmp/work/dist/images/basic/rice_scene.png -> /output/images/basic/rice_scene.png.br
2023/08/01 15:56:36 gz /tmp/work/dist/images/basic/rice_scene.png -> /output/images/basic/rice_scene.png.gz
2023/08/01 15:56:36 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/rose.png /tmp/work/dist/images/basic/rose.png
2023/08/01 15:56:37 Optimizing /tmp/work/dist/images/basic/rice_cracker.png
Input size: 7787 (7K)
Result size: 7824 (7K). Percentage of original: 100.475%
Preserving original PNG since it was smaller


2023/08/01 15:56:37 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/rice_cracker.png.br /tmp/work/dist/images/basic/rice_cracker.png
2023/08/01 15:56:37 br /tmp/work/dist/images/basic/rice_cracker.png -> /output/images/basic/rice_cracker.png.br
2023/08/01 15:56:37 gz /tmp/work/dist/images/basic/rice_cracker.png -> /output/images/basic/rice_cracker.png.gz
2023/08/01 15:56:37 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/rotating_light.png /tmp/work/dist/images/basic/rotating_light.png
2023/08/01 15:56:37 Optimizing /tmp/work/dist/images/basic/rocket.png
Input size: 5388 (5K)
Result size: 5448 (5K). Percentage of original: 101.114%
Preserving original PNG since it was smaller


2023/08/01 15:56:37 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/rocket.png.br /tmp/work/dist/images/basic/rocket.png
2023/08/01 15:56:38 br /tmp/work/dist/images/basic/rocket.png -> /output/images/basic/rocket.png.br
2023/08/01 15:56:38 gz /tmp/work/dist/images/basic/rocket.png -> /output/images/basic/rocket.png.gz
2023/08/01 15:56:38 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/round_pushpin.png /tmp/work/dist/images/basic/round_pushpin.png
2023/08/01 15:56:38 Optimizing /tmp/work/dist/images/basic/ring.png
Input size: 5232 (5K)
Result size: 5233 (5K). Percentage of original: 100.019%
Preserving original PNG since it was smaller


2023/08/01 15:56:38 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/ring.png.br /tmp/work/dist/images/basic/ring.png
2023/08/01 15:56:38 br /tmp/work/dist/images/basic/ring.png -> /output/images/basic/ring.png.br
2023/08/01 15:56:38 gz /tmp/work/dist/images/basic/ring.png -> /output/images/basic/ring.png.gz
2023/08/01 15:56:38 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/rowboat.png /tmp/work/dist/images/basic/rowboat.png
2023/08/01 15:56:39 Optimizing /tmp/work/dist/images/basic/rice_ball.png
Input size: 5371 (5K)
Result size: 5397 (5K). Percentage of original: 100.484%
Preserving original PNG since it was smaller


2023/08/01 15:56:39 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/rice_ball.png.br /tmp/work/dist/images/basic/rice_ball.png
2023/08/01 15:56:39 br /tmp/work/dist/images/basic/rice_ball.png -> /output/images/basic/rice_ball.png.br
2023/08/01 15:56:39 gz /tmp/work/dist/images/basic/rice_ball.png -> /output/images/basic/rice_ball.png.gz
2023/08/01 15:56:39 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/ru.png /tmp/work/dist/images/basic/ru.png
2023/08/01 15:56:40 Optimizing /tmp/work/dist/images/basic/roller_coaster.png
Input size: 5148 (5K)
Result size: 5067 (4K). Percentage of original: 98.427%
Result is smaller


2023/08/01 15:56:40 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/roller_coaster.png.br /tmp/work/dist/images/basic/roller_coaster.png
2023/08/01 15:56:40 br /tmp/work/dist/images/basic/roller_coaster.png -> /output/images/basic/roller_coaster.png.br
2023/08/01 15:56:40 gz /tmp/work/dist/images/basic/roller_coaster.png -> /output/images/basic/roller_coaster.png.gz
2023/08/01 15:56:40 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/rugby_football.png /tmp/work/dist/images/basic/rugby_football.png
2023/08/01 15:56:45 Optimizing /tmp/work/dist/images/basic/rose.png
Input size: 4202 (4K)
Result size: 4159 (4K). Percentage of original: 98.977%
Result is smaller


2023/08/01 15:56:45 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/rose.png.br /tmp/work/dist/images/basic/rose.png
2023/08/01 15:56:45 br /tmp/work/dist/images/basic/rose.png -> /output/images/basic/rose.png.br
2023/08/01 15:56:45 gz /tmp/work/dist/images/basic/rose.png -> /output/images/basic/rose.png.gz
2023/08/01 15:56:45 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/runner.png /tmp/work/dist/images/basic/runner.png
2023/08/01 15:56:45 Optimizing /tmp/work/dist/images/basic/rotating_light.png
Input size: 6620 (6K)
Result size: 6680 (6K). Percentage of original: 100.906%
Preserving original PNG since it was smaller


2023/08/01 15:56:45 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/rotating_light.png.br /tmp/work/dist/images/basic/rotating_light.png
2023/08/01 15:56:45 br /tmp/work/dist/images/basic/rotating_light.png -> /output/images/basic/rotating_light.png.br
2023/08/01 15:56:45 gz /tmp/work/dist/images/basic/rotating_light.png -> /output/images/basic/rotating_light.png.gz
2023/08/01 15:56:45 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/running_shirt_with_sash.png /tmp/work/dist/images/basic/running_shirt_with_sash.png
2023/08/01 15:56:48 Optimizing /tmp/work/dist/images/basic/rugby_football.png
Input size: 7781 (7K)
Result size: 7851 (7K). Percentage of original: 100.900%
Preserving original PNG since it was smaller


2023/08/01 15:56:48 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/rugby_football.png.br /tmp/work/dist/images/basic/rugby_football.png
2023/08/01 15:56:48 br /tmp/work/dist/images/basic/rugby_football.png -> /output/images/basic/rugby_football.png.br
2023/08/01 15:56:48 gz /tmp/work/dist/images/basic/rugby_football.png -> /output/images/basic/rugby_football.png.gz
2023/08/01 15:56:48 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/running.png /tmp/work/dist/images/basic/running.png
2023/08/01 15:56:48 Optimizing /tmp/work/dist/images/basic/ru.png
Input size: 3920 (3K)
Result size: 3852 (3K). Percentage of original: 98.265%
Result is smaller


2023/08/01 15:56:48 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/ru.png.br /tmp/work/dist/images/basic/ru.png
2023/08/01 15:56:48 br /tmp/work/dist/images/basic/ru.png -> /output/images/basic/ru.png.br
2023/08/01 15:56:48 gz /tmp/work/dist/images/basic/ru.png -> /output/images/basic/ru.png.gz
2023/08/01 15:56:48 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/sa.png /tmp/work/dist/images/basic/sa.png
2023/08/01 15:56:49 Optimizing /tmp/work/dist/images/basic/rice.png
Input size: 4645 (4K)
Result size: 4595 (4K). Percentage of original: 98.924%
Result is smaller


2023/08/01 15:56:49 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/rice.png.br /tmp/work/dist/images/basic/rice.png
2023/08/01 15:56:49 br /tmp/work/dist/images/basic/rice.png -> /output/images/basic/rice.png.br
2023/08/01 15:56:49 gz /tmp/work/dist/images/basic/rice.png -> /output/images/basic/rice.png.gz
2023/08/01 15:56:49 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/sagittarius.png /tmp/work/dist/images/basic/sagittarius.png
2023/08/01 15:56:51 Optimizing /tmp/work/dist/images/basic/rooster.png
Input size: 6168 (6K)
Result size: 6223 (6K). Percentage of original: 100.892%
Preserving original PNG since it was smaller


2023/08/01 15:56:51 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/rooster.png.br /tmp/work/dist/images/basic/rooster.png
2023/08/01 15:56:51 br /tmp/work/dist/images/basic/rooster.png -> /output/images/basic/rooster.png.br
2023/08/01 15:56:51 gz /tmp/work/dist/images/basic/rooster.png -> /output/images/basic/rooster.png.gz
2023/08/01 15:56:51 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/sailboat.png /tmp/work/dist/images/basic/sailboat.png
2023/08/01 15:56:53 Optimizing /tmp/work/dist/images/basic/rowboat.png
Input size: 5357 (5K)
Result size: 5310 (5K). Percentage of original: 99.123%
Result is smaller


2023/08/01 15:56:53 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/rowboat.png.br /tmp/work/dist/images/basic/rowboat.png
2023/08/01 15:56:53 br /tmp/work/dist/images/basic/rowboat.png -> /output/images/basic/rowboat.png.br
2023/08/01 15:56:53 gz /tmp/work/dist/images/basic/rowboat.png -> /output/images/basic/rowboat.png.gz
2023/08/01 15:56:53 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/sake.png /tmp/work/dist/images/basic/sake.png
2023/08/01 15:56:54 Optimizing /tmp/work/dist/images/basic/round_pushpin.png
Input size: 1936 (1K)
Result size: 1912 (1K). Percentage of original: 98.760%
Result is smaller


2023/08/01 15:56:54 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/round_pushpin.png.br /tmp/work/dist/images/basic/round_pushpin.png
2023/08/01 15:56:54 br /tmp/work/dist/images/basic/round_pushpin.png -> /output/images/basic/round_pushpin.png.br
2023/08/01 15:56:54 gz /tmp/work/dist/images/basic/round_pushpin.png -> /output/images/basic/round_pushpin.png.gz
2023/08/01 15:56:54 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/sandal.png /tmp/work/dist/images/basic/sandal.png
2023/08/01 15:56:55 Optimizing /tmp/work/dist/images/basic/runner.png
Input size: 3137 (3K)
Result size: 3314 (3K). Percentage of original: 105.642%
Preserving original PNG since it was smaller


2023/08/01 15:56:55 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/runner.png.br /tmp/work/dist/images/basic/runner.png
2023/08/01 15:56:55 br /tmp/work/dist/images/basic/runner.png -> /output/images/basic/runner.png.br
2023/08/01 15:56:55 gz /tmp/work/dist/images/basic/runner.png -> /output/images/basic/runner.png.gz
2023/08/01 15:56:55 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/santa.png /tmp/work/dist/images/basic/santa.png
2023/08/01 15:56:56 Optimizing /tmp/work/dist/images/basic/running_shirt_with_sash.png
Input size: 5701 (5K)
Result size: 5838 (5K). Percentage of original: 102.403%
Preserving original PNG since it was smaller


2023/08/01 15:56:56 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/running_shirt_with_sash.png.br /tmp/work/dist/images/basic/running_shirt_with_sash.png
2023/08/01 15:56:56 br /tmp/work/dist/images/basic/running_shirt_with_sash.png -> /output/images/basic/running_shirt_with_sash.png.br
2023/08/01 15:56:56 gz /tmp/work/dist/images/basic/running_shirt_with_sash.png -> /output/images/basic/running_shirt_with_sash.png.gz
2023/08/01 15:56:56 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/satellite.png /tmp/work/dist/images/basic/satellite.png
2023/08/01 15:56:58 Optimizing /tmp/work/dist/images/basic/running.png
Input size: 3137 (3K)
Result size: 3314 (3K). Percentage of original: 105.642%
Preserving original PNG since it was smaller


2023/08/01 15:56:58 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/running.png.br /tmp/work/dist/images/basic/running.png
2023/08/01 15:56:58 br /tmp/work/dist/images/basic/running.png -> /output/images/basic/running.png.br
2023/08/01 15:56:58 gz /tmp/work/dist/images/basic/running.png -> /output/images/basic/running.png.gz
2023/08/01 15:56:58 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/satisfied.png /tmp/work/dist/images/basic/satisfied.png
2023/08/01 15:57:00 Optimizing /tmp/work/dist/images/basic/sa.png
Input size: 3556 (3K)
Result size: 3557 (3K). Percentage of original: 100.028%
Preserving original PNG since it was smaller


2023/08/01 15:57:00 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/sa.png.br /tmp/work/dist/images/basic/sa.png
2023/08/01 15:57:00 br /tmp/work/dist/images/basic/sa.png -> /output/images/basic/sa.png.br
2023/08/01 15:57:00 gz /tmp/work/dist/images/basic/sa.png -> /output/images/basic/sa.png.gz
2023/08/01 15:57:00 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/saxophone.png /tmp/work/dist/images/basic/saxophone.png
2023/08/01 15:57:01 Optimizing /tmp/work/dist/images/basic/sailboat.png
Input size: 3833 (3K)
Result size: 3965 (3K). Percentage of original: 103.444%
Preserving original PNG since it was smaller


2023/08/01 15:57:01 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/sailboat.png.br /tmp/work/dist/images/basic/sailboat.png
2023/08/01 15:57:01 br /tmp/work/dist/images/basic/sailboat.png -> /output/images/basic/sailboat.png.br
2023/08/01 15:57:01 gz /tmp/work/dist/images/basic/sailboat.png -> /output/images/basic/sailboat.png.gz
2023/08/01 15:57:01 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/school_satchel.png /tmp/work/dist/images/basic/school_satchel.png
2023/08/01 15:57:04 Optimizing /tmp/work/dist/images/basic/sake.png
Input size: 5073 (4K)
Result size: 5121 (5K). Percentage of original: 100.946%
Preserving original PNG since it was smaller


2023/08/01 15:57:04 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/sake.png.br /tmp/work/dist/images/basic/sake.png
2023/08/01 15:57:04 br /tmp/work/dist/images/basic/sake.png -> /output/images/basic/sake.png.br
2023/08/01 15:57:04 gz /tmp/work/dist/images/basic/sake.png -> /output/images/basic/sake.png.gz
2023/08/01 15:57:04 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/school.png /tmp/work/dist/images/basic/school.png
2023/08/01 15:57:05 Optimizing /tmp/work/dist/images/basic/sandal.png
Input size: 3974 (3K)
Result size: 4000 (3K). Percentage of original: 100.654%
Preserving original PNG since it was smaller


2023/08/01 15:57:05 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/sandal.png.br /tmp/work/dist/images/basic/sandal.png
2023/08/01 15:57:05 br /tmp/work/dist/images/basic/sandal.png -> /output/images/basic/sandal.png.br
2023/08/01 15:57:05 gz /tmp/work/dist/images/basic/sandal.png -> /output/images/basic/sandal.png.gz
2023/08/01 15:57:05 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/scissors.png /tmp/work/dist/images/basic/scissors.png
2023/08/01 15:57:06 Optimizing /tmp/work/dist/images/basic/santa.png
Input size: 6271 (6K)
Result size: 6267 (6K). Percentage of original: 99.936%
Result is smaller


2023/08/01 15:57:06 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/santa.png.br /tmp/work/dist/images/basic/santa.png
2023/08/01 15:57:06 Optimizing /tmp/work/dist/images/basic/satellite.png
Input size: 4867 (4K)
Result size: 4885 (4K). Percentage of original: 100.370%
Preserving original PNG since it was smaller


2023/08/01 15:57:06 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/satellite.png.br /tmp/work/dist/images/basic/satellite.png
2023/08/01 15:57:06 br /tmp/work/dist/images/basic/santa.png -> /output/images/basic/santa.png.br
2023/08/01 15:57:06 gz /tmp/work/dist/images/basic/santa.png -> /output/images/basic/santa.png.gz
2023/08/01 15:57:06 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/scorpius.png /tmp/work/dist/images/basic/scorpius.png
2023/08/01 15:57:06 br /tmp/work/dist/images/basic/satellite.png -> /output/images/basic/satellite.png.br
2023/08/01 15:57:06 gz /tmp/work/dist/images/basic/satellite.png -> /output/images/basic/satellite.png.gz
2023/08/01 15:57:06 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/scream_cat.png /tmp/work/dist/images/basic/scream_cat.png
2023/08/01 15:57:07 Optimizing /tmp/work/dist/images/basic/satisfied.png
Input size: 6347 (6K)
Result size: 6342 (6K). Percentage of original: 99.921%
Result is smaller


2023/08/01 15:57:07 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/satisfied.png.br /tmp/work/dist/images/basic/satisfied.png
2023/08/01 15:57:07 br /tmp/work/dist/images/basic/satisfied.png -> /output/images/basic/satisfied.png.br
2023/08/01 15:57:07 gz /tmp/work/dist/images/basic/satisfied.png -> /output/images/basic/satisfied.png.gz
2023/08/01 15:57:07 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/scream.png /tmp/work/dist/images/basic/scream.png
2023/08/01 15:57:10 Optimizing /tmp/work/dist/images/basic/sagittarius.png
Input size: 4505 (4K)
Result size: 4447 (4K). Percentage of original: 98.713%
Result is smaller


2023/08/01 15:57:10 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/sagittarius.png.br /tmp/work/dist/images/basic/sagittarius.png
2023/08/01 15:57:10 br /tmp/work/dist/images/basic/sagittarius.png -> /output/images/basic/sagittarius.png.br
2023/08/01 15:57:10 gz /tmp/work/dist/images/basic/sagittarius.png -> /output/images/basic/sagittarius.png.gz
2023/08/01 15:57:10 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/scroll.png /tmp/work/dist/images/basic/scroll.png
2023/08/01 15:57:11 Optimizing /tmp/work/dist/images/basic/school_satchel.png
Input size: 5741 (5K)
Result size: 5736 (5K). Percentage of original: 99.913%
Result is smaller


2023/08/01 15:57:11 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/school_satchel.png.br /tmp/work/dist/images/basic/school_satchel.png
2023/08/01 15:57:12 br /tmp/work/dist/images/basic/school_satchel.png -> /output/images/basic/school_satchel.png.br
2023/08/01 15:57:12 gz /tmp/work/dist/images/basic/school_satchel.png -> /output/images/basic/school_satchel.png.gz
2023/08/01 15:57:12 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/seat.png /tmp/work/dist/images/basic/seat.png
2023/08/01 15:57:13 Optimizing /tmp/work/dist/images/basic/saxophone.png
Input size: 4252 (4K)
Result size: 4270 (4K). Percentage of original: 100.423%
Preserving original PNG since it was smaller


2023/08/01 15:57:13 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/saxophone.png.br /tmp/work/dist/images/basic/saxophone.png
2023/08/01 15:57:13 br /tmp/work/dist/images/basic/saxophone.png -> /output/images/basic/saxophone.png.br
2023/08/01 15:57:13 gz /tmp/work/dist/images/basic/saxophone.png -> /output/images/basic/saxophone.png.gz
2023/08/01 15:57:13 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/secret.png /tmp/work/dist/images/basic/secret.png
2023/08/01 15:57:14 Optimizing /tmp/work/dist/images/basic/scissors.png
Input size: 3837 (3K)
Result size: 4002 (3K). Percentage of original: 104.300%
Preserving original PNG since it was smaller


2023/08/01 15:57:14 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/scissors.png.br /tmp/work/dist/images/basic/scissors.png
2023/08/01 15:57:14 Optimizing /tmp/work/dist/images/basic/school.png
Input size: 5446 (5K)
Result size: 5512 (5K). Percentage of original: 101.212%
Preserving original PNG since it was smaller


2023/08/01 15:57:14 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/school.png.br /tmp/work/dist/images/basic/school.png
2023/08/01 15:57:14 br /tmp/work/dist/images/basic/scissors.png -> /output/images/basic/scissors.png.br
2023/08/01 15:57:14 gz /tmp/work/dist/images/basic/scissors.png -> /output/images/basic/scissors.png.gz
2023/08/01 15:57:14 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/see_no_evil.png /tmp/work/dist/images/basic/see_no_evil.png
2023/08/01 15:57:14 br /tmp/work/dist/images/basic/school.png -> /output/images/basic/school.png.br
2023/08/01 15:57:14 gz /tmp/work/dist/images/basic/school.png -> /output/images/basic/school.png.gz
2023/08/01 15:57:14 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/seedling.png /tmp/work/dist/images/basic/seedling.png
2023/08/01 15:57:16 Optimizing /tmp/work/dist/images/basic/scream_cat.png
Input size: 6844 (6K)
Result size: 6935 (6K). Percentage of original: 101.330%
Preserving original PNG since it was smaller


2023/08/01 15:57:16 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/scream_cat.png.br /tmp/work/dist/images/basic/scream_cat.png
2023/08/01 15:57:16 br /tmp/work/dist/images/basic/scream_cat.png -> /output/images/basic/scream_cat.png.br
2023/08/01 15:57:16 gz /tmp/work/dist/images/basic/scream_cat.png -> /output/images/basic/scream_cat.png.gz
2023/08/01 15:57:16 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/seven.png /tmp/work/dist/images/basic/seven.png
2023/08/01 15:57:18 Optimizing /tmp/work/dist/images/basic/scream.png
Input size: 6482 (6K)
Result size: 6291 (6K). Percentage of original: 97.053%
Result is smaller


2023/08/01 15:57:18 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/scream.png.br /tmp/work/dist/images/basic/scream.png
2023/08/01 15:57:18 br /tmp/work/dist/images/basic/scream.png -> /output/images/basic/scream.png.br
2023/08/01 15:57:18 gz /tmp/work/dist/images/basic/scream.png -> /output/images/basic/scream.png.gz
2023/08/01 15:57:18 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/shaved_ice.png /tmp/work/dist/images/basic/shaved_ice.png
2023/08/01 15:57:20 Optimizing /tmp/work/dist/images/basic/seat.png
Input size: 6059 (5K)
Result size: 6128 (5K). Percentage of original: 101.139%
Preserving original PNG since it was smaller


2023/08/01 15:57:20 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/seat.png.br /tmp/work/dist/images/basic/seat.png
2023/08/01 15:57:20 br /tmp/work/dist/images/basic/seat.png -> /output/images/basic/seat.png.br
2023/08/01 15:57:20 gz /tmp/work/dist/images/basic/seat.png -> /output/images/basic/seat.png.gz
2023/08/01 15:57:20 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/sheep.png /tmp/work/dist/images/basic/sheep.png
2023/08/01 15:57:21 Optimizing /tmp/work/dist/images/basic/scorpius.png
Input size: 4566 (4K)
Result size: 4404 (4K). Percentage of original: 96.452%
Result is smaller


2023/08/01 15:57:21 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/scorpius.png.br /tmp/work/dist/images/basic/scorpius.png
2023/08/01 15:57:21 br /tmp/work/dist/images/basic/scorpius.png -> /output/images/basic/scorpius.png.br
2023/08/01 15:57:21 gz /tmp/work/dist/images/basic/scorpius.png -> /output/images/basic/scorpius.png.gz
2023/08/01 15:57:21 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/shell.png /tmp/work/dist/images/basic/shell.png
2023/08/01 15:57:23 Optimizing /tmp/work/dist/images/basic/secret.png
Input size: 5364 (5K)
Result size: 5347 (5K). Percentage of original: 99.683%
Result is smaller


2023/08/01 15:57:23 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/secret.png.br /tmp/work/dist/images/basic/secret.png
2023/08/01 15:57:23 br /tmp/work/dist/images/basic/secret.png -> /output/images/basic/secret.png.br
2023/08/01 15:57:23 gz /tmp/work/dist/images/basic/secret.png -> /output/images/basic/secret.png.gz
2023/08/01 15:57:23 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/ship.png /tmp/work/dist/images/basic/ship.png
2023/08/01 15:57:24 Optimizing /tmp/work/dist/images/basic/seedling.png
Input size: 2190 (2K)
Result size: 2291 (2K). Percentage of original: 104.612%
Preserving original PNG since it was smaller


2023/08/01 15:57:24 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/seedling.png.br /tmp/work/dist/images/basic/seedling.png
2023/08/01 15:57:24 br /tmp/work/dist/images/basic/seedling.png -> /output/images/basic/seedling.png.br
2023/08/01 15:57:24 gz /tmp/work/dist/images/basic/seedling.png -> /output/images/basic/seedling.png.gz
2023/08/01 15:57:24 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/shipit.png /tmp/work/dist/images/basic/shipit.png
2023/08/01 15:57:25 Optimizing /tmp/work/dist/images/basic/see_no_evil.png
Input size: 6828 (6K)
Result size: 6932 (6K). Percentage of original: 101.523%
Preserving original PNG since it was smaller


2023/08/01 15:57:25 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/see_no_evil.png.br /tmp/work/dist/images/basic/see_no_evil.png
2023/08/01 15:57:25 br /tmp/work/dist/images/basic/see_no_evil.png -> /output/images/basic/see_no_evil.png.br
2023/08/01 15:57:26 gz /tmp/work/dist/images/basic/see_no_evil.png -> /output/images/basic/see_no_evil.png.gz
2023/08/01 15:57:26 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/shirt.png /tmp/work/dist/images/basic/shirt.png
2023/08/01 15:57:28 Optimizing /tmp/work/dist/images/basic/shaved_ice.png
Input size: 5908 (5K)
Result size: 5808 (5K). Percentage of original: 98.307%
Result is smaller


2023/08/01 15:57:28 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/shaved_ice.png.br /tmp/work/dist/images/basic/shaved_ice.png
2023/08/01 15:57:28 br /tmp/work/dist/images/basic/shaved_ice.png -> /output/images/basic/shaved_ice.png.br
2023/08/01 15:57:28 gz /tmp/work/dist/images/basic/shaved_ice.png -> /output/images/basic/shaved_ice.png.gz
2023/08/01 15:57:28 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/shit.png /tmp/work/dist/images/basic/shit.png
2023/08/01 15:57:29 Optimizing /tmp/work/dist/images/basic/seven.png
Input size: 3055 (2K)
Result size: 2976 (2K). Percentage of original: 97.414%
Result is smaller


2023/08/01 15:57:29 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/seven.png.br /tmp/work/dist/images/basic/seven.png
2023/08/01 15:57:29 br /tmp/work/dist/images/basic/seven.png -> /output/images/basic/seven.png.br
2023/08/01 15:57:29 gz /tmp/work/dist/images/basic/seven.png -> /output/images/basic/seven.png.gz
2023/08/01 15:57:29 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/shoe.png /tmp/work/dist/images/basic/shoe.png
2023/08/01 15:57:30 Optimizing /tmp/work/dist/images/basic/shell.png
Input size: 5115 (4K)
Result size: 5213 (5K). Percentage of original: 101.916%
Preserving original PNG since it was smaller


2023/08/01 15:57:30 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/shell.png.br /tmp/work/dist/images/basic/shell.png
2023/08/01 15:57:30 br /tmp/work/dist/images/basic/shell.png -> /output/images/basic/shell.png.br
2023/08/01 15:57:30 gz /tmp/work/dist/images/basic/shell.png -> /output/images/basic/shell.png.gz
2023/08/01 15:57:30 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/shower.png /tmp/work/dist/images/basic/shower.png
2023/08/01 15:57:31 Optimizing /tmp/work/dist/images/basic/scroll.png
Input size: 6749 (6K)
Result size: 6817 (6K). Percentage of original: 101.008%
Preserving original PNG since it was smaller


2023/08/01 15:57:31 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/scroll.png.br /tmp/work/dist/images/basic/scroll.png
2023/08/01 15:57:31 br /tmp/work/dist/images/basic/scroll.png -> /output/images/basic/scroll.png.br
2023/08/01 15:57:31 gz /tmp/work/dist/images/basic/scroll.png -> /output/images/basic/scroll.png.gz
2023/08/01 15:57:31 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/signal_strength.png /tmp/work/dist/images/basic/signal_strength.png
2023/08/01 15:57:33 Optimizing /tmp/work/dist/images/basic/sheep.png
Input size: 4732 (4K)
Result size: 4737 (4K). Percentage of original: 100.106%
Preserving original PNG since it was smaller


2023/08/01 15:57:33 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/sheep.png.br /tmp/work/dist/images/basic/sheep.png
2023/08/01 15:57:34 br /tmp/work/dist/images/basic/sheep.png -> /output/images/basic/sheep.png.br
2023/08/01 15:57:34 gz /tmp/work/dist/images/basic/sheep.png -> /output/images/basic/sheep.png.gz
2023/08/01 15:57:34 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/six_pointed_star.png /tmp/work/dist/images/basic/six_pointed_star.png
2023/08/01 15:57:35 Optimizing /tmp/work/dist/images/basic/shipit.png
Input size: 9351 (9K)
Result size: 9498 (9K). Percentage of original: 101.572%
Preserving original PNG since it was smaller


2023/08/01 15:57:35 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/shipit.png.br /tmp/work/dist/images/basic/shipit.png
2023/08/01 15:57:35 Optimizing /tmp/work/dist/images/basic/ship.png
Input size: 4233 (4K)
Result size: 4134 (4K). Percentage of original: 97.661%
Result is smaller


2023/08/01 15:57:35 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/ship.png.br /tmp/work/dist/images/basic/ship.png
2023/08/01 15:57:35 br /tmp/work/dist/images/basic/shipit.png -> /output/images/basic/shipit.png.br
2023/08/01 15:57:35 gz /tmp/work/dist/images/basic/shipit.png -> /output/images/basic/shipit.png.gz
2023/08/01 15:57:35 br /tmp/work/dist/images/basic/ship.png -> /output/images/basic/ship.png.br
2023/08/01 15:57:35 gz /tmp/work/dist/images/basic/ship.png -> /output/images/basic/ship.png.gz
2023/08/01 15:57:35 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/ski.png /tmp/work/dist/images/basic/ski.png
2023/08/01 15:57:35 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/six.png /tmp/work/dist/images/basic/six.png
2023/08/01 15:57:39 Optimizing /tmp/work/dist/images/basic/shower.png
Input size: 7520 (7K)
Result size: 7547 (7K). Percentage of original: 100.359%
Preserving original PNG since it was smaller


2023/08/01 15:57:39 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/shower.png.br /tmp/work/dist/images/basic/shower.png
2023/08/01 15:57:40 br /tmp/work/dist/images/basic/shower.png -> /output/images/basic/shower.png.br
2023/08/01 15:57:40 gz /tmp/work/dist/images/basic/shower.png -> /output/images/basic/shower.png.gz
2023/08/01 15:57:40 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/skull.png /tmp/work/dist/images/basic/skull.png
2023/08/01 15:57:40 Optimizing /tmp/work/dist/images/basic/shit.png
Input size: 4754 (4K)
Result size: 4859 (4K). Percentage of original: 102.209%
Preserving original PNG since it was smaller


2023/08/01 15:57:40 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/shit.png.br /tmp/work/dist/images/basic/shit.png
2023/08/01 15:57:40 br /tmp/work/dist/images/basic/shit.png -> /output/images/basic/shit.png.br
2023/08/01 15:57:40 gz /tmp/work/dist/images/basic/shit.png -> /output/images/basic/shit.png.gz
2023/08/01 15:57:40 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/sleeping.png /tmp/work/dist/images/basic/sleeping.png
2023/08/01 15:57:41 Optimizing /tmp/work/dist/images/basic/six_pointed_star.png
Input size: 4854 (4K)
Result size: 4926 (4K). Percentage of original: 101.483%
Preserving original PNG since it was smaller


2023/08/01 15:57:41 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/six_pointed_star.png.br /tmp/work/dist/images/basic/six_pointed_star.png
2023/08/01 15:57:41 br /tmp/work/dist/images/basic/six_pointed_star.png -> /output/images/basic/six_pointed_star.png.br
2023/08/01 15:57:41 gz /tmp/work/dist/images/basic/six_pointed_star.png -> /output/images/basic/six_pointed_star.png.gz
2023/08/01 15:57:41 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/sleepy.png /tmp/work/dist/images/basic/sleepy.png
2023/08/01 15:57:43 Optimizing /tmp/work/dist/images/basic/shirt.png
Input size: 4676 (4K)
Result size: 4602 (4K). Percentage of original: 98.417%
Result is smaller


2023/08/01 15:57:43 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/shirt.png.br /tmp/work/dist/images/basic/shirt.png
2023/08/01 15:57:43 br /tmp/work/dist/images/basic/shirt.png -> /output/images/basic/shirt.png.br
2023/08/01 15:57:43 gz /tmp/work/dist/images/basic/shirt.png -> /output/images/basic/shirt.png.gz
2023/08/01 15:57:43 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/slot_machine.png /tmp/work/dist/images/basic/slot_machine.png
2023/08/01 15:57:43 Optimizing /tmp/work/dist/images/basic/shoe.png
Input size: 4799 (4K)
Result size: 4918 (4K). Percentage of original: 102.480%
Preserving original PNG since it was smaller


2023/08/01 15:57:43 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/shoe.png.br /tmp/work/dist/images/basic/shoe.png
2023/08/01 15:57:43 br /tmp/work/dist/images/basic/shoe.png -> /output/images/basic/shoe.png.br
2023/08/01 15:57:43 gz /tmp/work/dist/images/basic/shoe.png -> /output/images/basic/shoe.png.gz
2023/08/01 15:57:43 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/small_blue_diamond.png /tmp/work/dist/images/basic/small_blue_diamond.png
2023/08/01 15:57:44 Optimizing /tmp/work/dist/images/basic/ski.png
Input size: 4167 (4K)
Result size: 4406 (4K). Percentage of original: 105.736%
Preserving original PNG since it was smaller


2023/08/01 15:57:44 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/ski.png.br /tmp/work/dist/images/basic/ski.png
2023/08/01 15:57:44 br /tmp/work/dist/images/basic/ski.png -> /output/images/basic/ski.png.br
2023/08/01 15:57:44 gz /tmp/work/dist/images/basic/ski.png -> /output/images/basic/ski.png.gz
2023/08/01 15:57:44 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/small_orange_diamond.png /tmp/work/dist/images/basic/small_orange_diamond.png
2023/08/01 15:57:46 Optimizing /tmp/work/dist/images/basic/skull.png
Input size: 2428 (2K)
Result size: 2461 (2K). Percentage of original: 101.359%
Preserving original PNG since it was smaller


2023/08/01 15:57:46 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/skull.png.br /tmp/work/dist/images/basic/skull.png
2023/08/01 15:57:46 br /tmp/work/dist/images/basic/skull.png -> /output/images/basic/skull.png.br
2023/08/01 15:57:46 gz /tmp/work/dist/images/basic/skull.png -> /output/images/basic/skull.png.gz
2023/08/01 15:57:46 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/small_red_triangle_down.png /tmp/work/dist/images/basic/small_red_triangle_down.png
2023/08/01 15:57:48 Optimizing /tmp/work/dist/images/basic/six.png
Input size: 3791 (3K)
Result size: 3729 (3K). Percentage of original: 98.365%
Result is smaller


2023/08/01 15:57:48 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/six.png.br /tmp/work/dist/images/basic/six.png
2023/08/01 15:57:48 br /tmp/work/dist/images/basic/six.png -> /output/images/basic/six.png.br
2023/08/01 15:57:48 gz /tmp/work/dist/images/basic/six.png -> /output/images/basic/six.png.gz
2023/08/01 15:57:48 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/small_red_triangle.png /tmp/work/dist/images/basic/small_red_triangle.png
2023/08/01 15:57:52 Optimizing /tmp/work/dist/images/basic/sleeping.png
Input size: 5409 (5K)
Result size: 5463 (5K). Percentage of original: 100.998%
Preserving original PNG since it was smaller


2023/08/01 15:57:52 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/sleeping.png.br /tmp/work/dist/images/basic/sleeping.png
2023/08/01 15:57:52 br /tmp/work/dist/images/basic/sleeping.png -> /output/images/basic/sleeping.png.br
2023/08/01 15:57:52 gz /tmp/work/dist/images/basic/sleeping.png -> /output/images/basic/sleeping.png.gz
2023/08/01 15:57:52 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/smile_cat.png /tmp/work/dist/images/basic/smile_cat.png
2023/08/01 15:57:52 Optimizing /tmp/work/dist/images/basic/signal_strength.png
Input size: 3231 (3K)
Result size: 3162 (3K). Percentage of original: 97.864%
Result is smaller


2023/08/01 15:57:52 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/signal_strength.png.br /tmp/work/dist/images/basic/signal_strength.png
2023/08/01 15:57:52 br /tmp/work/dist/images/basic/signal_strength.png -> /output/images/basic/signal_strength.png.br
2023/08/01 15:57:52 gz /tmp/work/dist/images/basic/signal_strength.png -> /output/images/basic/signal_strength.png.gz
2023/08/01 15:57:52 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/smile.png /tmp/work/dist/images/basic/smile.png
2023/08/01 15:57:57 Optimizing /tmp/work/dist/images/basic/small_blue_diamond.png
Input size: 1817 (1K)
Result size: 1882 (1K). Percentage of original: 103.577%
Preserving original PNG since it was smaller


2023/08/01 15:57:57 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/small_blue_diamond.png.br /tmp/work/dist/images/basic/small_blue_diamond.png
2023/08/01 15:57:57 br /tmp/work/dist/images/basic/small_blue_diamond.png -> /output/images/basic/small_blue_diamond.png.br
2023/08/01 15:57:57 gz /tmp/work/dist/images/basic/small_blue_diamond.png -> /output/images/basic/small_blue_diamond.png.gz
2023/08/01 15:57:57 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/smiley_cat.png /tmp/work/dist/images/basic/smiley_cat.png
2023/08/01 15:58:00 Optimizing /tmp/work/dist/images/basic/slot_machine.png
Input size: 4605 (4K)
Result size: 4556 (4K). Percentage of original: 98.936%
Result is smaller


2023/08/01 15:58:00 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/slot_machine.png.br /tmp/work/dist/images/basic/slot_machine.png
2023/08/01 15:58:00 br /tmp/work/dist/images/basic/slot_machine.png -> /output/images/basic/slot_machine.png.br
2023/08/01 15:58:00 gz /tmp/work/dist/images/basic/slot_machine.png -> /output/images/basic/slot_machine.png.gz
2023/08/01 15:58:00 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/smiley.png /tmp/work/dist/images/basic/smiley.png
2023/08/01 15:58:01 Optimizing /tmp/work/dist/images/basic/sleepy.png
Input size: 5837 (5K)
Result size: 5785 (5K). Percentage of original: 99.109%
Result is smaller


2023/08/01 15:58:01 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/sleepy.png.br /tmp/work/dist/images/basic/sleepy.png
2023/08/01 15:58:01 br /tmp/work/dist/images/basic/sleepy.png -> /output/images/basic/sleepy.png.br
2023/08/01 15:58:01 gz /tmp/work/dist/images/basic/sleepy.png -> /output/images/basic/sleepy.png.gz
2023/08/01 15:58:01 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/smiling_imp.png /tmp/work/dist/images/basic/smiling_imp.png
2023/08/01 15:58:01 Optimizing /tmp/work/dist/images/basic/smile_cat.png
Input size: 6117 (5K)
Result size: 6151 (6K). Percentage of original: 100.556%
Preserving original PNG since it was smaller


2023/08/01 15:58:01 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/smile_cat.png.br /tmp/work/dist/images/basic/smile_cat.png
2023/08/01 15:58:02 br /tmp/work/dist/images/basic/smile_cat.png -> /output/images/basic/smile_cat.png.br
2023/08/01 15:58:02 gz /tmp/work/dist/images/basic/smile_cat.png -> /output/images/basic/smile_cat.png.gz
2023/08/01 15:58:02 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/smirk_cat.png /tmp/work/dist/images/basic/smirk_cat.png
2023/08/01 15:58:04 Optimizing /tmp/work/dist/images/basic/small_red_triangle_down.png
Input size: 2157 (2K)
Result size: 2159 (2K). Percentage of original: 100.093%
Preserving original PNG since it was smaller


2023/08/01 15:58:04 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/small_red_triangle_down.png.br /tmp/work/dist/images/basic/small_red_triangle_down.png
2023/08/01 15:58:04 br /tmp/work/dist/images/basic/small_red_triangle_down.png -> /output/images/basic/small_red_triangle_down.png.br
2023/08/01 15:58:04 gz /tmp/work/dist/images/basic/small_red_triangle_down.png -> /output/images/basic/small_red_triangle_down.png.gz
2023/08/01 15:58:04 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/smirk.png /tmp/work/dist/images/basic/smirk.png
2023/08/01 15:58:04 Optimizing /tmp/work/dist/images/basic/small_orange_diamond.png
Input size: 1944 (1K)
Result size: 1953 (1K). Percentage of original: 100.463%
Preserving original PNG since it was smaller


2023/08/01 15:58:04 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/small_orange_diamond.png.br /tmp/work/dist/images/basic/small_orange_diamond.png
2023/08/01 15:58:04 br /tmp/work/dist/images/basic/small_orange_diamond.png -> /output/images/basic/small_orange_diamond.png.br
2023/08/01 15:58:04 gz /tmp/work/dist/images/basic/small_orange_diamond.png -> /output/images/basic/small_orange_diamond.png.gz
2023/08/01 15:58:04 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/smoking.png /tmp/work/dist/images/basic/smoking.png
2023/08/01 15:58:06 Optimizing /tmp/work/dist/images/basic/smiley_cat.png
Input size: 6083 (5K)
Result size: 6119 (5K). Percentage of original: 100.592%
Preserving original PNG since it was smaller


2023/08/01 15:58:06 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/smiley_cat.png.br /tmp/work/dist/images/basic/smiley_cat.png
2023/08/01 15:58:06 br /tmp/work/dist/images/basic/smiley_cat.png -> /output/images/basic/smiley_cat.png.br
2023/08/01 15:58:06 gz /tmp/work/dist/images/basic/smiley_cat.png -> /output/images/basic/smiley_cat.png.gz
2023/08/01 15:58:06 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/snail.png /tmp/work/dist/images/basic/snail.png
2023/08/01 15:58:07 Optimizing /tmp/work/dist/images/basic/smile.png
Input size: 5890 (5K)
Result size: 5889 (5K). Percentage of original: 99.983%
Result is smaller


2023/08/01 15:58:07 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/smile.png.br /tmp/work/dist/images/basic/smile.png
2023/08/01 15:58:08 br /tmp/work/dist/images/basic/smile.png -> /output/images/basic/smile.png.br
2023/08/01 15:58:08 gz /tmp/work/dist/images/basic/smile.png -> /output/images/basic/smile.png.gz
2023/08/01 15:58:08 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/snake.png /tmp/work/dist/images/basic/snake.png
2023/08/01 15:58:12 Optimizing /tmp/work/dist/images/basic/smiley.png
Input size: 5794 (5K)
Result size: 5644 (5K). Percentage of original: 97.411%
Result is smaller


2023/08/01 15:58:12 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/smiley.png.br /tmp/work/dist/images/basic/smiley.png
2023/08/01 15:58:12 br /tmp/work/dist/images/basic/smiley.png -> /output/images/basic/smiley.png.br
2023/08/01 15:58:12 gz /tmp/work/dist/images/basic/smiley.png -> /output/images/basic/smiley.png.gz
2023/08/01 15:58:12 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/snowboarder.png /tmp/work/dist/images/basic/snowboarder.png
2023/08/01 15:58:14 Optimizing /tmp/work/dist/images/basic/smirk_cat.png
Input size: 6062 (5K)
Result size: 6086 (5K). Percentage of original: 100.396%
Preserving original PNG since it was smaller


2023/08/01 15:58:14 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/smirk_cat.png.br /tmp/work/dist/images/basic/smirk_cat.png
2023/08/01 15:58:14 br /tmp/work/dist/images/basic/smirk_cat.png -> /output/images/basic/smirk_cat.png.br
2023/08/01 15:58:14 gz /tmp/work/dist/images/basic/smirk_cat.png -> /output/images/basic/smirk_cat.png.gz
2023/08/01 15:58:14 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/snowflake.png /tmp/work/dist/images/basic/snowflake.png
2023/08/01 15:58:16 Optimizing /tmp/work/dist/images/basic/smirk.png
Input size: 5307 (5K)
Result size: 5122 (5K). Percentage of original: 96.514%
Result is smaller


2023/08/01 15:58:16 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/smirk.png.br /tmp/work/dist/images/basic/smirk.png
2023/08/01 15:58:16 br /tmp/work/dist/images/basic/smirk.png -> /output/images/basic/smirk.png.br
2023/08/01 15:58:16 gz /tmp/work/dist/images/basic/smirk.png -> /output/images/basic/smirk.png.gz
2023/08/01 15:58:16 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/snowman.png /tmp/work/dist/images/basic/snowman.png
2023/08/01 15:58:17 Optimizing /tmp/work/dist/images/basic/snake.png
Input size: 4069 (3K)
Result size: 4104 (4K). Percentage of original: 100.860%
Preserving original PNG since it was smaller


2023/08/01 15:58:17 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/snake.png.br /tmp/work/dist/images/basic/snake.png
2023/08/01 15:58:17 br /tmp/work/dist/images/basic/snake.png -> /output/images/basic/snake.png.br
2023/08/01 15:58:17 gz /tmp/work/dist/images/basic/snake.png -> /output/images/basic/snake.png.gz
2023/08/01 15:58:17 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/sob.png /tmp/work/dist/images/basic/sob.png
2023/08/01 15:58:17 Optimizing /tmp/work/dist/images/basic/smoking.png
Input size: 2875 (2K)
Result size: 2728 (2K). Percentage of original: 94.887%
Result is smaller


2023/08/01 15:58:17 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/smoking.png.br /tmp/work/dist/images/basic/smoking.png
2023/08/01 15:58:17 br /tmp/work/dist/images/basic/smoking.png -> /output/images/basic/smoking.png.br
2023/08/01 15:58:17 gz /tmp/work/dist/images/basic/smoking.png -> /output/images/basic/smoking.png.gz
2023/08/01 15:58:17 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/soccer.png /tmp/work/dist/images/basic/soccer.png
2023/08/01 15:58:18 Optimizing /tmp/work/dist/images/basic/snail.png
Input size: 6657 (6K)
Result size: 6707 (6K). Percentage of original: 100.751%
Preserving original PNG since it was smaller


2023/08/01 15:58:18 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/snail.png.br /tmp/work/dist/images/basic/snail.png
2023/08/01 15:58:18 br /tmp/work/dist/images/basic/snail.png -> /output/images/basic/snail.png.br
2023/08/01 15:58:18 gz /tmp/work/dist/images/basic/snail.png -> /output/images/basic/snail.png.gz
2023/08/01 15:58:18 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/soon.png /tmp/work/dist/images/basic/soon.png
2023/08/01 15:58:20 Optimizing /tmp/work/dist/images/basic/small_red_triangle.png
Input size: 2054 (2K)
Result size: 2084 (2K). Percentage of original: 101.461%
Preserving original PNG since it was smaller


2023/08/01 15:58:20 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/small_red_triangle.png.br /tmp/work/dist/images/basic/small_red_triangle.png
2023/08/01 15:58:20 br /tmp/work/dist/images/basic/small_red_triangle.png -> /output/images/basic/small_red_triangle.png.br
2023/08/01 15:58:20 gz /tmp/work/dist/images/basic/small_red_triangle.png -> /output/images/basic/small_red_triangle.png.gz
2023/08/01 15:58:20 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/sos.png /tmp/work/dist/images/basic/sos.png
2023/08/01 15:58:21 Optimizing /tmp/work/dist/images/basic/smiling_imp.png
Input size: 7189 (7K)
Result size: 6693 (6K). Percentage of original: 93.101%
Result is smaller


2023/08/01 15:58:21 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/smiling_imp.png.br /tmp/work/dist/images/basic/smiling_imp.png
2023/08/01 15:58:21 br /tmp/work/dist/images/basic/smiling_imp.png -> /output/images/basic/smiling_imp.png.br
2023/08/01 15:58:21 gz /tmp/work/dist/images/basic/smiling_imp.png -> /output/images/basic/smiling_imp.png.gz
2023/08/01 15:58:21 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/sound.png /tmp/work/dist/images/basic/sound.png
2023/08/01 15:58:22 Optimizing /tmp/work/dist/images/basic/snowboarder.png
Input size: 5356 (5K)
Result size: 5452 (5K). Percentage of original: 101.792%
Preserving original PNG since it was smaller


2023/08/01 15:58:22 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/snowboarder.png.br /tmp/work/dist/images/basic/snowboarder.png
2023/08/01 15:58:22 br /tmp/work/dist/images/basic/snowboarder.png -> /output/images/basic/snowboarder.png.br
2023/08/01 15:58:22 gz /tmp/work/dist/images/basic/snowboarder.png -> /output/images/basic/snowboarder.png.gz
2023/08/01 15:58:22 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/space_invader.png /tmp/work/dist/images/basic/space_invader.png
2023/08/01 15:58:24 Optimizing /tmp/work/dist/images/basic/snowflake.png
Input size: 5637 (5K)
Result size: 5531 (5K). Percentage of original: 98.120%
Result is smaller


2023/08/01 15:58:24 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/snowflake.png.br /tmp/work/dist/images/basic/snowflake.png
2023/08/01 15:58:24 br /tmp/work/dist/images/basic/snowflake.png -> /output/images/basic/snowflake.png.br
2023/08/01 15:58:24 gz /tmp/work/dist/images/basic/snowflake.png -> /output/images/basic/snowflake.png.gz
2023/08/01 15:58:24 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/spades.png /tmp/work/dist/images/basic/spades.png
2023/08/01 15:58:27 Optimizing /tmp/work/dist/images/basic/snowman.png
Input size: 4658 (4K)
Result size: 4744 (4K). Percentage of original: 101.846%
Preserving original PNG since it was smaller


2023/08/01 15:58:27 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/snowman.png.br /tmp/work/dist/images/basic/snowman.png
2023/08/01 15:58:27 br /tmp/work/dist/images/basic/snowman.png -> /output/images/basic/snowman.png.br
2023/08/01 15:58:27 gz /tmp/work/dist/images/basic/snowman.png -> /output/images/basic/snowman.png.gz
2023/08/01 15:58:27 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/spaghetti.png /tmp/work/dist/images/basic/spaghetti.png
2023/08/01 15:58:27 Optimizing /tmp/work/dist/images/basic/soccer.png
Input size: 4878 (4K)
Result size: 4844 (4K). Percentage of original: 99.303%
Result is smaller


2023/08/01 15:58:27 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/soccer.png.br /tmp/work/dist/images/basic/soccer.png
2023/08/01 15:58:27 br /tmp/work/dist/images/basic/soccer.png -> /output/images/basic/soccer.png.br
2023/08/01 15:58:27 gz /tmp/work/dist/images/basic/soccer.png -> /output/images/basic/soccer.png.gz
2023/08/01 15:58:27 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/sparkle.png /tmp/work/dist/images/basic/sparkle.png
2023/08/01 15:58:30 Optimizing /tmp/work/dist/images/basic/sob.png
Input size: 5709 (5K)
Result size: 5413 (5K). Percentage of original: 94.815%
Result is smaller


2023/08/01 15:58:30 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/sob.png.br /tmp/work/dist/images/basic/sob.png
2023/08/01 15:58:30 br /tmp/work/dist/images/basic/sob.png -> /output/images/basic/sob.png.br
2023/08/01 15:58:30 gz /tmp/work/dist/images/basic/sob.png -> /output/images/basic/sob.png.gz
2023/08/01 15:58:30 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/sparkler.png /tmp/work/dist/images/basic/sparkler.png
2023/08/01 15:58:30 Optimizing /tmp/work/dist/images/basic/sound.png
Input size: 5024 (4K)
Result size: 5147 (5K). Percentage of original: 102.448%
Preserving original PNG since it was smaller


2023/08/01 15:58:30 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/sound.png.br /tmp/work/dist/images/basic/sound.png
2023/08/01 15:58:30 br /tmp/work/dist/images/basic/sound.png -> /output/images/basic/sound.png.br
2023/08/01 15:58:30 gz /tmp/work/dist/images/basic/sound.png -> /output/images/basic/sound.png.gz
2023/08/01 15:58:30 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/sparkles.png /tmp/work/dist/images/basic/sparkles.png
2023/08/01 15:58:31 Optimizing /tmp/work/dist/images/basic/spades.png
Input size: 1719 (1K)
Result size: 1645 (1K). Percentage of original: 95.695%
Result is smaller


2023/08/01 15:58:31 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/spades.png.br /tmp/work/dist/images/basic/spades.png
2023/08/01 15:58:31 br /tmp/work/dist/images/basic/spades.png -> /output/images/basic/spades.png.br
2023/08/01 15:58:31 gz /tmp/work/dist/images/basic/spades.png -> /output/images/basic/spades.png.gz
2023/08/01 15:58:31 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/sparkling_heart.png /tmp/work/dist/images/basic/sparkling_heart.png
2023/08/01 15:58:32 Optimizing /tmp/work/dist/images/basic/space_invader.png
Input size: 4353 (4K)
Result size: 4293 (4K). Percentage of original: 98.622%
Result is smaller


2023/08/01 15:58:32 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/space_invader.png.br /tmp/work/dist/images/basic/space_invader.png
2023/08/01 15:58:32 br /tmp/work/dist/images/basic/space_invader.png -> /output/images/basic/space_invader.png.br
2023/08/01 15:58:32 gz /tmp/work/dist/images/basic/space_invader.png -> /output/images/basic/space_invader.png.gz
2023/08/01 15:58:32 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/speak_no_evil.png /tmp/work/dist/images/basic/speak_no_evil.png
2023/08/01 15:58:35 Optimizing /tmp/work/dist/images/basic/spaghetti.png
Input size: 6955 (6K)
Result size: 6916 (6K). Percentage of original: 99.439%
Result is smaller


2023/08/01 15:58:35 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/spaghetti.png.br /tmp/work/dist/images/basic/spaghetti.png
2023/08/01 15:58:36 br /tmp/work/dist/images/basic/spaghetti.png -> /output/images/basic/spaghetti.png.br
2023/08/01 15:58:36 gz /tmp/work/dist/images/basic/spaghetti.png -> /output/images/basic/spaghetti.png.gz
2023/08/01 15:58:36 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/speaker.png /tmp/work/dist/images/basic/speaker.png
2023/08/01 15:58:37 Optimizing /tmp/work/dist/images/basic/sparkle.png
Input size: 8904 (8K)
Result size: 7306 (7K). Percentage of original: 82.053%
Result is smaller


2023/08/01 15:58:37 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/sparkle.png.br /tmp/work/dist/images/basic/sparkle.png
2023/08/01 15:58:37 br /tmp/work/dist/images/basic/sparkle.png -> /output/images/basic/sparkle.png.br
2023/08/01 15:58:37 gz /tmp/work/dist/images/basic/sparkle.png -> /output/images/basic/sparkle.png.gz
2023/08/01 15:58:37 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/speech_balloon.png /tmp/work/dist/images/basic/speech_balloon.png
2023/08/01 15:58:40 Optimizing /tmp/work/dist/images/basic/sparkles.png
Input size: 2209 (2K)
Result size: 2267 (2K). Percentage of original: 102.626%
Preserving original PNG since it was smaller


2023/08/01 15:58:40 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/sparkles.png.br /tmp/work/dist/images/basic/sparkles.png
2023/08/01 15:58:40 br /tmp/work/dist/images/basic/sparkles.png -> /output/images/basic/sparkles.png.br
2023/08/01 15:58:40 gz /tmp/work/dist/images/basic/sparkles.png -> /output/images/basic/sparkles.png.gz
2023/08/01 15:58:40 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/speedboat.png /tmp/work/dist/images/basic/speedboat.png
2023/08/01 15:58:41 Optimizing /tmp/work/dist/images/basic/sos.png
Input size: 4262 (4K)
Result size: 4338 (4K). Percentage of original: 101.783%
Preserving original PNG since it was smaller


2023/08/01 15:58:41 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/sos.png.br /tmp/work/dist/images/basic/sos.png
2023/08/01 15:58:41 br /tmp/work/dist/images/basic/sos.png -> /output/images/basic/sos.png.br
2023/08/01 15:58:41 gz /tmp/work/dist/images/basic/sos.png -> /output/images/basic/sos.png.gz
2023/08/01 15:58:41 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/squirrel.png /tmp/work/dist/images/basic/squirrel.png
2023/08/01 15:58:42 Optimizing /tmp/work/dist/images/basic/speak_no_evil.png
Input size: 5977 (5K)
Result size: 6063 (5K). Percentage of original: 101.439%
Preserving original PNG since it was smaller


2023/08/01 15:58:42 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/speak_no_evil.png.br /tmp/work/dist/images/basic/speak_no_evil.png
2023/08/01 15:58:42 Optimizing /tmp/work/dist/images/basic/sparkler.png
Input size: 5696 (5K)
Result size: 5637 (5K). Percentage of original: 98.964%
Result is smaller


2023/08/01 15:58:42 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/sparkler.png.br /tmp/work/dist/images/basic/sparkler.png
2023/08/01 15:58:42 Optimizing /tmp/work/dist/images/basic/sparkling_heart.png
Input size: 5357 (5K)
Result size: 5381 (5K). Percentage of original: 100.448%
Preserving original PNG since it was smaller


2023/08/01 15:58:42 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/sparkling_heart.png.br /tmp/work/dist/images/basic/sparkling_heart.png
2023/08/01 15:58:42 br /tmp/work/dist/images/basic/speak_no_evil.png -> /output/images/basic/speak_no_evil.png.br
2023/08/01 15:58:42 gz /tmp/work/dist/images/basic/speak_no_evil.png -> /output/images/basic/speak_no_evil.png.gz
2023/08/01 15:58:42 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/star.png /tmp/work/dist/images/basic/star.png
2023/08/01 15:58:42 br /tmp/work/dist/images/basic/sparkler.png -> /output/images/basic/sparkler.png.br
2023/08/01 15:58:42 gz /tmp/work/dist/images/basic/sparkler.png -> /output/images/basic/sparkler.png.gz
2023/08/01 15:58:42 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/star2.png /tmp/work/dist/images/basic/star2.png
2023/08/01 15:58:42 br /tmp/work/dist/images/basic/sparkling_heart.png -> /output/images/basic/sparkling_heart.png.br
2023/08/01 15:58:42 gz /tmp/work/dist/images/basic/sparkling_heart.png -> /output/images/basic/sparkling_heart.png.gz
2023/08/01 15:58:42 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/stars.png /tmp/work/dist/images/basic/stars.png
2023/08/01 15:58:43 Optimizing /tmp/work/dist/images/basic/speaker.png
Input size: 5173 (5K)
Result size: 5325 (5K). Percentage of original: 102.938%
Preserving original PNG since it was smaller


2023/08/01 15:58:43 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/speaker.png.br /tmp/work/dist/images/basic/speaker.png
2023/08/01 15:58:43 br /tmp/work/dist/images/basic/speaker.png -> /output/images/basic/speaker.png.br
2023/08/01 15:58:43 gz /tmp/work/dist/images/basic/speaker.png -> /output/images/basic/speaker.png.gz
2023/08/01 15:58:43 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/station.png /tmp/work/dist/images/basic/station.png
2023/08/01 15:58:45 Optimizing /tmp/work/dist/images/basic/speech_balloon.png
Input size: 2130 (2K)
Result size: 2172 (2K). Percentage of original: 101.972%
Preserving original PNG since it was smaller


2023/08/01 15:58:45 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/speech_balloon.png.br /tmp/work/dist/images/basic/speech_balloon.png
2023/08/01 15:58:45 br /tmp/work/dist/images/basic/speech_balloon.png -> /output/images/basic/speech_balloon.png.br
2023/08/01 15:58:45 gz /tmp/work/dist/images/basic/speech_balloon.png -> /output/images/basic/speech_balloon.png.gz
2023/08/01 15:58:45 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/statue_of_liberty.png /tmp/work/dist/images/basic/statue_of_liberty.png
2023/08/01 15:58:51 Optimizing /tmp/work/dist/images/basic/squirrel.png
Input size: 9351 (9K)
Result size: 9498 (9K). Percentage of original: 101.572%
Preserving original PNG since it was smaller


2023/08/01 15:58:51 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/squirrel.png.br /tmp/work/dist/images/basic/squirrel.png
2023/08/01 15:58:51 br /tmp/work/dist/images/basic/squirrel.png -> /output/images/basic/squirrel.png.br
2023/08/01 15:58:51 gz /tmp/work/dist/images/basic/squirrel.png -> /output/images/basic/squirrel.png.gz
2023/08/01 15:58:51 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/steam_locomotive.png /tmp/work/dist/images/basic/steam_locomotive.png
2023/08/01 15:58:51 Optimizing /tmp/work/dist/images/basic/speedboat.png
Input size: 3512 (3K)
Result size: 3447 (3K). Percentage of original: 98.149%
Result is smaller


2023/08/01 15:58:51 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/speedboat.png.br /tmp/work/dist/images/basic/speedboat.png
2023/08/01 15:58:51 br /tmp/work/dist/images/basic/speedboat.png -> /output/images/basic/speedboat.png.br
2023/08/01 15:58:52 gz /tmp/work/dist/images/basic/speedboat.png -> /output/images/basic/speedboat.png.gz
2023/08/01 15:58:52 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/stew.png /tmp/work/dist/images/basic/stew.png
2023/08/01 15:58:53 Optimizing /tmp/work/dist/images/basic/star2.png
Input size: 4068 (3K)
Result size: 4147 (4K). Percentage of original: 101.942%
Preserving original PNG since it was smaller


2023/08/01 15:58:53 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/star2.png.br /tmp/work/dist/images/basic/star2.png
2023/08/01 15:58:53 Optimizing /tmp/work/dist/images/basic/star.png
Input size: 3628 (3K)
Result size: 3628 (3K). Percentage of original: 100.000%
Result has exact same size


2023/08/01 15:58:53 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/star.png.br /tmp/work/dist/images/basic/star.png
2023/08/01 15:58:53 br /tmp/work/dist/images/basic/star2.png -> /output/images/basic/star2.png.br
2023/08/01 15:58:53 gz /tmp/work/dist/images/basic/star2.png -> /output/images/basic/star2.png.gz
2023/08/01 15:58:53 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/straight_ruler.png /tmp/work/dist/images/basic/straight_ruler.png
2023/08/01 15:58:53 br /tmp/work/dist/images/basic/star.png -> /output/images/basic/star.png.br
2023/08/01 15:58:53 gz /tmp/work/dist/images/basic/star.png -> /output/images/basic/star.png.gz
2023/08/01 15:58:53 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/strawberry.png /tmp/work/dist/images/basic/strawberry.png
2023/08/01 15:58:55 Optimizing /tmp/work/dist/images/basic/station.png
Input size: 4836 (4K)
Result size: 4876 (4K). Percentage of original: 100.827%
Preserving original PNG since it was smaller


2023/08/01 15:58:55 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/station.png.br /tmp/work/dist/images/basic/station.png
2023/08/01 15:58:55 Optimizing /tmp/work/dist/images/basic/soon.png
Input size: 1551 (1K)
Result size: 1862 (1K). Percentage of original: 120.052%
Preserving original PNG since it was smaller


2023/08/01 15:58:55 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/soon.png.br /tmp/work/dist/images/basic/soon.png
2023/08/01 15:58:55 br /tmp/work/dist/images/basic/station.png -> /output/images/basic/station.png.br
2023/08/01 15:58:55 gz /tmp/work/dist/images/basic/station.png -> /output/images/basic/station.png.gz
2023/08/01 15:58:55 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/stuck_out_tongue_closed_eyes.png /tmp/work/dist/images/basic/stuck_out_tongue_closed_eyes.png
2023/08/01 15:58:55 br /tmp/work/dist/images/basic/soon.png -> /output/images/basic/soon.png.br
2023/08/01 15:58:55 gz /tmp/work/dist/images/basic/soon.png -> /output/images/basic/soon.png.gz
2023/08/01 15:58:55 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/stuck_out_tongue_winking_eye.png /tmp/work/dist/images/basic/stuck_out_tongue_winking_eye.png
2023/08/01 15:58:55 Optimizing /tmp/work/dist/images/basic/stars.png
Input size: 4366 (4K)
Result size: 4318 (4K). Percentage of original: 98.901%
Result is smaller


2023/08/01 15:58:55 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/stars.png.br /tmp/work/dist/images/basic/stars.png
2023/08/01 15:58:55 br /tmp/work/dist/images/basic/stars.png -> /output/images/basic/stars.png.br
2023/08/01 15:58:55 gz /tmp/work/dist/images/basic/stars.png -> /output/images/basic/stars.png.gz
2023/08/01 15:58:55 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/stuck_out_tongue.png /tmp/work/dist/images/basic/stuck_out_tongue.png
2023/08/01 15:58:57 Optimizing /tmp/work/dist/images/basic/statue_of_liberty.png
Input size: 6075 (5K)
Result size: 5986 (5K). Percentage of original: 98.535%
Result is smaller


2023/08/01 15:58:57 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/statue_of_liberty.png.br /tmp/work/dist/images/basic/statue_of_liberty.png
2023/08/01 15:58:57 br /tmp/work/dist/images/basic/statue_of_liberty.png -> /output/images/basic/statue_of_liberty.png.br
2023/08/01 15:58:57 gz /tmp/work/dist/images/basic/statue_of_liberty.png -> /output/images/basic/statue_of_liberty.png.gz
2023/08/01 15:58:57 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/sun_with_face.png /tmp/work/dist/images/basic/sun_with_face.png
2023/08/01 15:58:59 Optimizing /tmp/work/dist/images/basic/steam_locomotive.png
Input size: 5159 (5K)
Result size: 5221 (5K). Percentage of original: 101.202%
Preserving original PNG since it was smaller


2023/08/01 15:58:59 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/steam_locomotive.png.br /tmp/work/dist/images/basic/steam_locomotive.png
2023/08/01 15:58:59 br /tmp/work/dist/images/basic/steam_locomotive.png -> /output/images/basic/steam_locomotive.png.br
2023/08/01 15:58:59 gz /tmp/work/dist/images/basic/steam_locomotive.png -> /output/images/basic/steam_locomotive.png.gz
2023/08/01 15:58:59 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/sunflower.png /tmp/work/dist/images/basic/sunflower.png
2023/08/01 15:59:02 Optimizing /tmp/work/dist/images/basic/strawberry.png
Input size: 5477 (5K)
Result size: 5502 (5K). Percentage of original: 100.456%
Preserving original PNG since it was smaller


2023/08/01 15:59:02 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/strawberry.png.br /tmp/work/dist/images/basic/strawberry.png
2023/08/01 15:59:02 br /tmp/work/dist/images/basic/strawberry.png -> /output/images/basic/strawberry.png.br
2023/08/01 15:59:02 gz /tmp/work/dist/images/basic/strawberry.png -> /output/images/basic/strawberry.png.gz
2023/08/01 15:59:02 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/sunglasses.png /tmp/work/dist/images/basic/sunglasses.png
2023/08/01 15:59:04 Optimizing /tmp/work/dist/images/basic/stuck_out_tongue.png
Input size: 5215 (5K)
Result size: 5265 (5K). Percentage of original: 100.959%
Preserving original PNG since it was smaller


2023/08/01 15:59:04 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/stuck_out_tongue.png.br /tmp/work/dist/images/basic/stuck_out_tongue.png
2023/08/01 15:59:04 br /tmp/work/dist/images/basic/stuck_out_tongue.png -> /output/images/basic/stuck_out_tongue.png.br
2023/08/01 15:59:04 gz /tmp/work/dist/images/basic/stuck_out_tongue.png -> /output/images/basic/stuck_out_tongue.png.gz
2023/08/01 15:59:04 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/sunny.png /tmp/work/dist/images/basic/sunny.png
2023/08/01 15:59:05 Optimizing /tmp/work/dist/images/basic/sun_with_face.png
Input size: 7958 (7K)
Result size: 8002 (7K). Percentage of original: 100.553%
Preserving original PNG since it was smaller


2023/08/01 15:59:05 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/sun_with_face.png.br /tmp/work/dist/images/basic/sun_with_face.png
2023/08/01 15:59:05 br /tmp/work/dist/images/basic/sun_with_face.png -> /output/images/basic/sun_with_face.png.br
2023/08/01 15:59:05 gz /tmp/work/dist/images/basic/sun_with_face.png -> /output/images/basic/sun_with_face.png.gz
2023/08/01 15:59:05 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/sunrise_over_mountains.png /tmp/work/dist/images/basic/sunrise_over_mountains.png
2023/08/01 15:59:05 Optimizing /tmp/work/dist/images/basic/straight_ruler.png
Input size: 3797 (3K)
Result size: 3700 (3K). Percentage of original: 97.445%
Result is smaller


2023/08/01 15:59:05 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/straight_ruler.png.br /tmp/work/dist/images/basic/straight_ruler.png
2023/08/01 15:59:05 br /tmp/work/dist/images/basic/straight_ruler.png -> /output/images/basic/straight_ruler.png.br
2023/08/01 15:59:05 gz /tmp/work/dist/images/basic/straight_ruler.png -> /output/images/basic/straight_ruler.png.gz
2023/08/01 15:59:05 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/sunrise.png /tmp/work/dist/images/basic/sunrise.png
2023/08/01 15:59:06 Optimizing /tmp/work/dist/images/basic/stuck_out_tongue_winking_eye.png
Input size: 6007 (5K)
Result size: 5919 (5K). Percentage of original: 98.535%
Result is smaller


2023/08/01 15:59:06 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/stuck_out_tongue_winking_eye.png.br /tmp/work/dist/images/basic/stuck_out_tongue_winking_eye.png
2023/08/01 15:59:06 br /tmp/work/dist/images/basic/stuck_out_tongue_winking_eye.png -> /output/images/basic/stuck_out_tongue_winking_eye.png.br
2023/08/01 15:59:06 gz /tmp/work/dist/images/basic/stuck_out_tongue_winking_eye.png -> /output/images/basic/stuck_out_tongue_winking_eye.png.gz
2023/08/01 15:59:06 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/surfer.png /tmp/work/dist/images/basic/surfer.png
2023/08/01 15:59:07 Optimizing /tmp/work/dist/images/basic/sunflower.png
Input size: 6567 (6K)
Result size: 6569 (6K). Percentage of original: 100.030%
Preserving original PNG since it was smaller


2023/08/01 15:59:07 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/sunflower.png.br /tmp/work/dist/images/basic/sunflower.png
2023/08/01 15:59:07 br /tmp/work/dist/images/basic/sunflower.png -> /output/images/basic/sunflower.png.br
2023/08/01 15:59:07 gz /tmp/work/dist/images/basic/sunflower.png -> /output/images/basic/sunflower.png.gz
2023/08/01 15:59:07 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/sushi.png /tmp/work/dist/images/basic/sushi.png
2023/08/01 15:59:09 Optimizing /tmp/work/dist/images/basic/stuck_out_tongue_closed_eyes.png
Input size: 5785 (5K)
Result size: 5547 (5K). Percentage of original: 95.886%
Result is smaller


2023/08/01 15:59:09 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/stuck_out_tongue_closed_eyes.png.br /tmp/work/dist/images/basic/stuck_out_tongue_closed_eyes.png
2023/08/01 15:59:09 br /tmp/work/dist/images/basic/stuck_out_tongue_closed_eyes.png -> /output/images/basic/stuck_out_tongue_closed_eyes.png.br
2023/08/01 15:59:09 gz /tmp/work/dist/images/basic/stuck_out_tongue_closed_eyes.png -> /output/images/basic/stuck_out_tongue_closed_eyes.png.gz
2023/08/01 15:59:09 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/suspect.png /tmp/work/dist/images/basic/suspect.png
2023/08/01 15:59:11 Optimizing /tmp/work/dist/images/basic/sunglasses.png
Input size: 5730 (5K)
Result size: 5657 (5K). Percentage of original: 98.726%
Result is smaller


2023/08/01 15:59:11 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/sunglasses.png.br /tmp/work/dist/images/basic/sunglasses.png
2023/08/01 15:59:11 br /tmp/work/dist/images/basic/sunglasses.png -> /output/images/basic/sunglasses.png.br
2023/08/01 15:59:11 gz /tmp/work/dist/images/basic/sunglasses.png -> /output/images/basic/sunglasses.png.gz
2023/08/01 15:59:11 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/suspension_railway.png /tmp/work/dist/images/basic/suspension_railway.png
2023/08/01 15:59:14 Optimizing /tmp/work/dist/images/basic/sunny.png
Input size: 3802 (3K)
Result size: 3695 (3K). Percentage of original: 97.186%
Result is smaller


2023/08/01 15:59:14 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/sunny.png.br /tmp/work/dist/images/basic/sunny.png
2023/08/01 15:59:15 br /tmp/work/dist/images/basic/sunny.png -> /output/images/basic/sunny.png.br
2023/08/01 15:59:15 gz /tmp/work/dist/images/basic/sunny.png -> /output/images/basic/sunny.png.gz
2023/08/01 15:59:15 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/sweat_drops.png /tmp/work/dist/images/basic/sweat_drops.png
2023/08/01 15:59:15 Optimizing /tmp/work/dist/images/basic/stew.png
Input size: 5365 (5K)
Result size: 5281 (5K). Percentage of original: 98.434%
Result is smaller


2023/08/01 15:59:15 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/stew.png.br /tmp/work/dist/images/basic/stew.png
2023/08/01 15:59:15 br /tmp/work/dist/images/basic/stew.png -> /output/images/basic/stew.png.br
2023/08/01 15:59:15 gz /tmp/work/dist/images/basic/stew.png -> /output/images/basic/stew.png.gz
2023/08/01 15:59:15 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/sweat_smile.png /tmp/work/dist/images/basic/sweat_smile.png
2023/08/01 15:59:15 Optimizing /tmp/work/dist/images/basic/surfer.png
Input size: 6259 (6K)
Result size: 6293 (6K). Percentage of original: 100.543%
Preserving original PNG since it was smaller


2023/08/01 15:59:15 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/surfer.png.br /tmp/work/dist/images/basic/surfer.png
2023/08/01 15:59:15 br /tmp/work/dist/images/basic/surfer.png -> /output/images/basic/surfer.png.br
2023/08/01 15:59:15 gz /tmp/work/dist/images/basic/surfer.png -> /output/images/basic/surfer.png.gz
2023/08/01 15:59:15 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/sweat.png /tmp/work/dist/images/basic/sweat.png
2023/08/01 15:59:16 Optimizing /tmp/work/dist/images/basic/sunrise.png
Input size: 3914 (3K)
Result size: 3715 (3K). Percentage of original: 94.916%
Result is smaller


2023/08/01 15:59:16 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/sunrise.png.br /tmp/work/dist/images/basic/sunrise.png
2023/08/01 15:59:16 br /tmp/work/dist/images/basic/sunrise.png -> /output/images/basic/sunrise.png.br
2023/08/01 15:59:16 gz /tmp/work/dist/images/basic/sunrise.png -> /output/images/basic/sunrise.png.gz
2023/08/01 15:59:16 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/sweet_potato.png /tmp/work/dist/images/basic/sweet_potato.png
2023/08/01 15:59:18 Optimizing /tmp/work/dist/images/basic/sushi.png
Input size: 5257 (5K)
Result size: 5233 (5K). Percentage of original: 99.543%
Result is smaller


2023/08/01 15:59:18 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/sushi.png.br /tmp/work/dist/images/basic/sushi.png
2023/08/01 15:59:18 br /tmp/work/dist/images/basic/sushi.png -> /output/images/basic/sushi.png.br
2023/08/01 15:59:18 gz /tmp/work/dist/images/basic/sushi.png -> /output/images/basic/sushi.png.gz
2023/08/01 15:59:18 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/swimmer.png /tmp/work/dist/images/basic/swimmer.png
2023/08/01 15:59:19 Optimizing /tmp/work/dist/images/basic/sunrise_over_mountains.png
Input size: 6594 (6K)
Result size: 6406 (6K). Percentage of original: 97.149%
Result is smaller


2023/08/01 15:59:19 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/sunrise_over_mountains.png.br /tmp/work/dist/images/basic/sunrise_over_mountains.png
2023/08/01 15:59:19 br /tmp/work/dist/images/basic/sunrise_over_mountains.png -> /output/images/basic/sunrise_over_mountains.png.br
2023/08/01 15:59:19 gz /tmp/work/dist/images/basic/sunrise_over_mountains.png -> /output/images/basic/sunrise_over_mountains.png.gz
2023/08/01 15:59:19 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/symbols.png /tmp/work/dist/images/basic/symbols.png
2023/08/01 15:59:20 Optimizing /tmp/work/dist/images/basic/suspension_railway.png
Input size: 3937 (3K)
Result size: 4007 (3K). Percentage of original: 101.778%
Preserving original PNG since it was smaller


2023/08/01 15:59:20 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/suspension_railway.png.br /tmp/work/dist/images/basic/suspension_railway.png
2023/08/01 15:59:21 br /tmp/work/dist/images/basic/suspension_railway.png -> /output/images/basic/suspension_railway.png.br
2023/08/01 15:59:21 gz /tmp/work/dist/images/basic/suspension_railway.png -> /output/images/basic/suspension_railway.png.gz
2023/08/01 15:59:21 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/syringe.png /tmp/work/dist/images/basic/syringe.png
2023/08/01 15:59:22 Optimizing /tmp/work/dist/images/basic/sweet_potato.png
Input size: 5551 (5K)
Result size: 5823 (5K). Percentage of original: 104.900%
Preserving original PNG since it was smaller


2023/08/01 15:59:22 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/sweet_potato.png.br /tmp/work/dist/images/basic/sweet_potato.png
2023/08/01 15:59:22 br /tmp/work/dist/images/basic/sweet_potato.png -> /output/images/basic/sweet_potato.png.br
2023/08/01 15:59:22 gz /tmp/work/dist/images/basic/sweet_potato.png -> /output/images/basic/sweet_potato.png.gz
2023/08/01 15:59:22 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/tada.png /tmp/work/dist/images/basic/tada.png
2023/08/01 15:59:25 Optimizing /tmp/work/dist/images/basic/symbols.png
Input size: 5434 (5K)
Result size: 5456 (5K). Percentage of original: 100.405%
Preserving original PNG since it was smaller


2023/08/01 15:59:25 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/symbols.png.br /tmp/work/dist/images/basic/symbols.png
2023/08/01 15:59:25 Optimizing /tmp/work/dist/images/basic/sweat_smile.png
Input size: 6519 (6K)
Result size: 6470 (6K). Percentage of original: 99.248%
Result is smaller


2023/08/01 15:59:25 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/sweat_smile.png.br /tmp/work/dist/images/basic/sweat_smile.png
2023/08/01 15:59:25 br /tmp/work/dist/images/basic/symbols.png -> /output/images/basic/symbols.png.br
2023/08/01 15:59:25 gz /tmp/work/dist/images/basic/symbols.png -> /output/images/basic/symbols.png.gz
2023/08/01 15:59:25 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/tanabata_tree.png /tmp/work/dist/images/basic/tanabata_tree.png
2023/08/01 15:59:25 br /tmp/work/dist/images/basic/sweat_smile.png -> /output/images/basic/sweat_smile.png.br
2023/08/01 15:59:25 gz /tmp/work/dist/images/basic/sweat_smile.png -> /output/images/basic/sweat_smile.png.gz
2023/08/01 15:59:25 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/tangerine.png /tmp/work/dist/images/basic/tangerine.png
2023/08/01 15:59:26 Optimizing /tmp/work/dist/images/basic/sweat_drops.png
Input size: 4782 (4K)
Result size: 4828 (4K). Percentage of original: 100.962%
Preserving original PNG since it was smaller


2023/08/01 15:59:26 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/sweat_drops.png.br /tmp/work/dist/images/basic/sweat_drops.png
2023/08/01 15:59:26 Optimizing /tmp/work/dist/images/basic/sweat.png
Input size: 5576 (5K)
Result size: 5437 (5K). Percentage of original: 97.507%
Result is smaller


2023/08/01 15:59:26 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/sweat.png.br /tmp/work/dist/images/basic/sweat.png
2023/08/01 15:59:26 br /tmp/work/dist/images/basic/sweat_drops.png -> /output/images/basic/sweat_drops.png.br
2023/08/01 15:59:26 gz /tmp/work/dist/images/basic/sweat_drops.png -> /output/images/basic/sweat_drops.png.gz
2023/08/01 15:59:26 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/taurus.png /tmp/work/dist/images/basic/taurus.png
2023/08/01 15:59:26 br /tmp/work/dist/images/basic/sweat.png -> /output/images/basic/sweat.png.br
2023/08/01 15:59:26 gz /tmp/work/dist/images/basic/sweat.png -> /output/images/basic/sweat.png.gz
2023/08/01 15:59:26 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/taxi.png /tmp/work/dist/images/basic/taxi.png
2023/08/01 15:59:28 Optimizing /tmp/work/dist/images/basic/tangerine.png
Input size: 6645 (6K)
Result size: 6646 (6K). Percentage of original: 100.015%
Preserving original PNG since it was smaller


2023/08/01 15:59:28 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/tangerine.png.br /tmp/work/dist/images/basic/tangerine.png
2023/08/01 15:59:28 br /tmp/work/dist/images/basic/tangerine.png -> /output/images/basic/tangerine.png.br
2023/08/01 15:59:28 gz /tmp/work/dist/images/basic/tangerine.png -> /output/images/basic/tangerine.png.gz
2023/08/01 15:59:28 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/tea.png /tmp/work/dist/images/basic/tea.png
2023/08/01 15:59:29 Optimizing /tmp/work/dist/images/basic/swimmer.png
Input size: 4378 (4K)
Result size: 4310 (4K). Percentage of original: 98.447%
Result is smaller


2023/08/01 15:59:29 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/swimmer.png.br /tmp/work/dist/images/basic/swimmer.png
2023/08/01 15:59:29 br /tmp/work/dist/images/basic/swimmer.png -> /output/images/basic/swimmer.png.br
2023/08/01 15:59:29 gz /tmp/work/dist/images/basic/swimmer.png -> /output/images/basic/swimmer.png.gz
2023/08/01 15:59:29 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/telephone_receiver.png /tmp/work/dist/images/basic/telephone_receiver.png
2023/08/01 15:59:30 Optimizing /tmp/work/dist/images/basic/tanabata_tree.png
Input size: 4296 (4K)
Result size: 4479 (4K). Percentage of original: 104.260%
Preserving original PNG since it was smaller


2023/08/01 15:59:30 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/tanabata_tree.png.br /tmp/work/dist/images/basic/tanabata_tree.png
2023/08/01 15:59:30 br /tmp/work/dist/images/basic/tanabata_tree.png -> /output/images/basic/tanabata_tree.png.br
2023/08/01 15:59:30 gz /tmp/work/dist/images/basic/tanabata_tree.png -> /output/images/basic/tanabata_tree.png.gz
2023/08/01 15:59:30 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/telephone.png /tmp/work/dist/images/basic/telephone.png
2023/08/01 15:59:31 Optimizing /tmp/work/dist/images/basic/suspect.png
Input size: 1016 (0K)
Result size: 1059 (1K). Percentage of original: 104.232%
Preserving original PNG since it was smaller


2023/08/01 15:59:31 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/suspect.png.br /tmp/work/dist/images/basic/suspect.png
2023/08/01 15:59:31 br /tmp/work/dist/images/basic/suspect.png -> /output/images/basic/suspect.png.br
2023/08/01 15:59:31 gz /tmp/work/dist/images/basic/suspect.png -> /output/images/basic/suspect.png.gz
2023/08/01 15:59:31 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/telescope.png /tmp/work/dist/images/basic/telescope.png
2023/08/01 15:59:32 Optimizing /tmp/work/dist/images/basic/tada.png
Input size: 5945 (5K)
Result size: 5916 (5K). Percentage of original: 99.512%
Result is smaller


2023/08/01 15:59:32 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/tada.png.br /tmp/work/dist/images/basic/tada.png
2023/08/01 15:59:32 br /tmp/work/dist/images/basic/tada.png -> /output/images/basic/tada.png.br
2023/08/01 15:59:32 gz /tmp/work/dist/images/basic/tada.png -> /output/images/basic/tada.png.gz
2023/08/01 15:59:32 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/tennis.png /tmp/work/dist/images/basic/tennis.png
2023/08/01 15:59:33 Optimizing /tmp/work/dist/images/basic/syringe.png
Input size: 3027 (2K)
Result size: 3212 (3K). Percentage of original: 106.112%
Preserving original PNG since it was smaller


2023/08/01 15:59:33 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/syringe.png.br /tmp/work/dist/images/basic/syringe.png
2023/08/01 15:59:33 br /tmp/work/dist/images/basic/syringe.png -> /output/images/basic/syringe.png.br
2023/08/01 15:59:33 gz /tmp/work/dist/images/basic/syringe.png -> /output/images/basic/syringe.png.gz
2023/08/01 15:59:33 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/tent.png /tmp/work/dist/images/basic/tent.png
2023/08/01 15:59:34 Optimizing /tmp/work/dist/images/basic/taxi.png
Input size: 3744 (3K)
Result size: 3708 (3K). Percentage of original: 99.038%
Result is smaller


2023/08/01 15:59:34 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/taxi.png.br /tmp/work/dist/images/basic/taxi.png
2023/08/01 15:59:34 br /tmp/work/dist/images/basic/taxi.png -> /output/images/basic/taxi.png.br
2023/08/01 15:59:34 gz /tmp/work/dist/images/basic/taxi.png -> /output/images/basic/taxi.png.gz
2023/08/01 15:59:34 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/thought_balloon.png /tmp/work/dist/images/basic/thought_balloon.png
2023/08/01 15:59:35 Optimizing /tmp/work/dist/images/basic/telephone_receiver.png
Input size: 2001 (1K)
Result size: 2052 (2K). Percentage of original: 102.549%
Preserving original PNG since it was smaller


2023/08/01 15:59:35 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/telephone_receiver.png.br /tmp/work/dist/images/basic/telephone_receiver.png
2023/08/01 15:59:35 br /tmp/work/dist/images/basic/telephone_receiver.png -> /output/images/basic/telephone_receiver.png.br
2023/08/01 15:59:35 gz /tmp/work/dist/images/basic/telephone_receiver.png -> /output/images/basic/telephone_receiver.png.gz
2023/08/01 15:59:35 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/three.png /tmp/work/dist/images/basic/three.png
2023/08/01 15:59:38 Optimizing /tmp/work/dist/images/basic/taurus.png
Input size: 4733 (4K)
Result size: 4657 (4K). Percentage of original: 98.394%
Result is smaller


2023/08/01 15:59:38 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/taurus.png.br /tmp/work/dist/images/basic/taurus.png
2023/08/01 15:59:38 br /tmp/work/dist/images/basic/taurus.png -> /output/images/basic/taurus.png.br
2023/08/01 15:59:38 gz /tmp/work/dist/images/basic/taurus.png -> /output/images/basic/taurus.png.gz
2023/08/01 15:59:38 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/thumbsdown.png /tmp/work/dist/images/basic/thumbsdown.png
2023/08/01 15:59:39 Optimizing /tmp/work/dist/images/basic/telephone.png
Input size: 5495 (5K)
Result size: 5522 (5K). Percentage of original: 100.491%
Preserving original PNG since it was smaller


2023/08/01 15:59:39 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/telephone.png.br /tmp/work/dist/images/basic/telephone.png
2023/08/01 15:59:39 br /tmp/work/dist/images/basic/telephone.png -> /output/images/basic/telephone.png.br
2023/08/01 15:59:39 gz /tmp/work/dist/images/basic/telephone.png -> /output/images/basic/telephone.png.gz
2023/08/01 15:59:39 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/thumbsup.png /tmp/work/dist/images/basic/thumbsup.png
2023/08/01 15:59:39 Optimizing /tmp/work/dist/images/basic/thought_balloon.png
Input size: 2521 (2K)
Result size: 2495 (2K). Percentage of original: 98.969%
Result is smaller


2023/08/01 15:59:39 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/thought_balloon.png.br /tmp/work/dist/images/basic/thought_balloon.png
2023/08/01 15:59:40 br /tmp/work/dist/images/basic/thought_balloon.png -> /output/images/basic/thought_balloon.png.br
2023/08/01 15:59:40 gz /tmp/work/dist/images/basic/thought_balloon.png -> /output/images/basic/thought_balloon.png.gz
2023/08/01 15:59:40 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/ticket.png /tmp/work/dist/images/basic/ticket.png
2023/08/01 15:59:43 Optimizing /tmp/work/dist/images/basic/telescope.png
Input size: 3252 (3K)
Result size: 3399 (3K). Percentage of original: 104.520%
Preserving original PNG since it was smaller


2023/08/01 15:59:43 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/telescope.png.br /tmp/work/dist/images/basic/telescope.png
2023/08/01 15:59:43 br /tmp/work/dist/images/basic/telescope.png -> /output/images/basic/telescope.png.br
2023/08/01 15:59:43 gz /tmp/work/dist/images/basic/telescope.png -> /output/images/basic/telescope.png.gz
2023/08/01 15:59:43 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/tiger.png /tmp/work/dist/images/basic/tiger.png
2023/08/01 15:59:44 Optimizing /tmp/work/dist/images/basic/tent.png
Input size: 4482 (4K)
Result size: 4361 (4K). Percentage of original: 97.300%
Result is smaller


2023/08/01 15:59:44 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/tent.png.br /tmp/work/dist/images/basic/tent.png
2023/08/01 15:59:44 br /tmp/work/dist/images/basic/tent.png -> /output/images/basic/tent.png.br
2023/08/01 15:59:44 gz /tmp/work/dist/images/basic/tent.png -> /output/images/basic/tent.png.gz
2023/08/01 15:59:44 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/tiger2.png /tmp/work/dist/images/basic/tiger2.png
2023/08/01 15:59:45 Optimizing /tmp/work/dist/images/basic/tennis.png
Input size: 5976 (5K)
Result size: 5954 (5K). Percentage of original: 99.632%
Result is smaller


2023/08/01 15:59:45 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/tennis.png.br /tmp/work/dist/images/basic/tennis.png
2023/08/01 15:59:45 br /tmp/work/dist/images/basic/tennis.png -> /output/images/basic/tennis.png.br
2023/08/01 15:59:45 gz /tmp/work/dist/images/basic/tennis.png -> /output/images/basic/tennis.png.gz
2023/08/01 15:59:45 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/tired_face.png /tmp/work/dist/images/basic/tired_face.png
2023/08/01 15:59:45 Optimizing /tmp/work/dist/images/basic/ticket.png
Input size: 3091 (3K)
Result size: 3028 (2K). Percentage of original: 97.962%
Result is smaller


2023/08/01 15:59:45 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/ticket.png.br /tmp/work/dist/images/basic/ticket.png
2023/08/01 15:59:45 br /tmp/work/dist/images/basic/ticket.png -> /output/images/basic/ticket.png.br
2023/08/01 15:59:45 gz /tmp/work/dist/images/basic/ticket.png -> /output/images/basic/ticket.png.gz
2023/08/01 15:59:45 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/tm.png /tmp/work/dist/images/basic/tm.png
2023/08/01 15:59:46 Optimizing /tmp/work/dist/images/basic/tea.png
Input size: 5954 (5K)
Result size: 5913 (5K). Percentage of original: 99.311%
Result is smaller


2023/08/01 15:59:46 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/tea.png.br /tmp/work/dist/images/basic/tea.png
2023/08/01 15:59:46 br /tmp/work/dist/images/basic/tea.png -> /output/images/basic/tea.png.br
2023/08/01 15:59:46 gz /tmp/work/dist/images/basic/tea.png -> /output/images/basic/tea.png.gz
2023/08/01 15:59:46 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/toilet.png /tmp/work/dist/images/basic/toilet.png
2023/08/01 15:59:46 Optimizing /tmp/work/dist/images/basic/three.png
Input size: 3758 (3K)
Result size: 3752 (3K). Percentage of original: 99.840%
Result is smaller


2023/08/01 15:59:46 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/three.png.br /tmp/work/dist/images/basic/three.png
2023/08/01 15:59:47 br /tmp/work/dist/images/basic/three.png -> /output/images/basic/three.png.br
2023/08/01 15:59:47 gz /tmp/work/dist/images/basic/three.png -> /output/images/basic/three.png.gz
2023/08/01 15:59:47 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/tokyo_tower.png /tmp/work/dist/images/basic/tokyo_tower.png
2023/08/01 15:59:50 Optimizing /tmp/work/dist/images/basic/thumbsup.png
Input size: 5075 (4K)
Result size: 5052 (4K). Percentage of original: 99.547%
Result is smaller


2023/08/01 15:59:50 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/thumbsup.png.br /tmp/work/dist/images/basic/thumbsup.png
2023/08/01 15:59:50 br /tmp/work/dist/images/basic/thumbsup.png -> /output/images/basic/thumbsup.png.br
2023/08/01 15:59:50 gz /tmp/work/dist/images/basic/thumbsup.png -> /output/images/basic/thumbsup.png.gz
2023/08/01 15:59:50 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/tomato.png /tmp/work/dist/images/basic/tomato.png
2023/08/01 15:59:51 Optimizing /tmp/work/dist/images/basic/thumbsdown.png
Input size: 5070 (4K)
Result size: 5165 (5K). Percentage of original: 101.874%
Preserving original PNG since it was smaller


2023/08/01 15:59:51 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/thumbsdown.png.br /tmp/work/dist/images/basic/thumbsdown.png
2023/08/01 15:59:51 br /tmp/work/dist/images/basic/thumbsdown.png -> /output/images/basic/thumbsdown.png.br
2023/08/01 15:59:51 gz /tmp/work/dist/images/basic/thumbsdown.png -> /output/images/basic/thumbsdown.png.gz
2023/08/01 15:59:51 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/tongue.png /tmp/work/dist/images/basic/tongue.png
2023/08/01 15:59:52 Optimizing /tmp/work/dist/images/basic/toilet.png
Input size: 1733 (1K)
Result size: 1762 (1K). Percentage of original: 101.673%
Preserving original PNG since it was smaller


2023/08/01 15:59:52 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/toilet.png.br /tmp/work/dist/images/basic/toilet.png
2023/08/01 15:59:53 br /tmp/work/dist/images/basic/toilet.png -> /output/images/basic/toilet.png.br
2023/08/01 15:59:53 gz /tmp/work/dist/images/basic/toilet.png -> /output/images/basic/toilet.png.gz
2023/08/01 15:59:53 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/top.png /tmp/work/dist/images/basic/top.png
2023/08/01 15:59:54 Optimizing /tmp/work/dist/images/basic/tiger.png
Input size: 6051 (5K)
Result size: 6136 (5K). Percentage of original: 101.405%
Preserving original PNG since it was smaller


2023/08/01 15:59:54 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/tiger.png.br /tmp/work/dist/images/basic/tiger.png
2023/08/01 15:59:55 br /tmp/work/dist/images/basic/tiger.png -> /output/images/basic/tiger.png.br
2023/08/01 15:59:55 gz /tmp/work/dist/images/basic/tiger.png -> /output/images/basic/tiger.png.gz
2023/08/01 15:59:55 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/tophat.png /tmp/work/dist/images/basic/tophat.png
2023/08/01 15:59:56 Optimizing /tmp/work/dist/images/basic/tired_face.png
Input size: 6174 (6K)
Result size: 6099 (5K). Percentage of original: 98.785%
Result is smaller


2023/08/01 15:59:56 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/tired_face.png.br /tmp/work/dist/images/basic/tired_face.png
2023/08/01 15:59:56 br /tmp/work/dist/images/basic/tired_face.png -> /output/images/basic/tired_face.png.br
2023/08/01 15:59:56 gz /tmp/work/dist/images/basic/tired_face.png -> /output/images/basic/tired_face.png.gz
2023/08/01 15:59:56 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/tractor.png /tmp/work/dist/images/basic/tractor.png
2023/08/01 15:59:59 Optimizing /tmp/work/dist/images/basic/tomato.png
Input size: 5748 (5K)
Result size: 5670 (5K). Percentage of original: 98.643%
Result is smaller


2023/08/01 15:59:59 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/tomato.png.br /tmp/work/dist/images/basic/tomato.png
2023/08/01 15:59:59 br /tmp/work/dist/images/basic/tomato.png -> /output/images/basic/tomato.png.br
2023/08/01 15:59:59 gz /tmp/work/dist/images/basic/tomato.png -> /output/images/basic/tomato.png.gz
2023/08/01 15:59:59 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/traffic_light.png /tmp/work/dist/images/basic/traffic_light.png
2023/08/01 15:59:59 Optimizing /tmp/work/dist/images/basic/tiger2.png
Input size: 5744 (5K)
Result size: 5774 (5K). Percentage of original: 100.522%
Preserving original PNG since it was smaller


2023/08/01 15:59:59 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/tiger2.png.br /tmp/work/dist/images/basic/tiger2.png
2023/08/01 15:59:59 br /tmp/work/dist/images/basic/tiger2.png -> /output/images/basic/tiger2.png.br
2023/08/01 15:59:59 gz /tmp/work/dist/images/basic/tiger2.png -> /output/images/basic/tiger2.png.gz
2023/08/01 15:59:59 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/train.png /tmp/work/dist/images/basic/train.png
2023/08/01 16:00:01 Optimizing /tmp/work/dist/images/basic/tm.png
Input size: 842 (0K)
Result size: 852 (0K). Percentage of original: 101.188%
Preserving original PNG since it was smaller


2023/08/01 16:00:01 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/tm.png.br /tmp/work/dist/images/basic/tm.png
2023/08/01 16:00:01 br /tmp/work/dist/images/basic/tm.png -> /output/images/basic/tm.png.br
2023/08/01 16:00:01 gz /tmp/work/dist/images/basic/tm.png -> /output/images/basic/tm.png.gz
2023/08/01 16:00:01 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/train2.png /tmp/work/dist/images/basic/train2.png
2023/08/01 16:00:04 Optimizing /tmp/work/dist/images/basic/top.png
Input size: 3785 (3K)
Result size: 3796 (3K). Percentage of original: 100.291%
Preserving original PNG since it was smaller


2023/08/01 16:00:04 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/top.png.br /tmp/work/dist/images/basic/top.png
2023/08/01 16:00:04 br /tmp/work/dist/images/basic/top.png -> /output/images/basic/top.png.br
2023/08/01 16:00:04 gz /tmp/work/dist/images/basic/top.png -> /output/images/basic/top.png.gz
2023/08/01 16:00:04 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/tram.png /tmp/work/dist/images/basic/tram.png
2023/08/01 16:00:04 Optimizing /tmp/work/dist/images/basic/tractor.png
Input size: 5671 (5K)
Result size: 5659 (5K). Percentage of original: 99.788%
Result is smaller


2023/08/01 16:00:04 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/tractor.png.br /tmp/work/dist/images/basic/tractor.png
2023/08/01 16:00:04 br /tmp/work/dist/images/basic/tractor.png -> /output/images/basic/tractor.png.br
2023/08/01 16:00:04 gz /tmp/work/dist/images/basic/tractor.png -> /output/images/basic/tractor.png.gz
2023/08/01 16:00:04 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/triangular_flag_on_post.png /tmp/work/dist/images/basic/triangular_flag_on_post.png
2023/08/01 16:00:07 Optimizing /tmp/work/dist/images/basic/tophat.png
Input size: 3009 (2K)
Result size: 3040 (2K). Percentage of original: 101.030%
Preserving original PNG since it was smaller


2023/08/01 16:00:07 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/tophat.png.br /tmp/work/dist/images/basic/tophat.png
2023/08/01 16:00:07 br /tmp/work/dist/images/basic/tophat.png -> /output/images/basic/tophat.png.br
2023/08/01 16:00:07 gz /tmp/work/dist/images/basic/tophat.png -> /output/images/basic/tophat.png.gz
2023/08/01 16:00:07 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/triangular_ruler.png /tmp/work/dist/images/basic/triangular_ruler.png
2023/08/01 16:00:12 Optimizing /tmp/work/dist/images/basic/tokyo_tower.png
Input size: 4802 (4K)
Result size: 4611 (4K). Percentage of original: 96.022%
Result is smaller


2023/08/01 16:00:12 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/tokyo_tower.png.br /tmp/work/dist/images/basic/tokyo_tower.png
2023/08/01 16:00:12 br /tmp/work/dist/images/basic/tokyo_tower.png -> /output/images/basic/tokyo_tower.png.br
2023/08/01 16:00:12 gz /tmp/work/dist/images/basic/tokyo_tower.png -> /output/images/basic/tokyo_tower.png.gz
2023/08/01 16:00:12 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/trident.png /tmp/work/dist/images/basic/trident.png
2023/08/01 16:00:13 Optimizing /tmp/work/dist/images/basic/tram.png
Input size: 4869 (4K)
Result size: 4887 (4K). Percentage of original: 100.370%
Preserving original PNG since it was smaller


2023/08/01 16:00:13 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/tram.png.br /tmp/work/dist/images/basic/tram.png
2023/08/01 16:00:13 br /tmp/work/dist/images/basic/tram.png -> /output/images/basic/tram.png.br
2023/08/01 16:00:13 gz /tmp/work/dist/images/basic/tram.png -> /output/images/basic/tram.png.gz
2023/08/01 16:00:13 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/triumph.png /tmp/work/dist/images/basic/triumph.png
2023/08/01 16:00:15 Optimizing /tmp/work/dist/images/basic/train2.png
Input size: 4817 (4K)
Result size: 4880 (4K). Percentage of original: 101.308%
Preserving original PNG since it was smaller


2023/08/01 16:00:15 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/train2.png.br /tmp/work/dist/images/basic/train2.png
2023/08/01 16:00:15 br /tmp/work/dist/images/basic/train2.png -> /output/images/basic/train2.png.br
2023/08/01 16:00:15 gz /tmp/work/dist/images/basic/train2.png -> /output/images/basic/train2.png.gz
2023/08/01 16:00:15 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/trolleybus.png /tmp/work/dist/images/basic/trolleybus.png
2023/08/01 16:00:16 Optimizing /tmp/work/dist/images/basic/triangular_flag_on_post.png
Input size: 1399 (1K)
Result size: 1467 (1K). Percentage of original: 104.861%
Preserving original PNG since it was smaller


2023/08/01 16:00:16 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/triangular_flag_on_post.png.br /tmp/work/dist/images/basic/triangular_flag_on_post.png
2023/08/01 16:00:16 br /tmp/work/dist/images/basic/triangular_flag_on_post.png -> /output/images/basic/triangular_flag_on_post.png.br
2023/08/01 16:00:16 gz /tmp/work/dist/images/basic/triangular_flag_on_post.png -> /output/images/basic/triangular_flag_on_post.png.gz
2023/08/01 16:00:16 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/trollface.png /tmp/work/dist/images/basic/trollface.png
2023/08/01 16:00:17 Optimizing /tmp/work/dist/images/basic/triangular_ruler.png
Input size: 2706 (2K)
Result size: 2834 (2K). Percentage of original: 104.730%
Preserving original PNG since it was smaller


2023/08/01 16:00:17 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/triangular_ruler.png.br /tmp/work/dist/images/basic/triangular_ruler.png
2023/08/01 16:00:17 br /tmp/work/dist/images/basic/triangular_ruler.png -> /output/images/basic/triangular_ruler.png.br
2023/08/01 16:00:17 gz /tmp/work/dist/images/basic/triangular_ruler.png -> /output/images/basic/triangular_ruler.png.gz
2023/08/01 16:00:17 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/trophy.png /tmp/work/dist/images/basic/trophy.png
2023/08/01 16:00:18 Optimizing /tmp/work/dist/images/basic/train.png
Input size: 3905 (3K)
Result size: 3806 (3K). Percentage of original: 97.465%
Result is smaller


2023/08/01 16:00:18 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/train.png.br /tmp/work/dist/images/basic/train.png
2023/08/01 16:00:18 br /tmp/work/dist/images/basic/train.png -> /output/images/basic/train.png.br
2023/08/01 16:00:18 gz /tmp/work/dist/images/basic/train.png -> /output/images/basic/train.png.gz
2023/08/01 16:00:18 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/tropical_drink.png /tmp/work/dist/images/basic/tropical_drink.png
2023/08/01 16:00:18 Optimizing /tmp/work/dist/images/basic/tongue.png
Input size: 3662 (3K)
Result size: 3525 (3K). Percentage of original: 96.259%
Result is smaller


2023/08/01 16:00:18 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/tongue.png.br /tmp/work/dist/images/basic/tongue.png
2023/08/01 16:00:18 br /tmp/work/dist/images/basic/tongue.png -> /output/images/basic/tongue.png.br
2023/08/01 16:00:18 gz /tmp/work/dist/images/basic/tongue.png -> /output/images/basic/tongue.png.gz
2023/08/01 16:00:18 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/tropical_fish.png /tmp/work/dist/images/basic/tropical_fish.png
2023/08/01 16:00:18 Optimizing /tmp/work/dist/images/basic/trident.png
Input size: 4833 (4K)
Result size: 4815 (4K). Percentage of original: 99.628%
Result is smaller


2023/08/01 16:00:18 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/trident.png.br /tmp/work/dist/images/basic/trident.png
2023/08/01 16:00:18 br /tmp/work/dist/images/basic/trident.png -> /output/images/basic/trident.png.br
2023/08/01 16:00:18 gz /tmp/work/dist/images/basic/trident.png -> /output/images/basic/trident.png.gz
2023/08/01 16:00:18 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/truck.png /tmp/work/dist/images/basic/truck.png
2023/08/01 16:00:18 Optimizing /tmp/work/dist/images/basic/traffic_light.png
Input size: 3535 (3K)
Result size: 3489 (3K). Percentage of original: 98.699%
Result is smaller


2023/08/01 16:00:18 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/traffic_light.png.br /tmp/work/dist/images/basic/traffic_light.png
2023/08/01 16:00:19 br /tmp/work/dist/images/basic/traffic_light.png -> /output/images/basic/traffic_light.png.br
2023/08/01 16:00:19 gz /tmp/work/dist/images/basic/traffic_light.png -> /output/images/basic/traffic_light.png.gz
2023/08/01 16:00:19 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/trumpet.png /tmp/work/dist/images/basic/trumpet.png
2023/08/01 16:00:20 Optimizing /tmp/work/dist/images/basic/triumph.png
Input size: 6164 (6K)
Result size: 6130 (5K). Percentage of original: 99.448%
Result is smaller


2023/08/01 16:00:20 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/triumph.png.br /tmp/work/dist/images/basic/triumph.png
2023/08/01 16:00:20 br /tmp/work/dist/images/basic/triumph.png -> /output/images/basic/triumph.png.br
2023/08/01 16:00:20 gz /tmp/work/dist/images/basic/triumph.png -> /output/images/basic/triumph.png.gz
2023/08/01 16:00:20 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/tshirt.png /tmp/work/dist/images/basic/tshirt.png
2023/08/01 16:00:22 Optimizing /tmp/work/dist/images/basic/truck.png
Input size: 3721 (3K)
Result size: 3670 (3K). Percentage of original: 98.629%
Result is smaller


2023/08/01 16:00:22 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/truck.png.br /tmp/work/dist/images/basic/truck.png
2023/08/01 16:00:22 br /tmp/work/dist/images/basic/truck.png -> /output/images/basic/truck.png.br
2023/08/01 16:00:22 gz /tmp/work/dist/images/basic/truck.png -> /output/images/basic/truck.png.gz
2023/08/01 16:00:22 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/tulip.png /tmp/work/dist/images/basic/tulip.png
2023/08/01 16:00:24 Optimizing /tmp/work/dist/images/basic/trophy.png
Input size: 5520 (5K)
Result size: 5582 (5K). Percentage of original: 101.123%
Preserving original PNG since it was smaller


2023/08/01 16:00:24 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/trophy.png.br /tmp/work/dist/images/basic/trophy.png
2023/08/01 16:00:25 br /tmp/work/dist/images/basic/trophy.png -> /output/images/basic/trophy.png.br
2023/08/01 16:00:25 gz /tmp/work/dist/images/basic/trophy.png -> /output/images/basic/trophy.png.gz
2023/08/01 16:00:25 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/turtle.png /tmp/work/dist/images/basic/turtle.png
2023/08/01 16:00:26 Optimizing /tmp/work/dist/images/basic/trolleybus.png
Input size: 4431 (4K)
Result size: 4298 (4K). Percentage of original: 96.998%
Result is smaller


2023/08/01 16:00:26 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/trolleybus.png.br /tmp/work/dist/images/basic/trolleybus.png
2023/08/01 16:00:26 br /tmp/work/dist/images/basic/trolleybus.png -> /output/images/basic/trolleybus.png.br
2023/08/01 16:00:26 gz /tmp/work/dist/images/basic/trolleybus.png -> /output/images/basic/trolleybus.png.gz
2023/08/01 16:00:26 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/tv.png /tmp/work/dist/images/basic/tv.png
2023/08/01 16:00:27 Optimizing /tmp/work/dist/images/basic/trumpet.png
Input size: 4373 (4K)
Result size: 4563 (4K). Percentage of original: 104.345%
Preserving original PNG since it was smaller


2023/08/01 16:00:27 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/trumpet.png.br /tmp/work/dist/images/basic/trumpet.png
2023/08/01 16:00:27 Optimizing /tmp/work/dist/images/basic/tropical_drink.png
Input size: 4189 (4K)
Result size: 4270 (4K). Percentage of original: 101.934%
Preserving original PNG since it was smaller


2023/08/01 16:00:27 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/tropical_drink.png.br /tmp/work/dist/images/basic/tropical_drink.png
2023/08/01 16:00:27 br /tmp/work/dist/images/basic/trumpet.png -> /output/images/basic/trumpet.png.br
2023/08/01 16:00:27 gz /tmp/work/dist/images/basic/trumpet.png -> /output/images/basic/trumpet.png.gz
2023/08/01 16:00:27 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/twisted_rightwards_arrows.png /tmp/work/dist/images/basic/twisted_rightwards_arrows.png
2023/08/01 16:00:27 br /tmp/work/dist/images/basic/tropical_drink.png -> /output/images/basic/tropical_drink.png.br
2023/08/01 16:00:27 gz /tmp/work/dist/images/basic/tropical_drink.png -> /output/images/basic/tropical_drink.png.gz
2023/08/01 16:00:27 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/two_hearts.png /tmp/work/dist/images/basic/two_hearts.png
2023/08/01 16:00:29 Optimizing /tmp/work/dist/images/basic/tulip.png
Input size: 6065 (5K)
Result size: 6085 (5K). Percentage of original: 100.330%
Preserving original PNG since it was smaller


2023/08/01 16:00:29 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/tulip.png.br /tmp/work/dist/images/basic/tulip.png
2023/08/01 16:00:29 br /tmp/work/dist/images/basic/tulip.png -> /output/images/basic/tulip.png.br
2023/08/01 16:00:29 gz /tmp/work/dist/images/basic/tulip.png -> /output/images/basic/tulip.png.gz
2023/08/01 16:00:29 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/two_men_holding_hands.png /tmp/work/dist/images/basic/two_men_holding_hands.png
2023/08/01 16:00:29 Optimizing /tmp/work/dist/images/basic/tropical_fish.png
Input size: 5846 (5K)
Result size: 5808 (5K). Percentage of original: 99.350%
Result is smaller


2023/08/01 16:00:29 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/tropical_fish.png.br /tmp/work/dist/images/basic/tropical_fish.png
2023/08/01 16:00:29 br /tmp/work/dist/images/basic/tropical_fish.png -> /output/images/basic/tropical_fish.png.br
2023/08/01 16:00:29 gz /tmp/work/dist/images/basic/tropical_fish.png -> /output/images/basic/tropical_fish.png.gz
2023/08/01 16:00:29 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/two_women_holding_hands.png /tmp/work/dist/images/basic/two_women_holding_hands.png
2023/08/01 16:00:34 Optimizing /tmp/work/dist/images/basic/twisted_rightwards_arrows.png
Input size: 4313 (4K)
Result size: 4432 (4K). Percentage of original: 102.759%
Preserving original PNG since it was smaller


2023/08/01 16:00:34 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/twisted_rightwards_arrows.png.br /tmp/work/dist/images/basic/twisted_rightwards_arrows.png
2023/08/01 16:00:34 br /tmp/work/dist/images/basic/twisted_rightwards_arrows.png -> /output/images/basic/twisted_rightwards_arrows.png.br
2023/08/01 16:00:35 gz /tmp/work/dist/images/basic/twisted_rightwards_arrows.png -> /output/images/basic/twisted_rightwards_arrows.png.gz
2023/08/01 16:00:35 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/two.png /tmp/work/dist/images/basic/two.png
2023/08/01 16:00:35 Optimizing /tmp/work/dist/images/basic/two_men_holding_hands.png
Input size: 6994 (6K)
Result size: 7073 (6K). Percentage of original: 101.130%
Preserving original PNG since it was smaller


2023/08/01 16:00:35 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/two_men_holding_hands.png.br /tmp/work/dist/images/basic/two_men_holding_hands.png
2023/08/01 16:00:35 br /tmp/work/dist/images/basic/two_men_holding_hands.png -> /output/images/basic/two_men_holding_hands.png.br
2023/08/01 16:00:35 gz /tmp/work/dist/images/basic/two_men_holding_hands.png -> /output/images/basic/two_men_holding_hands.png.gz
2023/08/01 16:00:35 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/u5272.png /tmp/work/dist/images/basic/u5272.png
2023/08/01 16:00:38 Optimizing /tmp/work/dist/images/basic/tshirt.png
Input size: 4676 (4K)
Result size: 4602 (4K). Percentage of original: 98.417%
Result is smaller


2023/08/01 16:00:38 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/tshirt.png.br /tmp/work/dist/images/basic/tshirt.png
2023/08/01 16:00:38 br /tmp/work/dist/images/basic/tshirt.png -> /output/images/basic/tshirt.png.br
2023/08/01 16:00:38 gz /tmp/work/dist/images/basic/tshirt.png -> /output/images/basic/tshirt.png.gz
2023/08/01 16:00:38 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/u5408.png /tmp/work/dist/images/basic/u5408.png
2023/08/01 16:00:38 Optimizing /tmp/work/dist/images/basic/trollface.png
Input size: 4901 (4K)
Result size: 4840 (4K). Percentage of original: 98.755%
Result is smaller


2023/08/01 16:00:38 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/trollface.png.br /tmp/work/dist/images/basic/trollface.png
2023/08/01 16:00:38 br /tmp/work/dist/images/basic/trollface.png -> /output/images/basic/trollface.png.br
2023/08/01 16:00:38 gz /tmp/work/dist/images/basic/trollface.png -> /output/images/basic/trollface.png.gz
2023/08/01 16:00:38 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/u55b6.png /tmp/work/dist/images/basic/u55b6.png
2023/08/01 16:00:38 Optimizing /tmp/work/dist/images/basic/tv.png
Input size: 5242 (5K)
Result size: 5257 (5K). Percentage of original: 100.286%
Preserving original PNG since it was smaller


2023/08/01 16:00:38 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/tv.png.br /tmp/work/dist/images/basic/tv.png
2023/08/01 16:00:39 Optimizing /tmp/work/dist/images/basic/u5272.png
Input size: 4533 (4K)
Result size: 4522 (4K). Percentage of original: 99.757%
Result is smaller


2023/08/01 16:00:39 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/u5272.png.br /tmp/work/dist/images/basic/u5272.png
2023/08/01 16:00:39 Optimizing /tmp/work/dist/images/basic/two_hearts.png
Input size: 3565 (3K)
Result size: 3508 (3K). Percentage of original: 98.401%
Result is smaller


2023/08/01 16:00:39 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/two_hearts.png.br /tmp/work/dist/images/basic/two_hearts.png
2023/08/01 16:00:39 br /tmp/work/dist/images/basic/u5272.png -> /output/images/basic/u5272.png.br
2023/08/01 16:00:39 gz /tmp/work/dist/images/basic/u5272.png -> /output/images/basic/u5272.png.gz
2023/08/01 16:00:39 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/u6307.png /tmp/work/dist/images/basic/u6307.png
2023/08/01 16:00:39 br /tmp/work/dist/images/basic/two_hearts.png -> /output/images/basic/two_hearts.png.br
2023/08/01 16:00:39 br /tmp/work/dist/images/basic/tv.png -> /output/images/basic/tv.png.br
2023/08/01 16:00:39 gz /tmp/work/dist/images/basic/two_hearts.png -> /output/images/basic/two_hearts.png.gz
2023/08/01 16:00:39 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/u6708.png /tmp/work/dist/images/basic/u6708.png
2023/08/01 16:00:39 gz /tmp/work/dist/images/basic/tv.png -> /output/images/basic/tv.png.gz
2023/08/01 16:00:39 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/u6709.png /tmp/work/dist/images/basic/u6709.png
2023/08/01 16:00:41 Optimizing /tmp/work/dist/images/basic/turtle.png
Input size: 5336 (5K)
Result size: 5338 (5K). Percentage of original: 100.037%
Preserving original PNG since it was smaller


2023/08/01 16:00:41 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/turtle.png.br /tmp/work/dist/images/basic/turtle.png
2023/08/01 16:00:41 br /tmp/work/dist/images/basic/turtle.png -> /output/images/basic/turtle.png.br
2023/08/01 16:00:41 gz /tmp/work/dist/images/basic/turtle.png -> /output/images/basic/turtle.png.gz
2023/08/01 16:00:42 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/u6e80.png /tmp/work/dist/images/basic/u6e80.png
2023/08/01 16:00:42 Optimizing /tmp/work/dist/images/basic/two_women_holding_hands.png
Input size: 7633 (7K)
Result size: 7692 (7K). Percentage of original: 100.773%
Preserving original PNG since it was smaller


2023/08/01 16:00:42 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/two_women_holding_hands.png.br /tmp/work/dist/images/basic/two_women_holding_hands.png
2023/08/01 16:00:42 br /tmp/work/dist/images/basic/two_women_holding_hands.png -> /output/images/basic/two_women_holding_hands.png.br
2023/08/01 16:00:42 gz /tmp/work/dist/images/basic/two_women_holding_hands.png -> /output/images/basic/two_women_holding_hands.png.gz
2023/08/01 16:00:42 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/u7121.png /tmp/work/dist/images/basic/u7121.png
2023/08/01 16:00:47 Optimizing /tmp/work/dist/images/basic/two.png
Input size: 3518 (3K)
Result size: 3518 (3K). Percentage of original: 100.000%
Result has exact same size


2023/08/01 16:00:47 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/two.png.br /tmp/work/dist/images/basic/two.png
2023/08/01 16:00:47 br /tmp/work/dist/images/basic/two.png -> /output/images/basic/two.png.br
2023/08/01 16:00:47 gz /tmp/work/dist/images/basic/two.png -> /output/images/basic/two.png.gz
2023/08/01 16:00:47 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/u7533.png /tmp/work/dist/images/basic/u7533.png
2023/08/01 16:00:47 Optimizing /tmp/work/dist/images/basic/u5408.png
Input size: 3890 (3K)
Result size: 4045 (3K). Percentage of original: 103.985%
Preserving original PNG since it was smaller


2023/08/01 16:00:47 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/u5408.png.br /tmp/work/dist/images/basic/u5408.png
2023/08/01 16:00:47 br /tmp/work/dist/images/basic/u5408.png -> /output/images/basic/u5408.png.br
2023/08/01 16:00:47 gz /tmp/work/dist/images/basic/u5408.png -> /output/images/basic/u5408.png.gz
2023/08/01 16:00:47 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/u7981.png /tmp/work/dist/images/basic/u7981.png
2023/08/01 16:00:48 Optimizing /tmp/work/dist/images/basic/u6307.png
Input size: 4103 (4K)
Result size: 4068 (3K). Percentage of original: 99.147%
Result is smaller


2023/08/01 16:00:48 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/u6307.png.br /tmp/work/dist/images/basic/u6307.png
2023/08/01 16:00:48 br /tmp/work/dist/images/basic/u6307.png -> /output/images/basic/u6307.png.br
2023/08/01 16:00:48 gz /tmp/work/dist/images/basic/u6307.png -> /output/images/basic/u6307.png.gz
2023/08/01 16:00:48 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/u7a7a.png /tmp/work/dist/images/basic/u7a7a.png
2023/08/01 16:00:50 Optimizing /tmp/work/dist/images/basic/u55b6.png
Input size: 3411 (3K)
Result size: 3363 (3K). Percentage of original: 98.593%
Result is smaller


2023/08/01 16:00:50 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/u55b6.png.br /tmp/work/dist/images/basic/u55b6.png
2023/08/01 16:00:50 br /tmp/work/dist/images/basic/u55b6.png -> /output/images/basic/u55b6.png.br
2023/08/01 16:00:50 gz /tmp/work/dist/images/basic/u55b6.png -> /output/images/basic/u55b6.png.gz
2023/08/01 16:00:50 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/uk.png /tmp/work/dist/images/basic/uk.png
2023/08/01 16:00:50 Optimizing /tmp/work/dist/images/basic/u6709.png
Input size: 3198 (3K)
Result size: 3146 (3K). Percentage of original: 98.374%
Result is smaller


2023/08/01 16:00:50 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/u6709.png.br /tmp/work/dist/images/basic/u6709.png
2023/08/01 16:00:50 br /tmp/work/dist/images/basic/u6709.png -> /output/images/basic/u6709.png.br
2023/08/01 16:00:50 gz /tmp/work/dist/images/basic/u6709.png -> /output/images/basic/u6709.png.gz
2023/08/01 16:00:50 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/umbrella.png /tmp/work/dist/images/basic/umbrella.png
2023/08/01 16:00:50 Optimizing /tmp/work/dist/images/basic/u6708.png
Input size: 3011 (2K)
Result size: 2945 (2K). Percentage of original: 97.808%
Result is smaller


2023/08/01 16:00:50 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/u6708.png.br /tmp/work/dist/images/basic/u6708.png
2023/08/01 16:00:50 br /tmp/work/dist/images/basic/u6708.png -> /output/images/basic/u6708.png.br
2023/08/01 16:00:50 gz /tmp/work/dist/images/basic/u6708.png -> /output/images/basic/u6708.png.gz
2023/08/01 16:00:50 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/unamused.png /tmp/work/dist/images/basic/unamused.png
2023/08/01 16:00:53 Optimizing /tmp/work/dist/images/basic/u6e80.png
Input size: 4419 (4K)
Result size: 4396 (4K). Percentage of original: 99.480%
Result is smaller


2023/08/01 16:00:53 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/u6e80.png.br /tmp/work/dist/images/basic/u6e80.png
2023/08/01 16:00:53 br /tmp/work/dist/images/basic/u6e80.png -> /output/images/basic/u6e80.png.br
2023/08/01 16:00:53 gz /tmp/work/dist/images/basic/u6e80.png -> /output/images/basic/u6e80.png.gz
2023/08/01 16:00:53 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/underage.png /tmp/work/dist/images/basic/underage.png
2023/08/01 16:00:53 Optimizing /tmp/work/dist/images/basic/u7a7a.png
Input size: 4180 (4K)
Result size: 4178 (4K). Percentage of original: 99.952%
Result is smaller


2023/08/01 16:00:53 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/u7a7a.png.br /tmp/work/dist/images/basic/u7a7a.png
2023/08/01 16:00:53 br /tmp/work/dist/images/basic/u7a7a.png -> /output/images/basic/u7a7a.png.br
2023/08/01 16:00:53 gz /tmp/work/dist/images/basic/u7a7a.png -> /output/images/basic/u7a7a.png.gz
2023/08/01 16:00:53 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/unlock.png /tmp/work/dist/images/basic/unlock.png
2023/08/01 16:00:54 Optimizing /tmp/work/dist/images/basic/u7981.png
Input size: 5175 (5K)
Result size: 5335 (5K). Percentage of original: 103.092%
Preserving original PNG since it was smaller


2023/08/01 16:00:54 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/u7981.png.br /tmp/work/dist/images/basic/u7981.png
2023/08/01 16:00:55 br /tmp/work/dist/images/basic/u7981.png -> /output/images/basic/u7981.png.br
2023/08/01 16:00:55 gz /tmp/work/dist/images/basic/u7981.png -> /output/images/basic/u7981.png.gz
2023/08/01 16:00:55 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/up.png /tmp/work/dist/images/basic/up.png
2023/08/01 16:00:58 Optimizing /tmp/work/dist/images/basic/u7533.png
Input size: 3048 (2K)
Result size: 3033 (2K). Percentage of original: 99.508%
Result is smaller


2023/08/01 16:00:58 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/u7533.png.br /tmp/work/dist/images/basic/u7533.png
2023/08/01 16:00:58 br /tmp/work/dist/images/basic/u7533.png -> /output/images/basic/u7533.png.br
2023/08/01 16:00:58 gz /tmp/work/dist/images/basic/u7533.png -> /output/images/basic/u7533.png.gz
2023/08/01 16:00:58 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/us.png /tmp/work/dist/images/basic/us.png
2023/08/01 16:00:59 Optimizing /tmp/work/dist/images/basic/u7121.png
Input size: 3942 (3K)
Result size: 3922 (3K). Percentage of original: 99.493%
Result is smaller


2023/08/01 16:00:59 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/u7121.png.br /tmp/work/dist/images/basic/u7121.png
2023/08/01 16:00:59 br /tmp/work/dist/images/basic/u7121.png -> /output/images/basic/u7121.png.br
2023/08/01 16:00:59 gz /tmp/work/dist/images/basic/u7121.png -> /output/images/basic/u7121.png.gz
2023/08/01 16:00:59 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/v.png /tmp/work/dist/images/basic/v.png
2023/08/01 16:00:59 Optimizing /tmp/work/dist/images/basic/umbrella.png
Input size: 4745 (4K)
Result size: 4787 (4K). Percentage of original: 100.885%
Preserving original PNG since it was smaller


2023/08/01 16:00:59 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/umbrella.png.br /tmp/work/dist/images/basic/umbrella.png
2023/08/01 16:01:00 br /tmp/work/dist/images/basic/umbrella.png -> /output/images/basic/umbrella.png.br
2023/08/01 16:01:00 gz /tmp/work/dist/images/basic/umbrella.png -> /output/images/basic/umbrella.png.gz
2023/08/01 16:01:00 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/vertical_traffic_light.png /tmp/work/dist/images/basic/vertical_traffic_light.png
2023/08/01 16:01:02 Optimizing /tmp/work/dist/images/basic/unamused.png
Input size: 5315 (5K)
Result size: 5083 (4K). Percentage of original: 95.635%
Result is smaller


2023/08/01 16:01:02 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/unamused.png.br /tmp/work/dist/images/basic/unamused.png
2023/08/01 16:01:03 br /tmp/work/dist/images/basic/unamused.png -> /output/images/basic/unamused.png.br
2023/08/01 16:01:03 gz /tmp/work/dist/images/basic/unamused.png -> /output/images/basic/unamused.png.gz
2023/08/01 16:01:03 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/vhs.png /tmp/work/dist/images/basic/vhs.png
2023/08/01 16:01:04 Optimizing /tmp/work/dist/images/basic/underage.png
Input size: 5722 (5K)
Result size: 5745 (5K). Percentage of original: 100.402%
Preserving original PNG since it was smaller


2023/08/01 16:01:04 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/underage.png.br /tmp/work/dist/images/basic/underage.png
2023/08/01 16:01:04 br /tmp/work/dist/images/basic/underage.png -> /output/images/basic/underage.png.br
2023/08/01 16:01:04 gz /tmp/work/dist/images/basic/underage.png -> /output/images/basic/underage.png.gz
2023/08/01 16:01:04 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/vibration_mode.png /tmp/work/dist/images/basic/vibration_mode.png
2023/08/01 16:01:05 Optimizing /tmp/work/dist/images/basic/up.png
Input size: 3721 (3K)
Result size: 3711 (3K). Percentage of original: 99.731%
Result is smaller


2023/08/01 16:01:05 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/up.png.br /tmp/work/dist/images/basic/up.png
2023/08/01 16:01:05 br /tmp/work/dist/images/basic/up.png -> /output/images/basic/up.png.br
2023/08/01 16:01:05 gz /tmp/work/dist/images/basic/up.png -> /output/images/basic/up.png.gz
2023/08/01 16:01:05 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/video_camera.png /tmp/work/dist/images/basic/video_camera.png
2023/08/01 16:01:06 Optimizing /tmp/work/dist/images/basic/us.png
Input size: 6285 (6K)
Result size: 6186 (6K). Percentage of original: 98.425%
Result is smaller


2023/08/01 16:01:06 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/us.png.br /tmp/work/dist/images/basic/us.png
2023/08/01 16:01:06 Optimizing /tmp/work/dist/images/basic/uk.png
Input size: 5894 (5K)
Result size: 5849 (5K). Percentage of original: 99.237%
Result is smaller


2023/08/01 16:01:06 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/uk.png.br /tmp/work/dist/images/basic/uk.png
2023/08/01 16:01:06 br /tmp/work/dist/images/basic/us.png -> /output/images/basic/us.png.br
2023/08/01 16:01:06 gz /tmp/work/dist/images/basic/us.png -> /output/images/basic/us.png.gz
2023/08/01 16:01:06 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/video_game.png /tmp/work/dist/images/basic/video_game.png
2023/08/01 16:01:06 br /tmp/work/dist/images/basic/uk.png -> /output/images/basic/uk.png.br
2023/08/01 16:01:06 gz /tmp/work/dist/images/basic/uk.png -> /output/images/basic/uk.png.gz
2023/08/01 16:01:06 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/violin.png /tmp/work/dist/images/basic/violin.png
2023/08/01 16:01:09 Optimizing /tmp/work/dist/images/basic/unlock.png
Input size: 3551 (3K)
Result size: 3604 (3K). Percentage of original: 101.493%
Preserving original PNG since it was smaller


2023/08/01 16:01:09 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/unlock.png.br /tmp/work/dist/images/basic/unlock.png
2023/08/01 16:01:09 br /tmp/work/dist/images/basic/unlock.png -> /output/images/basic/unlock.png.br
2023/08/01 16:01:09 gz /tmp/work/dist/images/basic/unlock.png -> /output/images/basic/unlock.png.gz
2023/08/01 16:01:09 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/virgo.png /tmp/work/dist/images/basic/virgo.png
2023/08/01 16:01:10 Optimizing /tmp/work/dist/images/basic/vertical_traffic_light.png
Input size: 3422 (3K)
Result size: 3361 (3K). Percentage of original: 98.217%
Result is smaller


2023/08/01 16:01:10 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/vertical_traffic_light.png.br /tmp/work/dist/images/basic/vertical_traffic_light.png
2023/08/01 16:01:10 br /tmp/work/dist/images/basic/vertical_traffic_light.png -> /output/images/basic/vertical_traffic_light.png.br
2023/08/01 16:01:10 gz /tmp/work/dist/images/basic/vertical_traffic_light.png -> /output/images/basic/vertical_traffic_light.png.gz
2023/08/01 16:01:10 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/volcano.png /tmp/work/dist/images/basic/volcano.png
2023/08/01 16:01:12 Optimizing /tmp/work/dist/images/basic/v.png
Input size: 4669 (4K)
Result size: 4674 (4K). Percentage of original: 100.107%
Preserving original PNG since it was smaller


2023/08/01 16:01:12 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/v.png.br /tmp/work/dist/images/basic/v.png
2023/08/01 16:01:13 br /tmp/work/dist/images/basic/v.png -> /output/images/basic/v.png.br
2023/08/01 16:01:13 gz /tmp/work/dist/images/basic/v.png -> /output/images/basic/v.png.gz
2023/08/01 16:01:13 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/vs.png /tmp/work/dist/images/basic/vs.png
2023/08/01 16:01:14 Optimizing /tmp/work/dist/images/basic/video_camera.png
Input size: 5090 (4K)
Result size: 5063 (4K). Percentage of original: 99.470%
Result is smaller


2023/08/01 16:01:14 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/video_camera.png.br /tmp/work/dist/images/basic/video_camera.png
2023/08/01 16:01:14 br /tmp/work/dist/images/basic/video_camera.png -> /output/images/basic/video_camera.png.br
2023/08/01 16:01:14 gz /tmp/work/dist/images/basic/video_camera.png -> /output/images/basic/video_camera.png.gz
2023/08/01 16:01:14 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/walking.png /tmp/work/dist/images/basic/walking.png
2023/08/01 16:01:15 Optimizing /tmp/work/dist/images/basic/violin.png
Input size: 4915 (4K)
Result size: 5071 (4K). Percentage of original: 103.174%
Preserving original PNG since it was smaller


2023/08/01 16:01:15 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/violin.png.br /tmp/work/dist/images/basic/violin.png
2023/08/01 16:01:15 br /tmp/work/dist/images/basic/violin.png -> /output/images/basic/violin.png.br
2023/08/01 16:01:15 gz /tmp/work/dist/images/basic/violin.png -> /output/images/basic/violin.png.gz
2023/08/01 16:01:15 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/waning_crescent_moon.png /tmp/work/dist/images/basic/waning_crescent_moon.png
2023/08/01 16:01:20 Optimizing /tmp/work/dist/images/basic/volcano.png
Input size: 6167 (6K)
Result size: 6137 (5K). Percentage of original: 99.514%
Result is smaller


2023/08/01 16:01:20 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/volcano.png.br /tmp/work/dist/images/basic/volcano.png
2023/08/01 16:01:20 br /tmp/work/dist/images/basic/volcano.png -> /output/images/basic/volcano.png.br
2023/08/01 16:01:20 gz /tmp/work/dist/images/basic/volcano.png -> /output/images/basic/volcano.png.gz
2023/08/01 16:01:20 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/waning_gibbous_moon.png /tmp/work/dist/images/basic/waning_gibbous_moon.png
2023/08/01 16:01:20 Optimizing /tmp/work/dist/images/basic/vibration_mode.png
Input size: 3906 (3K)
Result size: 3822 (3K). Percentage of original: 97.849%
Result is smaller


2023/08/01 16:01:20 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/vibration_mode.png.br /tmp/work/dist/images/basic/vibration_mode.png
2023/08/01 16:01:20 br /tmp/work/dist/images/basic/vibration_mode.png -> /output/images/basic/vibration_mode.png.br
2023/08/01 16:01:20 gz /tmp/work/dist/images/basic/vibration_mode.png -> /output/images/basic/vibration_mode.png.gz
2023/08/01 16:01:20 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/warning.png /tmp/work/dist/images/basic/warning.png
2023/08/01 16:01:20 Optimizing /tmp/work/dist/images/basic/vhs.png
Input size: 3145 (3K)
Result size: 2970 (2K). Percentage of original: 94.436%
Result is smaller


2023/08/01 16:01:20 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/vhs.png.br /tmp/work/dist/images/basic/vhs.png
2023/08/01 16:01:20 br /tmp/work/dist/images/basic/vhs.png -> /output/images/basic/vhs.png.br
2023/08/01 16:01:20 gz /tmp/work/dist/images/basic/vhs.png -> /output/images/basic/vhs.png.gz
2023/08/01 16:01:20 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/watch.png /tmp/work/dist/images/basic/watch.png
2023/08/01 16:01:22 Optimizing /tmp/work/dist/images/basic/virgo.png
Input size: 4869 (4K)
Result size: 4724 (4K). Percentage of original: 97.022%
Result is smaller


2023/08/01 16:01:22 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/virgo.png.br /tmp/work/dist/images/basic/virgo.png
2023/08/01 16:01:22 br /tmp/work/dist/images/basic/virgo.png -> /output/images/basic/virgo.png.br
2023/08/01 16:01:22 gz /tmp/work/dist/images/basic/virgo.png -> /output/images/basic/virgo.png.gz
2023/08/01 16:01:22 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/water_buffalo.png /tmp/work/dist/images/basic/water_buffalo.png
2023/08/01 16:01:22 Optimizing /tmp/work/dist/images/basic/video_game.png
Input size: 4947 (4K)
Result size: 4971 (4K). Percentage of original: 100.485%
Preserving original PNG since it was smaller


2023/08/01 16:01:22 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/video_game.png.br /tmp/work/dist/images/basic/video_game.png
2023/08/01 16:01:22 br /tmp/work/dist/images/basic/video_game.png -> /output/images/basic/video_game.png.br
2023/08/01 16:01:22 gz /tmp/work/dist/images/basic/video_game.png -> /output/images/basic/video_game.png.gz
2023/08/01 16:01:22 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/watermelon.png /tmp/work/dist/images/basic/watermelon.png
2023/08/01 16:01:24 Optimizing /tmp/work/dist/images/basic/walking.png
Input size: 2468 (2K)
Result size: 2533 (2K). Percentage of original: 102.634%
Preserving original PNG since it was smaller


2023/08/01 16:01:24 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/walking.png.br /tmp/work/dist/images/basic/walking.png
2023/08/01 16:01:24 br /tmp/work/dist/images/basic/walking.png -> /output/images/basic/walking.png.br
2023/08/01 16:01:24 gz /tmp/work/dist/images/basic/walking.png -> /output/images/basic/walking.png.gz
2023/08/01 16:01:24 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/wave.png /tmp/work/dist/images/basic/wave.png
2023/08/01 16:01:25 Optimizing /tmp/work/dist/images/basic/waning_crescent_moon.png
Input size: 5885 (5K)
Result size: 5952 (5K). Percentage of original: 101.138%
Preserving original PNG since it was smaller


2023/08/01 16:01:25 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/waning_crescent_moon.png.br /tmp/work/dist/images/basic/waning_crescent_moon.png
2023/08/01 16:01:25 br /tmp/work/dist/images/basic/waning_crescent_moon.png -> /output/images/basic/waning_crescent_moon.png.br
2023/08/01 16:01:25 gz /tmp/work/dist/images/basic/waning_crescent_moon.png -> /output/images/basic/waning_crescent_moon.png.gz
2023/08/01 16:01:25 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/wavy_dash.png /tmp/work/dist/images/basic/wavy_dash.png
2023/08/01 16:01:29 Optimizing /tmp/work/dist/images/basic/vs.png
Input size: 3424 (3K)
Result size: 3369 (3K). Percentage of original: 98.394%
Result is smaller


2023/08/01 16:01:29 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/vs.png.br /tmp/work/dist/images/basic/vs.png
2023/08/01 16:01:29 br /tmp/work/dist/images/basic/vs.png -> /output/images/basic/vs.png.br
2023/08/01 16:01:29 gz /tmp/work/dist/images/basic/vs.png -> /output/images/basic/vs.png.gz
2023/08/01 16:01:29 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/waxing_crescent_moon.png /tmp/work/dist/images/basic/waxing_crescent_moon.png
2023/08/01 16:01:29 Optimizing /tmp/work/dist/images/basic/warning.png
Input size: 3173 (3K)
Result size: 3079 (3K). Percentage of original: 97.038%
Result is smaller


2023/08/01 16:01:29 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/warning.png.br /tmp/work/dist/images/basic/warning.png
2023/08/01 16:01:29 br /tmp/work/dist/images/basic/warning.png -> /output/images/basic/warning.png.br
2023/08/01 16:01:29 gz /tmp/work/dist/images/basic/warning.png -> /output/images/basic/warning.png.gz
2023/08/01 16:01:29 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/waxing_gibbous_moon.png /tmp/work/dist/images/basic/waxing_gibbous_moon.png
2023/08/01 16:01:30 Optimizing /tmp/work/dist/images/basic/water_buffalo.png
Input size: 4774 (4K)
Result size: 4781 (4K). Percentage of original: 100.147%
Preserving original PNG since it was smaller


2023/08/01 16:01:30 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/water_buffalo.png.br /tmp/work/dist/images/basic/water_buffalo.png
2023/08/01 16:01:30 br /tmp/work/dist/images/basic/water_buffalo.png -> /output/images/basic/water_buffalo.png.br
2023/08/01 16:01:30 gz /tmp/work/dist/images/basic/water_buffalo.png -> /output/images/basic/water_buffalo.png.gz
2023/08/01 16:01:30 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/wc.png /tmp/work/dist/images/basic/wc.png
2023/08/01 16:01:32 Optimizing /tmp/work/dist/images/basic/watermelon.png
Input size: 5501 (5K)
Result size: 5573 (5K). Percentage of original: 101.309%
Preserving original PNG since it was smaller


2023/08/01 16:01:32 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/watermelon.png.br /tmp/work/dist/images/basic/watermelon.png
2023/08/01 16:01:32 Optimizing /tmp/work/dist/images/basic/waning_gibbous_moon.png
Input size: 6443 (6K)
Result size: 6560 (6K). Percentage of original: 101.816%
Preserving original PNG since it was smaller


2023/08/01 16:01:32 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/waning_gibbous_moon.png.br /tmp/work/dist/images/basic/waning_gibbous_moon.png
2023/08/01 16:01:32 br /tmp/work/dist/images/basic/watermelon.png -> /output/images/basic/watermelon.png.br
2023/08/01 16:01:32 gz /tmp/work/dist/images/basic/watermelon.png -> /output/images/basic/watermelon.png.gz
2023/08/01 16:01:32 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/weary.png /tmp/work/dist/images/basic/weary.png
2023/08/01 16:01:32 br /tmp/work/dist/images/basic/waning_gibbous_moon.png -> /output/images/basic/waning_gibbous_moon.png.br
2023/08/01 16:01:32 gz /tmp/work/dist/images/basic/waning_gibbous_moon.png -> /output/images/basic/waning_gibbous_moon.png.gz
2023/08/01 16:01:32 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/wedding.png /tmp/work/dist/images/basic/wedding.png
2023/08/01 16:01:34 Optimizing /tmp/work/dist/images/basic/wave.png
Input size: 5046 (4K)
Result size: 5114 (4K). Percentage of original: 101.348%
Preserving original PNG since it was smaller


2023/08/01 16:01:34 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/wave.png.br /tmp/work/dist/images/basic/wave.png
2023/08/01 16:01:34 br /tmp/work/dist/images/basic/wave.png -> /output/images/basic/wave.png.br
2023/08/01 16:01:34 gz /tmp/work/dist/images/basic/wave.png -> /output/images/basic/wave.png.gz
2023/08/01 16:01:34 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/whale.png /tmp/work/dist/images/basic/whale.png
2023/08/01 16:01:35 Optimizing /tmp/work/dist/images/basic/watch.png
Input size: 5189 (5K)
Result size: 5306 (5K). Percentage of original: 102.255%
Preserving original PNG since it was smaller


2023/08/01 16:01:35 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/watch.png.br /tmp/work/dist/images/basic/watch.png
2023/08/01 16:01:35 br /tmp/work/dist/images/basic/watch.png -> /output/images/basic/watch.png.br
2023/08/01 16:01:35 gz /tmp/work/dist/images/basic/watch.png -> /output/images/basic/watch.png.gz
2023/08/01 16:01:35 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/whale2.png /tmp/work/dist/images/basic/whale2.png
2023/08/01 16:01:40 Optimizing /tmp/work/dist/images/basic/waxing_gibbous_moon.png
Input size: 6357 (6K)
Result size: 6451 (6K). Percentage of original: 101.479%
Preserving original PNG since it was smaller


2023/08/01 16:01:40 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/waxing_gibbous_moon.png.br /tmp/work/dist/images/basic/waxing_gibbous_moon.png
2023/08/01 16:01:41 br /tmp/work/dist/images/basic/waxing_gibbous_moon.png -> /output/images/basic/waxing_gibbous_moon.png.br
2023/08/01 16:01:41 gz /tmp/work/dist/images/basic/waxing_gibbous_moon.png -> /output/images/basic/waxing_gibbous_moon.png.gz
2023/08/01 16:01:41 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/wheelchair.png /tmp/work/dist/images/basic/wheelchair.png
2023/08/01 16:01:41 Optimizing /tmp/work/dist/images/basic/waxing_crescent_moon.png
Input size: 6198 (6K)
Result size: 6354 (6K). Percentage of original: 102.517%
Preserving original PNG since it was smaller


2023/08/01 16:01:41 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/waxing_crescent_moon.png.br /tmp/work/dist/images/basic/waxing_crescent_moon.png
2023/08/01 16:01:42 br /tmp/work/dist/images/basic/waxing_crescent_moon.png -> /output/images/basic/waxing_crescent_moon.png.br
2023/08/01 16:01:42 gz /tmp/work/dist/images/basic/waxing_crescent_moon.png -> /output/images/basic/waxing_crescent_moon.png.gz
2023/08/01 16:01:42 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/white_check_mark.png /tmp/work/dist/images/basic/white_check_mark.png
2023/08/01 16:01:42 Optimizing /tmp/work/dist/images/basic/weary.png
Input size: 6279 (6K)
Result size: 6382 (6K). Percentage of original: 101.640%
Preserving original PNG since it was smaller


2023/08/01 16:01:42 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/weary.png.br /tmp/work/dist/images/basic/weary.png
2023/08/01 16:01:42 br /tmp/work/dist/images/basic/weary.png -> /output/images/basic/weary.png.br
2023/08/01 16:01:42 gz /tmp/work/dist/images/basic/weary.png -> /output/images/basic/weary.png.gz
2023/08/01 16:01:42 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/white_circle.png /tmp/work/dist/images/basic/white_circle.png
2023/08/01 16:01:43 Optimizing /tmp/work/dist/images/basic/wedding.png
Input size: 5847 (5K)
Result size: 5831 (5K). Percentage of original: 99.726%
Result is smaller


2023/08/01 16:01:43 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/wedding.png.br /tmp/work/dist/images/basic/wedding.png
2023/08/01 16:01:43 br /tmp/work/dist/images/basic/wedding.png -> /output/images/basic/wedding.png.br
2023/08/01 16:01:43 gz /tmp/work/dist/images/basic/wedding.png -> /output/images/basic/wedding.png.gz
2023/08/01 16:01:43 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/white_flower.png /tmp/work/dist/images/basic/white_flower.png
2023/08/01 16:01:44 Optimizing /tmp/work/dist/images/basic/whale.png
Input size: 4940 (4K)
Result size: 4933 (4K). Percentage of original: 99.858%
Result is smaller


2023/08/01 16:01:44 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/whale.png.br /tmp/work/dist/images/basic/whale.png
2023/08/01 16:01:44 br /tmp/work/dist/images/basic/whale.png -> /output/images/basic/whale.png.br
2023/08/01 16:01:44 gz /tmp/work/dist/images/basic/whale.png -> /output/images/basic/whale.png.gz
2023/08/01 16:01:44 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/white_large_square.png /tmp/work/dist/images/basic/white_large_square.png
2023/08/01 16:01:44 Optimizing /tmp/work/dist/images/basic/wc.png
Input size: 4088 (3K)
Result size: 4111 (4K). Percentage of original: 100.563%
Preserving original PNG since it was smaller


2023/08/01 16:01:44 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/wc.png.br /tmp/work/dist/images/basic/wc.png
2023/08/01 16:01:45 br /tmp/work/dist/images/basic/wc.png -> /output/images/basic/wc.png.br
2023/08/01 16:01:45 gz /tmp/work/dist/images/basic/wc.png -> /output/images/basic/wc.png.gz
2023/08/01 16:01:45 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/white_medium_small_square.png /tmp/work/dist/images/basic/white_medium_small_square.png
2023/08/01 16:01:46 Optimizing /tmp/work/dist/images/basic/whale2.png
Input size: 5944 (5K)
Result size: 5989 (5K). Percentage of original: 100.757%
Preserving original PNG since it was smaller


2023/08/01 16:01:46 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/whale2.png.br /tmp/work/dist/images/basic/whale2.png
2023/08/01 16:01:46 br /tmp/work/dist/images/basic/whale2.png -> /output/images/basic/whale2.png.br
2023/08/01 16:01:46 gz /tmp/work/dist/images/basic/whale2.png -> /output/images/basic/whale2.png.gz
2023/08/01 16:01:46 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/white_medium_square.png /tmp/work/dist/images/basic/white_medium_square.png
2023/08/01 16:01:50 Optimizing /tmp/work/dist/images/basic/white_flower.png
Input size: 4391 (4K)
Result size: 4513 (4K). Percentage of original: 102.778%
Preserving original PNG since it was smaller


2023/08/01 16:01:50 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/white_flower.png.br /tmp/work/dist/images/basic/white_flower.png
2023/08/01 16:01:51 br /tmp/work/dist/images/basic/white_flower.png -> /output/images/basic/white_flower.png.br
2023/08/01 16:01:51 gz /tmp/work/dist/images/basic/white_flower.png -> /output/images/basic/white_flower.png.gz
2023/08/01 16:01:51 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/white_small_square.png /tmp/work/dist/images/basic/white_small_square.png
2023/08/01 16:01:52 Optimizing /tmp/work/dist/images/basic/wheelchair.png
Input size: 4224 (4K)
Result size: 4202 (4K). Percentage of original: 99.479%
Result is smaller


2023/08/01 16:01:52 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/wheelchair.png.br /tmp/work/dist/images/basic/wheelchair.png
2023/08/01 16:01:52 br /tmp/work/dist/images/basic/wheelchair.png -> /output/images/basic/wheelchair.png.br
2023/08/01 16:01:52 gz /tmp/work/dist/images/basic/wheelchair.png -> /output/images/basic/wheelchair.png.gz
2023/08/01 16:01:52 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/white_square_button.png /tmp/work/dist/images/basic/white_square_button.png
2023/08/01 16:01:52 Optimizing /tmp/work/dist/images/basic/white_circle.png
Input size: 2477 (2K)
Result size: 2465 (2K). Percentage of original: 99.516%
Result is smaller


2023/08/01 16:01:52 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/white_circle.png.br /tmp/work/dist/images/basic/white_circle.png
2023/08/01 16:01:52 br /tmp/work/dist/images/basic/white_circle.png -> /output/images/basic/white_circle.png.br
2023/08/01 16:01:52 gz /tmp/work/dist/images/basic/white_circle.png -> /output/images/basic/white_circle.png.gz
2023/08/01 16:01:52 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/wind_chime.png /tmp/work/dist/images/basic/wind_chime.png
2023/08/01 16:01:54 Optimizing /tmp/work/dist/images/basic/white_check_mark.png
Input size: 3445 (3K)
Result size: 3407 (3K). Percentage of original: 98.897%
Result is smaller


2023/08/01 16:01:54 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/white_check_mark.png.br /tmp/work/dist/images/basic/white_check_mark.png
2023/08/01 16:01:54 br /tmp/work/dist/images/basic/white_check_mark.png -> /output/images/basic/white_check_mark.png.br
2023/08/01 16:01:54 gz /tmp/work/dist/images/basic/white_check_mark.png -> /output/images/basic/white_check_mark.png.gz
2023/08/01 16:01:54 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/wine_glass.png /tmp/work/dist/images/basic/wine_glass.png
2023/08/01 16:02:04 Optimizing /tmp/work/dist/images/basic/white_medium_square.png
Input size: 4192 (4K)
Result size: 2668 (2K). Percentage of original: 63.645%
Result is smaller


2023/08/01 16:02:04 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/white_medium_square.png.br /tmp/work/dist/images/basic/white_medium_square.png
2023/08/01 16:02:04 br /tmp/work/dist/images/basic/white_medium_square.png -> /output/images/basic/white_medium_square.png.br
2023/08/01 16:02:04 gz /tmp/work/dist/images/basic/white_medium_square.png -> /output/images/basic/white_medium_square.png.gz
2023/08/01 16:02:04 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/wink.png /tmp/work/dist/images/basic/wink.png
2023/08/01 16:02:05 Optimizing /tmp/work/dist/images/basic/wind_chime.png
Input size: 3487 (3K)
Result size: 3507 (3K). Percentage of original: 100.574%
Preserving original PNG since it was smaller


2023/08/01 16:02:05 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/wind_chime.png.br /tmp/work/dist/images/basic/wind_chime.png
2023/08/01 16:02:05 br /tmp/work/dist/images/basic/wind_chime.png -> /output/images/basic/wind_chime.png.br
2023/08/01 16:02:05 gz /tmp/work/dist/images/basic/wind_chime.png -> /output/images/basic/wind_chime.png.gz
2023/08/01 16:02:05 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/wolf.png /tmp/work/dist/images/basic/wolf.png
2023/08/01 16:02:05 Optimizing /tmp/work/dist/images/basic/wine_glass.png
Input size: 3151 (3K)
Result size: 3199 (3K). Percentage of original: 101.523%
Preserving original PNG since it was smaller


2023/08/01 16:02:05 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/wine_glass.png.br /tmp/work/dist/images/basic/wine_glass.png
2023/08/01 16:02:05 br /tmp/work/dist/images/basic/wine_glass.png -> /output/images/basic/wine_glass.png.br
2023/08/01 16:02:05 gz /tmp/work/dist/images/basic/wine_glass.png -> /output/images/basic/wine_glass.png.gz
2023/08/01 16:02:05 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/woman.png /tmp/work/dist/images/basic/woman.png
2023/08/01 16:02:13 Optimizing /tmp/work/dist/images/basic/wavy_dash.png
Input size: 696 (0K)
Result size: 843 (0K). Percentage of original: 121.121%
Preserving original PNG since it was smaller


2023/08/01 16:02:13 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/wavy_dash.png.br /tmp/work/dist/images/basic/wavy_dash.png
2023/08/01 16:02:13 br /tmp/work/dist/images/basic/wavy_dash.png -> /output/images/basic/wavy_dash.png.br
2023/08/01 16:02:13 gz /tmp/work/dist/images/basic/wavy_dash.png -> /output/images/basic/wavy_dash.png.gz
2023/08/01 16:02:13 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/womans_clothes.png /tmp/work/dist/images/basic/womans_clothes.png
2023/08/01 16:02:13 Optimizing /tmp/work/dist/images/basic/white_large_square.png
Input size: 1411 (1K)
Result size: 1286 (1K). Percentage of original: 91.141%
Result is smaller


2023/08/01 16:02:13 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/white_large_square.png.br /tmp/work/dist/images/basic/white_large_square.png
2023/08/01 16:02:13 br /tmp/work/dist/images/basic/white_large_square.png -> /output/images/basic/white_large_square.png.br
2023/08/01 16:02:13 gz /tmp/work/dist/images/basic/white_large_square.png -> /output/images/basic/white_large_square.png.gz
2023/08/01 16:02:13 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/womans_hat.png /tmp/work/dist/images/basic/womans_hat.png
2023/08/01 16:02:14 Optimizing /tmp/work/dist/images/basic/wink.png
Input size: 5253 (5K)
Result size: 5104 (4K). Percentage of original: 97.164%
Result is smaller


2023/08/01 16:02:14 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/wink.png.br /tmp/work/dist/images/basic/wink.png
2023/08/01 16:02:14 br /tmp/work/dist/images/basic/wink.png -> /output/images/basic/wink.png.br
2023/08/01 16:02:14 gz /tmp/work/dist/images/basic/wink.png -> /output/images/basic/wink.png.gz
2023/08/01 16:02:14 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/womens.png /tmp/work/dist/images/basic/womens.png
2023/08/01 16:02:16 Optimizing /tmp/work/dist/images/basic/wolf.png
Input size: 4845 (4K)
Result size: 4963 (4K). Percentage of original: 102.436%
Preserving original PNG since it was smaller


2023/08/01 16:02:16 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/wolf.png.br /tmp/work/dist/images/basic/wolf.png
2023/08/01 16:02:16 Optimizing /tmp/work/dist/images/basic/woman.png
Input size: 6895 (6K)
Result size: 6938 (6K). Percentage of original: 100.624%
Preserving original PNG since it was smaller


2023/08/01 16:02:16 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/woman.png.br /tmp/work/dist/images/basic/woman.png
2023/08/01 16:02:16 br /tmp/work/dist/images/basic/wolf.png -> /output/images/basic/wolf.png.br
2023/08/01 16:02:16 gz /tmp/work/dist/images/basic/wolf.png -> /output/images/basic/wolf.png.gz
2023/08/01 16:02:16 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/worried.png /tmp/work/dist/images/basic/worried.png
2023/08/01 16:02:16 br /tmp/work/dist/images/basic/woman.png -> /output/images/basic/woman.png.br
2023/08/01 16:02:16 gz /tmp/work/dist/images/basic/woman.png -> /output/images/basic/woman.png.gz
2023/08/01 16:02:16 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/wrench.png /tmp/work/dist/images/basic/wrench.png
2023/08/01 16:02:18 Optimizing /tmp/work/dist/images/basic/white_medium_small_square.png
Input size: 3598 (3K)
Result size: 2322 (2K). Percentage of original: 64.536%
Result is smaller


2023/08/01 16:02:18 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/white_medium_small_square.png.br /tmp/work/dist/images/basic/white_medium_small_square.png
2023/08/01 16:02:18 br /tmp/work/dist/images/basic/white_medium_small_square.png -> /output/images/basic/white_medium_small_square.png.br
2023/08/01 16:02:18 gz /tmp/work/dist/images/basic/white_medium_small_square.png -> /output/images/basic/white_medium_small_square.png.gz
2023/08/01 16:02:18 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/x.png /tmp/work/dist/images/basic/x.png
2023/08/01 16:02:19 Optimizing /tmp/work/dist/images/basic/womans_hat.png
Input size: 8101 (7K)
Result size: 8165 (7K). Percentage of original: 100.790%
Preserving original PNG since it was smaller


2023/08/01 16:02:19 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/womans_hat.png.br /tmp/work/dist/images/basic/womans_hat.png
2023/08/01 16:02:19 br /tmp/work/dist/images/basic/womans_hat.png -> /output/images/basic/womans_hat.png.br
2023/08/01 16:02:19 gz /tmp/work/dist/images/basic/womans_hat.png -> /output/images/basic/womans_hat.png.gz
2023/08/01 16:02:19 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/yellow_heart.png /tmp/work/dist/images/basic/yellow_heart.png
2023/08/01 16:02:21 Optimizing /tmp/work/dist/images/basic/white_square_button.png
Input size: 1725 (1K)
Result size: 1580 (1K). Percentage of original: 91.594%
Result is smaller


2023/08/01 16:02:21 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/white_square_button.png.br /tmp/work/dist/images/basic/white_square_button.png
2023/08/01 16:02:21 br /tmp/work/dist/images/basic/white_square_button.png -> /output/images/basic/white_square_button.png.br
2023/08/01 16:02:21 gz /tmp/work/dist/images/basic/white_square_button.png -> /output/images/basic/white_square_button.png.gz
2023/08/01 16:02:21 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/yen.png /tmp/work/dist/images/basic/yen.png
2023/08/01 16:02:24 Optimizing /tmp/work/dist/images/basic/white_small_square.png
Input size: 3068 (2K)
Result size: 2024 (1K). Percentage of original: 65.971%
Result is smaller


2023/08/01 16:02:24 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/white_small_square.png.br /tmp/work/dist/images/basic/white_small_square.png
2023/08/01 16:02:24 br /tmp/work/dist/images/basic/white_small_square.png -> /output/images/basic/white_small_square.png.br
2023/08/01 16:02:24 gz /tmp/work/dist/images/basic/white_small_square.png -> /output/images/basic/white_small_square.png.gz
2023/08/01 16:02:24 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/yum.png /tmp/work/dist/images/basic/yum.png
2023/08/01 16:02:24 Optimizing /tmp/work/dist/images/basic/worried.png
Input size: 5152 (5K)
Result size: 5081 (4K). Percentage of original: 98.622%
Result is smaller


2023/08/01 16:02:24 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/worried.png.br /tmp/work/dist/images/basic/worried.png
2023/08/01 16:02:24 Optimizing /tmp/work/dist/images/basic/womans_clothes.png
Input size: 4075 (3K)
Result size: 4125 (4K). Percentage of original: 101.227%
Preserving original PNG since it was smaller


2023/08/01 16:02:24 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/womans_clothes.png.br /tmp/work/dist/images/basic/womans_clothes.png
2023/08/01 16:02:24 br /tmp/work/dist/images/basic/worried.png -> /output/images/basic/worried.png.br
2023/08/01 16:02:24 gz /tmp/work/dist/images/basic/worried.png -> /output/images/basic/worried.png.gz
2023/08/01 16:02:24 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/zap.png /tmp/work/dist/images/basic/zap.png
2023/08/01 16:02:24 br /tmp/work/dist/images/basic/womans_clothes.png -> /output/images/basic/womans_clothes.png.br
2023/08/01 16:02:24 gz /tmp/work/dist/images/basic/womans_clothes.png -> /output/images/basic/womans_clothes.png.gz
2023/08/01 16:02:24 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/zero.png /tmp/work/dist/images/basic/zero.png
2023/08/01 16:02:26 Optimizing /tmp/work/dist/images/basic/womens.png
Input size: 3892 (3K)
Result size: 3759 (3K). Percentage of original: 96.583%
Result is smaller


2023/08/01 16:02:26 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/womens.png.br /tmp/work/dist/images/basic/womens.png
2023/08/01 16:02:26 br /tmp/work/dist/images/basic/womens.png -> /output/images/basic/womens.png.br
2023/08/01 16:02:27 gz /tmp/work/dist/images/basic/womens.png -> /output/images/basic/womens.png.gz
2023/08/01 16:02:27 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/basic/zzz.png /tmp/work/dist/images/basic/zzz.png
2023/08/01 16:02:29 Optimizing /tmp/work/dist/images/basic/wrench.png
Input size: 2775 (2K)
Result size: 2944 (2K). Percentage of original: 106.090%
Preserving original PNG since it was smaller


2023/08/01 16:02:29 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/wrench.png.br /tmp/work/dist/images/basic/wrench.png
2023/08/01 16:02:29 br /tmp/work/dist/images/basic/wrench.png -> /output/images/basic/wrench.png.br
2023/08/01 16:02:29 gz /tmp/work/dist/images/basic/wrench.png -> /output/images/basic/wrench.png.gz
2023/08/01 16:02:29 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/sprites/emojify-emoticons.png /tmp/work/dist/images/sprites/emojify-emoticons.png
2023/08/01 16:02:29 Optimizing /tmp/work/dist/images/basic/x.png
Input size: 2044 (1K)
Result size: 2154 (2K). Percentage of original: 105.382%
Preserving original PNG since it was smaller


2023/08/01 16:02:29 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/x.png.br /tmp/work/dist/images/basic/x.png
2023/08/01 16:02:29 br /tmp/work/dist/images/basic/x.png -> /output/images/basic/x.png.br
2023/08/01 16:02:29 gz /tmp/work/dist/images/basic/x.png -> /output/images/basic/x.png.gz
2023/08/01 16:02:29 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/sprites/emojify-emoticons@2x.png /tmp/work/dist/images/sprites/emojify-emoticons@2x.png
2023/08/01 16:02:32 Optimizing /tmp/work/dist/images/basic/yen.png
Input size: 4989 (4K)
Result size: 4924 (4K). Percentage of original: 98.697%
Result is smaller


2023/08/01 16:02:32 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/yen.png.br /tmp/work/dist/images/basic/yen.png
2023/08/01 16:02:32 br /tmp/work/dist/images/basic/yen.png -> /output/images/basic/yen.png.br
2023/08/01 16:02:32 gz /tmp/work/dist/images/basic/yen.png -> /output/images/basic/yen.png.gz
2023/08/01 16:02:32 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/sprites/emojify.png /tmp/work/dist/images/sprites/emojify.png
2023/08/01 16:02:34 Optimizing /tmp/work/dist/images/basic/yellow_heart.png
Input size: 4414 (4K)
Result size: 4320 (4K). Percentage of original: 97.870%
Result is smaller


2023/08/01 16:02:34 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/yellow_heart.png.br /tmp/work/dist/images/basic/yellow_heart.png
2023/08/01 16:02:35 br /tmp/work/dist/images/basic/yellow_heart.png -> /output/images/basic/yellow_heart.png.br
2023/08/01 16:02:35 gz /tmp/work/dist/images/basic/yellow_heart.png -> /output/images/basic/yellow_heart.png.gz
2023/08/01 16:02:35 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/dist/images/sprites/emojify@2x.png /tmp/work/dist/images/sprites/emojify@2x.png
2023/08/01 16:02:36 Optimizing /tmp/work/dist/images/basic/zap.png
Input size: 2233 (2K)
Result size: 2312 (2K). Percentage of original: 103.538%
Preserving original PNG since it was smaller


2023/08/01 16:02:36 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/zap.png.br /tmp/work/dist/images/basic/zap.png
2023/08/01 16:02:36 br /tmp/work/dist/images/basic/zap.png -> /output/images/basic/zap.png.br
2023/08/01 16:02:36 gz /tmp/work/dist/images/basic/zap.png -> /output/images/basic/zap.png.gz
2023/08/01 16:02:36 /tmp/work/dist/js/emojify.min.js already has corresponding compressed file
2023/08/01 16:02:36 sri /tmp/work/dist/js/emojify.js -> /output/js/emojify.js.sri
2023/08/01 16:02:36 algorithm: run /usr/bin/brotli --quality=11 --output=/output/js/emojify.js.br /tmp/work/dist/js/emojify.js
2023/08/01 16:02:36 br /tmp/work/dist/js/emojify.js -> /output/js/emojify.js.br
2023/08/01 16:02:36 gz /tmp/work/dist/js/emojify.js -> /output/js/emojify.js.gz
2023/08/01 16:02:36 /tmp/work/dist/js/emojify.min.js is already compressed
2023/08/01 16:02:36 sri /tmp/work/dist/js/emojify.min.js -> /output/js/emojify.min.js.sri
2023/08/01 16:02:36 algorithm: run /usr/bin/brotli --quality=11 --output=/output/js/emojify.min.js.br /tmp/work/dist/js/emojify.min.js
2023/08/01 16:02:37 br /tmp/work/dist/js/emojify.min.js -> /output/js/emojify.min.js.br
2023/08/01 16:02:37 gz /tmp/work/dist/js/emojify.min.js -> /output/js/emojify.min.js.gz
2023/08/01 16:02:37 Optimizing /tmp/work/dist/images/basic/zero.png
Input size: 3590 (3K)
Result size: 3496 (3K). Percentage of original: 97.382%
Result is smaller


2023/08/01 16:02:37 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/zero.png.br /tmp/work/dist/images/basic/zero.png
2023/08/01 16:02:37 br /tmp/work/dist/images/basic/zero.png -> /output/images/basic/zero.png.br
2023/08/01 16:02:37 gz /tmp/work/dist/images/basic/zero.png -> /output/images/basic/zero.png.gz
2023/08/01 16:02:40 Optimizing /tmp/work/dist/images/basic/zzz.png
Input size: 2027 (1K)
Result size: 1979 (1K). Percentage of original: 97.632%
Result is smaller


2023/08/01 16:02:40 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/zzz.png.br /tmp/work/dist/images/basic/zzz.png
2023/08/01 16:02:40 br /tmp/work/dist/images/basic/zzz.png -> /output/images/basic/zzz.png.br
2023/08/01 16:02:40 gz /tmp/work/dist/images/basic/zzz.png -> /output/images/basic/zzz.png.gz
2023/08/01 16:02:42 Optimizing /tmp/work/dist/images/basic/yum.png
Input size: 5886 (5K)
Result size: 5604 (5K). Percentage of original: 95.209%
Result is smaller


2023/08/01 16:02:42 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/basic/yum.png.br /tmp/work/dist/images/basic/yum.png
2023/08/01 16:02:42 br /tmp/work/dist/images/basic/yum.png -> /output/images/basic/yum.png.br
2023/08/01 16:02:42 gz /tmp/work/dist/images/basic/yum.png -> /output/images/basic/yum.png.gz
2023/08/01 16:03:01 Optimizing /tmp/work/dist/images/sprites/emojify-emoticons.png
Input size: 28314 (27K)
Result size: 22558 (22K). Percentage of original: 79.671%
Result is smaller


2023/08/01 16:03:01 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/sprites/emojify-emoticons.png.br /tmp/work/dist/images/sprites/emojify-emoticons.png
2023/08/01 16:03:02 br /tmp/work/dist/images/sprites/emojify-emoticons.png -> /output/images/sprites/emojify-emoticons.png.br
2023/08/01 16:03:02 gz /tmp/work/dist/images/sprites/emojify-emoticons.png -> /output/images/sprites/emojify-emoticons.png.gz
2023/08/01 16:04:38 Optimizing /tmp/work/dist/images/sprites/emojify-emoticons@2x.png
Input size: 95183 (92K)
Result size: 77477 (75K). Percentage of original: 81.398%
Result is smaller


2023/08/01 16:04:38 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/sprites/emojify-emoticons@2x.png.br /tmp/work/dist/images/sprites/emojify-emoticons@2x.png
2023/08/01 16:04:39 br /tmp/work/dist/images/sprites/emojify-emoticons@2x.png -> /output/images/sprites/emojify-emoticons@2x.png.br
2023/08/01 16:04:39 gz /tmp/work/dist/images/sprites/emojify-emoticons@2x.png -> /output/images/sprites/emojify-emoticons@2x.png.gz
2023/08/01 16:11:48 Optimizing /tmp/work/dist/images/sprites/emojify.png
Input size: 1450616 (1416K)
Result size: 1234778 (1205K). Percentage of original: 85.121%
Result is smaller


2023/08/01 16:11:48 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/sprites/emojify.png.br /tmp/work/dist/images/sprites/emojify.png
2023/08/01 16:11:50 br /tmp/work/dist/images/sprites/emojify.png -> /output/images/sprites/emojify.png.br
2023/08/01 16:11:50 gz /tmp/work/dist/images/sprites/emojify.png -> /output/images/sprites/emojify.png.gz
2023/08/01 16:34:58 Optimizing /tmp/work/dist/images/sprites/emojify@2x.png
Input size: 4607111 (4499K)
Result size: 3855896 (3765K). Percentage of original: 83.694%
Result is smaller


2023/08/01 16:34:58 algorithm: run /usr/bin/brotli --quality=11 --output=/output/images/sprites/emojify@2x.png.br /tmp/work/dist/images/sprites/emojify@2x.png
2023/08/01 16:35:05 br /tmp/work/dist/images/sprites/emojify@2x.png -> /output/images/sprites/emojify@2x.png.br
2023/08/01 16:35:05 gz /tmp/work/dist/images/sprites/emojify@2x.png -> /output/images/sprites/emojify@2x.png.gz
2023/08/01 16:35:05 processed emojify.js
