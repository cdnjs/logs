2023/06/04 18:35:40 optimizing files (Js true, Css true, Png true, Jpg true)
2023/06/04 18:35:40 /tmp/work/assets/css/argon-dashboard.css already has a compressed version: /tmp/work/assets/css/argon-dashboard.min.css
2023/06/04 18:35:40 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/assets/css/nucleo-icons.min.css /tmp/work/assets/css/nucleo-icons.css
2023/06/04 18:35:40 compress: run /node_modules/clean-css-cli/bin/cleancss --compatibility --s0 -o /tmp/work/assets/css/nucleo-svg.min.css /tmp/work/assets/css/nucleo-svg.css
2023/06/04 18:35:40 algorithm: run /usr/bin/brotli --quality=11 --output=/output/fonts/nucleo-icons.svg.br /tmp/work/assets/fonts/nucleo-icons.svg
2023/06/04 18:35:40 algorithm: run /usr/bin/brotli --quality=11 --output=/output/fonts/nucleo-icons.ttf.br /tmp/work/assets/fonts/nucleo-icons.ttf
2023/06/04 18:35:40 algorithm: run /usr/bin/brotli --quality=11 --output=/output/fonts/nucleo-icons.eot.br /tmp/work/assets/fonts/nucleo-icons.eot
2023/06/04 18:35:40 algorithm: run /usr/bin/brotli --quality=11 --output=/output/fonts/nucleo-icons.woff.br /tmp/work/assets/fonts/nucleo-icons.woff
2023/06/04 18:35:40 sri /tmp/work/assets/css/argon-dashboard.min.css -> /output/css/argon-dashboard.min.css.sri
2023/06/04 18:35:40 algorithm: run /usr/bin/brotli --quality=11 --output=/output/css/argon-dashboard.min.css.br /tmp/work/assets/css/argon-dashboard.min.css
2023/06/04 18:35:40 sri /tmp/work/assets/css/argon-dashboard.css -> /output/css/argon-dashboard.css.sri
2023/06/04 18:35:40 algorithm: run /usr/bin/brotli --quality=11 --output=/output/css/argon-dashboard.css.br /tmp/work/assets/css/argon-dashboard.css
2023/06/04 18:35:40 br /tmp/work/assets/fonts/nucleo-icons.woff -> /output/fonts/nucleo-icons.woff.br
2023/06/04 18:35:40 gz /tmp/work/assets/fonts/nucleo-icons.woff -> /output/fonts/nucleo-icons.woff.gz
2023/06/04 18:35:40 copy /tmp/work/assets/fonts/nucleo-icons.woff2 -> /output/fonts/nucleo-icons.woff2
2023/06/04 18:35:40 algorithm: run /usr/bin/brotli --quality=11 --output=/output/fonts/nucleo.eot.br /tmp/work/assets/fonts/nucleo.eot
2023/06/04 18:35:40 br /tmp/work/assets/fonts/nucleo-icons.ttf -> /output/fonts/nucleo-icons.ttf.br
2023/06/04 18:35:40 br /tmp/work/assets/fonts/nucleo-icons.eot -> /output/fonts/nucleo-icons.eot.br
2023/06/04 18:35:40 gz /tmp/work/assets/fonts/nucleo-icons.ttf -> /output/fonts/nucleo-icons.ttf.gz
2023/06/04 18:35:40 algorithm: run /usr/bin/brotli --quality=11 --output=/output/fonts/nucleo.ttf.br /tmp/work/assets/fonts/nucleo.ttf
2023/06/04 18:35:40 gz /tmp/work/assets/fonts/nucleo-icons.eot -> /output/fonts/nucleo-icons.eot.gz
2023/06/04 18:35:40 algorithm: run /usr/bin/brotli --quality=11 --output=/output/fonts/nucleo.woff.br /tmp/work/assets/fonts/nucleo.woff
2023/06/04 18:35:40 br /tmp/work/assets/fonts/nucleo.woff -> /output/fonts/nucleo.woff.br
2023/06/04 18:35:40 gz /tmp/work/assets/fonts/nucleo.woff -> /output/fonts/nucleo.woff.gz
2023/06/04 18:35:40 copy /tmp/work/assets/fonts/nucleo.woff2 -> /output/fonts/nucleo.woff2
2023/06/04 18:35:40 compress: run /usr/bin/zopflipng --iterations=60 --keepchunks=iCCP --lossy_transparent --splitting=3 -my /tmp/work/assets/img/apple-icon.png /tmp/work/assets/img/apple-icon.png
2023/06/04 18:35:40 br /tmp/work/assets/fonts/nucleo.eot -> /output/fonts/nucleo.eot.br
2023/06/04 18:35:40 gz /tmp/work/assets/fonts/nucleo.eot -> /output/fonts/nucleo.eot.gz
2023/06/04 18:35:40 compress: run /usr/bin/jpegoptim /tmp/work/assets/img/bg-profile.jpg
2023/06/04 18:35:40 br /tmp/work/assets/fonts/nucleo.ttf -> /output/fonts/nucleo.ttf.br
2023/06/04 18:35:40 gz /tmp/work/assets/fonts/nucleo.ttf -> /output/fonts/nucleo.ttf.gz
2023/06/04 18:35:40 compress: run /usr/bin/jpegoptim /tmp/work/assets/img/bg1.jpg
2023/06/04 18:35:40 /tmp/work/assets/img/bg1.jpg 1409x280 24bit P Exif XMP IPTC JFIF  [OK] 165177 --> 158429 bytes (4.09%), optimized.

2023/06/04 18:35:40 algorithm: run /usr/bin/brotli --quality=11 --output=/output/img/bg1.jpg.br /tmp/work/assets/img/bg1.jpg
2023/06/04 18:35:40 /tmp/work/assets/img/bg-profile.jpg 3543x1799 24bit N ICC JFIF  [OK] 522008 --> 522008 bytes (0.00%), skipped.

2023/06/04 18:35:40 algorithm: run /usr/bin/brotli --quality=11 --output=/output/img/bg-profile.jpg.br /tmp/work/assets/img/bg-profile.jpg
2023/06/04 18:35:40 sri /tmp/work/assets/css/nucleo-svg.min.css -> /output/css/nucleo-svg.min.css.sri
2023/06/04 18:35:40 algorithm: run /usr/bin/brotli --quality=11 --output=/output/css/nucleo-svg.min.css.br /tmp/work/assets/css/nucleo-svg.min.css
2023/06/04 18:35:40 sri /tmp/work/assets/css/nucleo-icons.min.css -> /output/css/nucleo-icons.min.css.sri
2023/06/04 18:35:40 algorithm: run /usr/bin/brotli --quality=11 --output=/output/css/nucleo-icons.min.css.br /tmp/work/assets/css/nucleo-icons.min.css
2023/06/04 18:35:40 br /tmp/work/assets/css/nucleo-svg.min.css -> /output/css/nucleo-svg.min.css.br
2023/06/04 18:35:40 gz /tmp/work/assets/css/nucleo-svg.min.css -> /output/css/nucleo-svg.min.css.gz
2023/06/04 18:35:40 sri /tmp/work/assets/css/nucleo-svg.css -> /output/css/nucleo-svg.css.sri
2023/06/04 18:35:40 algorithm: run /usr/bin/brotli --quality=11 --output=/output/css/nucleo-svg.css.br /tmp/work/assets/css/nucleo-svg.css
2023/06/04 18:35:40 br /tmp/work/assets/css/nucleo-svg.css -> /output/css/nucleo-svg.css.br
2023/06/04 18:35:40 gz /tmp/work/assets/css/nucleo-svg.css -> /output/css/nucleo-svg.css.gz
2023/06/04 18:35:40 compress: run /usr/bin/jpegoptim /tmp/work/assets/img/bruce-mars.jpg
2023/06/04 18:35:40 br /tmp/work/assets/css/nucleo-icons.min.css -> /output/css/nucleo-icons.min.css.br
2023/06/04 18:35:40 gz /tmp/work/assets/css/nucleo-icons.min.css -> /output/css/nucleo-icons.min.css.gz
2023/06/04 18:35:40 sri /tmp/work/assets/css/nucleo-icons.css -> /output/css/nucleo-icons.css.sri
2023/06/04 18:35:40 algorithm: run /usr/bin/brotli --quality=11 --output=/output/css/nucleo-icons.css.br /tmp/work/assets/css/nucleo-icons.css
2023/06/04 18:35:40 /tmp/work/assets/img/bruce-mars.jpg 800x800 24bit P JFIF  [OK] 20236 --> 21884 bytes (-8.14%), skipped.

2023/06/04 18:35:40 algorithm: run /usr/bin/brotli --quality=11 --output=/output/img/bruce-mars.jpg.br /tmp/work/assets/img/bruce-mars.jpg
2023/06/04 18:35:40 br /tmp/work/assets/css/nucleo-icons.css -> /output/css/nucleo-icons.css.br
2023/06/04 18:35:40 gz /tmp/work/assets/css/nucleo-icons.css -> /output/css/nucleo-icons.css.gz
2023/06/04 18:35:40 compress: run /usr/bin/jpegoptim /tmp/work/assets/img/carousel-1.jpg
2023/06/04 18:35:40 /tmp/work/assets/img/carousel-1.jpg 800x450 24bit P ICC JFIF  [OK] 29318 --> 30557 bytes (-4.23%), skipped.

2023/06/04 18:35:40 algorithm: run /usr/bin/brotli --quality=11 --output=/output/img/carousel-1.jpg.br /tmp/work/assets/img/carousel-1.jpg
2023/06/04 18:35:41 br /tmp/work/assets/fonts/nucleo-icons.svg -> /output/fonts/nucleo-icons.svg.br
2023/06/04 18:35:41 br /tmp/work/assets/img/bruce-mars.jpg -> /output/img/bruce-mars.jpg.br
2023/06/04 18:35:41 gz /tmp/work/assets/img/bruce-mars.jpg -> /output/img/bruce-mars.jpg.gz
2023/06/04 18:35:41 compress: run /usr/bin/jpegoptim /tmp/work/assets/img/carousel-2.jpg
2023/06/04 18:35:41 gz /tmp/work/assets/fonts/nucleo-icons.svg -> /output/fonts/nucleo-icons.svg.gz
2023/06/04 18:35:41 compress: run /usr/bin/jpegoptim /tmp/work/assets/img/carousel-3.jpg
2023/06/04 18:35:41 /tmp/work/assets/img/carousel-2.jpg 800x450 24bit P ICC JFIF  [OK] 18207 --> 18784 bytes (-3.17%), skipped.

2023/06/04 18:35:41 algorithm: run /usr/bin/brotli --quality=11 --output=/output/img/carousel-2.jpg.br /tmp/work/assets/img/carousel-2.jpg
2023/06/04 18:35:41 /tmp/work/assets/img/carousel-3.jpg 800x450 24bit P ICC JFIF  [OK] 14425 --> 15243 bytes (-5.67%), skipped.

2023/06/04 18:35:41 algorithm: run /usr/bin/brotli --quality=11 --output=/output/img/carousel-3.jpg.br /tmp/work/assets/img/carousel-3.jpg
2023/06/04 18:35:41 br /tmp/work/assets/img/carousel-3.jpg -> /output/img/carousel-3.jpg.br
2023/06/04 18:35:41 gz /tmp/work/assets/img/carousel-3.jpg -> /output/img/carousel-3.jpg.gz
2023/06/04 18:35:41 compress: run /usr/bin/jpegoptim /tmp/work/assets/img/curved-images/curved-10.jpg
2023/06/04 18:35:41 br /tmp/work/assets/img/carousel-1.jpg -> /output/img/carousel-1.jpg.br
2023/06/04 18:35:41 gz /tmp/work/assets/img/carousel-1.jpg -> /output/img/carousel-1.jpg.gz
2023/06/04 18:35:41 compress: run /usr/bin/jpegoptim /tmp/work/assets/img/curved-images/curved-11.jpg
2023/06/04 18:35:41 br /tmp/work/assets/img/carousel-2.jpg -> /output/img/carousel-2.jpg.br
2023/06/04 18:35:41 gz /tmp/work/assets/img/carousel-2.jpg -> /output/img/carousel-2.jpg.gz
2023/06/04 18:35:41 compress: run /usr/bin/jpegoptim /tmp/work/assets/img/curved-images/curved-6.jpg
2023/06/04 18:35:41 /tmp/work/assets/img/curved-images/curved-10.jpg 800x600 24bit P Exif IPTC XMP ICC Adobe  [OK] 134275 --> 134646 bytes (-0.28%), skipped.

2023/06/04 18:35:41 algorithm: run /usr/bin/brotli --quality=11 --output=/output/img/curved-images/curved-10.jpg.br /tmp/work/assets/img/curved-images/curved-10.jpg
2023/06/04 18:35:41 /tmp/work/assets/img/curved-images/curved-11.jpg 800x600 24bit P Exif IPTC XMP ICC Adobe  [OK] 177181 --> 176395 bytes (0.44%), optimized.

2023/06/04 18:35:41 algorithm: run /usr/bin/brotli --quality=11 --output=/output/img/curved-images/curved-11.jpg.br /tmp/work/assets/img/curved-images/curved-11.jpg
2023/06/04 18:35:41 /tmp/work/assets/img/curved-images/curved-6.jpg 800x600 24bit P Exif IPTC XMP ICC Adobe  [OK] 185597 --> 186909 bytes (-0.71%), skipped.

2023/06/04 18:35:41 algorithm: run /usr/bin/brotli --quality=11 --output=/output/img/curved-images/curved-6.jpg.br /tmp/work/assets/img/curved-images/curved-6.jpg
2023/06/04 18:35:41 br /tmp/work/assets/css/argon-dashboard.min.css -> /output/css/argon-dashboard.min.css.br
2023/06/04 18:35:41 br /tmp/work/assets/img/bg1.jpg -> /output/img/bg1.jpg.br
2023/06/04 18:35:41 gz /tmp/work/assets/img/bg1.jpg -> /output/img/bg1.jpg.gz
2023/06/04 18:35:41 compress: run /usr/bin/jpegoptim /tmp/work/assets/img/curved-images/curved-8.jpg
2023/06/04 18:35:41 gz /tmp/work/assets/css/argon-dashboard.min.css -> /output/css/argon-dashboard.min.css.gz
2023/06/04 18:35:41 compress: run /usr/bin/jpegoptim /tmp/work/assets/img/curved-images/curved0.jpg
2023/06/04 18:35:41 /tmp/work/assets/img/curved-images/curved-8.jpg 800x600 24bit P Exif IPTC XMP ICC Adobe  [OK] 108926 --> 109845 bytes (-0.84%), skipped.

2023/06/04 18:35:41 algorithm: run /usr/bin/brotli --quality=11 --output=/output/img/curved-images/curved-8.jpg.br /tmp/work/assets/img/curved-images/curved-8.jpg
2023/06/04 18:35:41 /tmp/work/assets/img/curved-images/curved0.jpg 1160x231 24bit N IPTC JFIF  [OK] 362523 --> 362523 bytes (0.00%), skipped.

2023/06/04 18:35:41 algorithm: run /usr/bin/brotli --quality=11 --output=/output/img/curved-images/curved0.jpg.br /tmp/work/assets/img/curved-images/curved0.jpg
2023/06/04 18:35:42 br /tmp/work/assets/img/curved-images/curved-10.jpg -> /output/img/curved-images/curved-10.jpg.br
2023/06/04 18:35:42 gz /tmp/work/assets/img/curved-images/curved-10.jpg -> /output/img/curved-images/curved-10.jpg.gz
2023/06/04 18:35:42 compress: run /usr/bin/jpegoptim /tmp/work/assets/img/curved-images/curved1.jpg
2023/06/04 18:35:42 /tmp/work/assets/img/curved-images/curved1.jpg 1141x806 24bit N Exif IPTC XMP ICC Adobe  [OK] 136181 --> 132368 bytes (2.80%), optimized.

2023/06/04 18:35:42 algorithm: run /usr/bin/brotli --quality=11 --output=/output/img/curved-images/curved1.jpg.br /tmp/work/assets/img/curved-images/curved1.jpg
2023/06/04 18:35:42 br /tmp/work/assets/img/curved-images/curved-11.jpg -> /output/img/curved-images/curved-11.jpg.br
2023/06/04 18:35:42 gz /tmp/work/assets/img/curved-images/curved-11.jpg -> /output/img/curved-images/curved-11.jpg.gz
2023/06/04 18:35:42 compress: run /usr/bin/jpegoptim /tmp/work/assets/img/curved-images/curved10.jpg
/tmp/work/assets/img/curved-images/curved10.jpg  [ERROR]

panic: exit status 1

goroutine 28 [running]:
github.com/cdnjs/tools/util.CheckCmd(0xc00009e000, 0x39, 0x600, 0x86a100, 0xc000384180, 0xc000384180, 0xc000649d78)
	/go/src/github.com/util/check.go:19 +0x125
github.com/cdnjs/tools/compress.Jpeg(0x86efe0, 0xc000016060, 0xc00007a690, 0x2f)
	/go/src/github.com/compress/jpeg.go:15 +0x114
main.optimizeWorker(0xc0001c46f0, 0xc0001c2960)
	/go/src/github.com/cmd/process-version/main.go:217 +0x6e5
created by main.optimizePackage
	/go/src/github.com/cmd/process-version/main.go:262 +0x24a
